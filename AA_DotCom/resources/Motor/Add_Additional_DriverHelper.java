// DO NOT EDIT: This file is automatically generated.
//
// Only the associated template file should be edited directly.
// Helper class files are automatically regenerated from the template
// files at various times, including record actions and test object
// insertion actions.  Any changes made directly to a helper class
// file will be lost when automatically updated.

package resources.Motor;
import Utilities.AA_SuperHelper;
import com.rational.test.ft.object.interfaces.*;
import com.rational.test.ft.object.interfaces.SAP.*;
import com.rational.test.ft.object.interfaces.WPF.*;
import com.rational.test.ft.object.interfaces.siebel.*;
import com.rational.test.ft.object.interfaces.flex.*;
import com.rational.test.ft.object.interfaces.dojo.*;
import com.rational.test.ft.object.interfaces.generichtmlsubdomain.*;
import com.rational.test.ft.script.*;
import com.rational.test.ft.vp.IFtVerificationPoint;
import com.ibm.rational.test.ft.object.interfaces.sapwebportal.*;
/**
 * Script Name   : <b>Add_Additional_Driver</b><br>
 * Generated     : <b>2015/02/20 09:21:25</b><br>
 * Description   : Helper class for script<br>
 * Original Host : Windows XP x86 5.1 <br>
 * 
 * @since  February 20, 2015
 * @author horned
 */
public abstract class Add_Additional_DriverHelper extends Utilities.AA_SuperHelper
{
	/**
	 * htmlBrowser: with default state.
	 *		.class : Html.HtmlBrowser
	 * 		.browserName : MS Internet Explorer
	 * 		.processName : iexplore.exe
	 */
	protected BrowserTestObject browser_htmlBrowser() 
	{
		return new BrowserTestObject(
                        getMappedTestObject("browser_htmlBrowser"));
	}
	/**
	 * htmlBrowser: with specific test context and state.
	 *		.class : Html.HtmlBrowser
	 * 		.browserName : MS Internet Explorer
	 * 		.processName : iexplore.exe
	 */
	protected BrowserTestObject browser_htmlBrowser(TestObject anchor, long flags) 
	{
		return new BrowserTestObject(
                        getMappedTestObject("browser_htmlBrowser"), anchor, flags);
	}
	
	/**
	 * AddAnotherDriver: with default state.
	 *		.id : add-another-driver
	 * 		.type : image
	 * 		.value : 
	 * 		.title : 
	 * 		.class : Html.INPUT.image
	 * 		.name : AddDriver
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_addAnotherDriver() 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_addAnotherDriver"));
	}
	/**
	 * AddAnotherDriver: with specific test context and state.
	 *		.id : add-another-driver
	 * 		.type : image
	 * 		.value : 
	 * 		.title : 
	 * 		.class : Html.INPUT.image
	 * 		.name : AddDriver
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_addAnotherDriver(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_addAnotherDriver"), anchor, flags);
	}
	
	/**
	 * AddAnotherDriversubmit: with default state.
	 *		.id : add-another-driver
	 * 		.type : submit
	 * 		.value : Add another driver
	 * 		.title : 
	 * 		.class : Html.INPUT.submit
	 * 		.name : AddDriver
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_addAnotherDriversubmit() 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_addAnotherDriversubmit"));
	}
	/**
	 * AddAnotherDriversubmit: with specific test context and state.
	 *		.id : add-another-driver
	 * 		.type : submit
	 * 		.value : Add another driver
	 * 		.title : 
	 * 		.class : Html.INPUT.submit
	 * 		.name : AddDriver
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_addAnotherDriversubmit(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_addAnotherDriversubmit"), anchor, flags);
	}
	
	/**
	 * Next: with default state.
	 *		.id : 
	 * 		.type : image
	 * 		.value : 
	 * 		.title : 
	 * 		.class : Html.INPUT.image
	 * 		.name : 
	 * 		.classIndex : 1
	 */
	protected GuiTestObject button_next() 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_next"));
	}
	/**
	 * Next: with specific test context and state.
	 *		.id : 
	 * 		.type : image
	 * 		.value : 
	 * 		.title : 
	 * 		.class : Html.INPUT.image
	 * 		.name : 
	 * 		.classIndex : 1
	 */
	protected GuiTestObject button_next(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_next"), anchor, flags);
	}
	
	/**
	 * Next: with default state.
	 *		.id : 
	 * 		.type : image
	 * 		.value : 
	 * 		.title : 
	 * 		.class : Html.INPUT.image
	 * 		.name : 
	 * 		.classIndex : 1
	 */
	protected GuiTestObject button_next2() 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_next2"));
	}
	/**
	 * Next: with specific test context and state.
	 *		.id : 
	 * 		.type : image
	 * 		.value : 
	 * 		.title : 
	 * 		.class : Html.INPUT.image
	 * 		.name : 
	 * 		.classIndex : 1
	 */
	protected GuiTestObject button_next2(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_next2"), anchor, flags);
	}
	
	/**
	 * Nextsubmit: with default state.
	 *		.id : 
	 * 		.type : submit
	 * 		.value : Next
	 * 		.title : 
	 * 		.class : Html.INPUT.submit
	 * 		.name : 
	 * 		.classIndex : 1
	 */
	protected GuiTestObject button_nextsubmit() 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_nextsubmit"));
	}
	/**
	 * Nextsubmit: with specific test context and state.
	 *		.id : 
	 * 		.type : submit
	 * 		.value : Next
	 * 		.title : 
	 * 		.class : Html.INPUT.submit
	 * 		.name : 
	 * 		.classIndex : 1
	 */
	protected GuiTestObject button_nextsubmit(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_nextsubmit"), anchor, flags);
	}
	
	/**
	 * aaMotorDrivers0UkResidentFromBirthtrue: with default state.
	 *		.id : uk-resident-from-birth
	 * 		.type : checkbox
	 * 		.value : true
	 * 		.title : 
	 * 		.class : Html.INPUT.checkbox
	 * 		.name : aa.motor.drivers[1].ukResidentFromBirth
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject checkBox_aaMotorDrivers0UkResi() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("checkBox_aaMotorDrivers0UkResi"));
	}
	/**
	 * aaMotorDrivers0UkResidentFromBirthtrue: with specific test context and state.
	 *		.id : uk-resident-from-birth
	 * 		.type : checkbox
	 * 		.value : true
	 * 		.title : 
	 * 		.class : Html.INPUT.checkbox
	 * 		.name : aa.motor.drivers[1].ukResidentFromBirth
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject checkBox_aaMotorDrivers0UkResi(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("checkBox_aaMotorDrivers0UkResi"), anchor, flags);
	}
	
	/**
	 * aaMotorDrivers1UkResidentFromBirthtrue: with default state.
	 *		.id : uk-resident-from-birth
	 * 		.type : checkbox
	 * 		.value : true
	 * 		.title : 
	 * 		.class : Html.INPUT.checkbox
	 * 		.name : aa.motor.drivers[1].ukResidentFromBirth
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject checkBox_aaMotorDrivers1UkResi() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("checkBox_aaMotorDrivers1UkResi"));
	}
	/**
	 * aaMotorDrivers1UkResidentFromBirthtrue: with specific test context and state.
	 *		.id : uk-resident-from-birth
	 * 		.type : checkbox
	 * 		.value : true
	 * 		.title : 
	 * 		.class : Html.INPUT.checkbox
	 * 		.name : aa.motor.drivers[1].ukResidentFromBirth
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject checkBox_aaMotorDrivers1UkResi(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("checkBox_aaMotorDrivers1UkResi"), anchor, flags);
	}
	
	/**
	 * CarInsuranceAdditionalDriverDetailsTheAA: with default state.
	 *		.title : Car Insurance: Additional driver details - The AA
	 * 		.class : Html.HtmlDocument
	 * 		.url : https://prelive5.theaa.com/car-insurance/buy/additional-driver-details
	 */
	protected DocumentTestObject document_carInsuranceAdditiona() 
	{
		return new DocumentTestObject(
                        getMappedTestObject("document_carInsuranceAdditiona"));
	}
	/**
	 * CarInsuranceAdditionalDriverDetailsTheAA: with specific test context and state.
	 *		.title : Car Insurance: Additional driver details - The AA
	 * 		.class : Html.HtmlDocument
	 * 		.url : https://prelive5.theaa.com/car-insurance/buy/additional-driver-details
	 */
	protected DocumentTestObject document_carInsuranceAdditiona(TestObject anchor, long flags) 
	{
		return new DocumentTestObject(
                        getMappedTestObject("document_carInsuranceAdditiona"), anchor, flags);
	}
	
	/**
	 * CarInsuranceAdditionalDriverDetailsTheAA: with default state.
	 *		.title : Car Insurance: Additional driver details - The AA
	 * 		.class : Html.HtmlDocument
	 * 		.url : https://prelive5.theaa.com/car-insurance/buy/additional-driver-details#
	 */
	protected DocumentTestObject document_carInsuranceAdditiona2() 
	{
		return new DocumentTestObject(
                        getMappedTestObject("document_carInsuranceAdditiona2"));
	}
	/**
	 * CarInsuranceAdditionalDriverDetailsTheAA: with specific test context and state.
	 *		.title : Car Insurance: Additional driver details - The AA
	 * 		.class : Html.HtmlDocument
	 * 		.url : https://prelive5.theaa.com/car-insurance/buy/additional-driver-details#
	 */
	protected DocumentTestObject document_carInsuranceAdditiona2(TestObject anchor, long flags) 
	{
		return new DocumentTestObject(
                        getMappedTestObject("document_carInsuranceAdditiona2"), anchor, flags);
	}
	
	/**
	 * CarInsuranceYourDetailsTheAA: with default state.
	 *		.title : Car Insurance: Your details - The AA
	 * 		.class : Html.HtmlDocument
	 * 		.url : https://prelive5.theaa.com/car-insurance/buy/policyholder-details
	 */
	protected DocumentTestObject document_carInsuranceYourDetai() 
	{
		return new DocumentTestObject(
                        getMappedTestObject("document_carInsuranceYourDetai"));
	}
	/**
	 * CarInsuranceYourDetailsTheAA: with specific test context and state.
	 *		.title : Car Insurance: Your details - The AA
	 * 		.class : Html.HtmlDocument
	 * 		.url : https://prelive5.theaa.com/car-insurance/buy/policyholder-details
	 */
	protected DocumentTestObject document_carInsuranceYourDetai(TestObject anchor, long flags) 
	{
		return new DocumentTestObject(
                        getMappedTestObject("document_carInsuranceYourDetai"), anchor, flags);
	}
	
	/**
	 * businessType_suggest_item0: with default state.
	 *		.id : business-type_suggest_item0
	 * 		.title : 
	 * 		.class : Html.DIV
	 * 		.classIndex : 0
	 */
	protected GuiTestObject html_businessType_suggest_item() 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_businessType_suggest_item"));
	}
	/**
	 * businessType_suggest_item0: with specific test context and state.
	 *		.id : business-type_suggest_item0
	 * 		.title : 
	 * 		.class : Html.DIV
	 * 		.classIndex : 0
	 */
	protected GuiTestObject html_businessType_suggest_item(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_businessType_suggest_item"), anchor, flags);
	}
	
	/**
	 * mainOccupation_suggest_item0: with default state.
	 *		.id : main-occupation_suggest_item0
	 * 		.title : 
	 * 		.class : Html.DIV
	 * 		.classIndex : 0
	 */
	protected GuiTestObject html_mainOccupation_suggest_it() 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_mainOccupation_suggest_it"));
	}
	/**
	 * mainOccupation_suggest_item0: with specific test context and state.
	 *		.id : main-occupation_suggest_item0
	 * 		.title : 
	 * 		.class : Html.DIV
	 * 		.classIndex : 0
	 */
	protected GuiTestObject html_mainOccupation_suggest_it(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_mainOccupation_suggest_it"), anchor, flags);
	}
	
	/**
	 * mainwrap: with default state.
	 *		.id : mainwrap
	 * 		.title : 
	 * 		.class : Html.DIV
	 * 		.classIndex : 0
	 */
	protected GuiTestObject html_mainwrap() 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_mainwrap"));
	}
	/**
	 * mainwrap: with specific test context and state.
	 *		.id : mainwrap
	 * 		.title : 
	 * 		.class : Html.DIV
	 * 		.classIndex : 0
	 */
	protected GuiTestObject html_mainwrap(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_mainwrap"), anchor, flags);
	}
	
	/**
	 * FindTheAddress: with default state.
	 *		.alt : Find the address
	 * 		.id : 
	 * 		.src : https://prelive5.theaa.com/resources/images/journeys/buttons/find-address.png
	 * 		.title : 
	 * 		.class : Html.IMG
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected StatelessGuiSubitemTestObject image_findTheAddress() 
	{
		return new StatelessGuiSubitemTestObject(
                        getMappedTestObject("image_findTheAddress"));
	}
	/**
	 * FindTheAddress: with specific test context and state.
	 *		.alt : Find the address
	 * 		.id : 
	 * 		.src : https://prelive5.theaa.com/resources/images/journeys/buttons/find-address.png
	 * 		.title : 
	 * 		.class : Html.IMG
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected StatelessGuiSubitemTestObject image_findTheAddress(TestObject anchor, long flags) 
	{
		return new StatelessGuiSubitemTestObject(
                        getMappedTestObject("image_findTheAddress"), anchor, flags);
	}
	
	/**
	 * aaMotorDrivers0LicenceHeldFromYear: with default state.
	 *		.text : Year 2013 2012 2011 2010 2009 2008 2007 2006 2005 2004 2003 2002 2001 2000 1999  ...
	 * 		.id : license-held-year
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : aa.motor.drivers[0].licenceHeldFrom.year
	 * 		.classIndex : 2
	 */
	protected SelectGuiSubitemTestObject list_aaMotorDrivers0LicenceHel() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_aaMotorDrivers0LicenceHel"));
	}
	/**
	 * aaMotorDrivers0LicenceHeldFromYear: with specific test context and state.
	 *		.text : Year 2013 2012 2011 2010 2009 2008 2007 2006 2005 2004 2003 2002 2001 2000 1999  ...
	 * 		.id : license-held-year
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : aa.motor.drivers[0].licenceHeldFrom.year
	 * 		.classIndex : 2
	 */
	protected SelectGuiSubitemTestObject list_aaMotorDrivers0LicenceHel(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_aaMotorDrivers0LicenceHel"), anchor, flags);
	}
	
	/**
	 * aaMotorDrivers1LicenceHeldFromYear: with default state.
	 *		.text : Year 2013 2012 2011 2010 2009 2008 2007 2006 2005 2004 2003 2002 2001 2000 1999  ...
	 * 		.id : license-held-year
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : aa.motor.drivers[1].licenceHeldFrom.year
	 * 		.classIndex : 3
	 */
	protected SelectGuiSubitemTestObject list_aaMotorDrivers1LicenceHel() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_aaMotorDrivers1LicenceHel"));
	}
	/**
	 * aaMotorDrivers1LicenceHeldFromYear: with specific test context and state.
	 *		.text : Year 2013 2012 2011 2010 2009 2008 2007 2006 2005 2004 2003 2002 2001 2000 1999  ...
	 * 		.id : license-held-year
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : aa.motor.drivers[1].licenceHeldFrom.year
	 * 		.classIndex : 3
	 */
	protected SelectGuiSubitemTestObject list_aaMotorDrivers1LicenceHel(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_aaMotorDrivers1LicenceHel"), anchor, flags);
	}
	
	/**
	 * aaMotorDrivers1Relationship: with default state.
	 *		.text : Please select Spouse/Civil Partner Son or Daughter Other Family Member Unrelated ...
	 * 		.id : relationship
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : aa.motor.drivers[1].relationship
	 * 		.classIndex : 2
	 */
	protected SelectGuiSubitemTestObject list_aaMotorDrivers1Relationsh() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_aaMotorDrivers1Relationsh"));
	}
	/**
	 * aaMotorDrivers1Relationship: with specific test context and state.
	 *		.text : Please select Spouse/Civil Partner Son or Daughter Other Family Member Unrelated ...
	 * 		.id : relationship
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : aa.motor.drivers[1].relationship
	 * 		.classIndex : 2
	 */
	protected SelectGuiSubitemTestObject list_aaMotorDrivers1Relationsh(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_aaMotorDrivers1Relationsh"), anchor, flags);
	}
	
	/**
	 * aaMotorPreviousPolicyInsurer: with default state.
	 *		.text : Please select No previous insurance A-Plan A.A.Star (AA) A.G.F. (AA) A.G.F. A.L. ...
	 * 		.id : previous-insurer
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : aa.motor.previousPolicy.insurer
	 * 		.classIndex : 4
	 */
	protected SelectGuiSubitemTestObject list_aaMotorPreviousPolicyInsu() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_aaMotorPreviousPolicyInsu"));
	}
	/**
	 * aaMotorPreviousPolicyInsurer: with specific test context and state.
	 *		.text : Please select No previous insurance A-Plan A.A.Star (AA) A.G.F. (AA) A.G.F. A.L. ...
	 * 		.id : previous-insurer
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : aa.motor.previousPolicy.insurer
	 * 		.classIndex : 4
	 */
	protected SelectGuiSubitemTestObject list_aaMotorPreviousPolicyInsu(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_aaMotorPreviousPolicyInsu"), anchor, flags);
	}
	
	/**
	 * aaMotorPreviousPolicyNcd: with default state.
	 *		.text : Please select None 1 2 3 4 5 6 7 8 9 or more
	 * 		.id : no-claims-discount
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : aa.motor.previousPolicy.ncd
	 * 		.classIndex : 5
	 */
	protected SelectGuiSubitemTestObject list_aaMotorPreviousPolicyNcd() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_aaMotorPreviousPolicyNcd"));
	}
	/**
	 * aaMotorPreviousPolicyNcd: with specific test context and state.
	 *		.text : Please select None 1 2 3 4 5 6 7 8 9 or more
	 * 		.id : no-claims-discount
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : aa.motor.previousPolicy.ncd
	 * 		.classIndex : 5
	 */
	protected SelectGuiSubitemTestObject list_aaMotorPreviousPolicyNcd(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_aaMotorPreviousPolicyNcd"), anchor, flags);
	}
	
	/**
	 * aaMotorDrivers1HasClaimsfalse: with default state.
	 *		.id : insurance-claims-no
	 * 		.type : radio
	 * 		.value : false
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : aa.motor.drivers[1].hasClaims
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_Additional_Driver_Claims_No() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_Additional_Driver_Claims_No"));
	}
	/**
	 * aaMotorDrivers1HasClaimsfalse: with specific test context and state.
	 *		.id : insurance-claims-no
	 * 		.type : radio
	 * 		.value : false
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : aa.motor.drivers[1].hasClaims
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_Additional_Driver_Claims_No(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_Additional_Driver_Claims_No"), anchor, flags);
	}
	
	/**
	 * aaMotorDrivers1HasClaimstrue: with default state.
	 *		.id : insurance-claims-yes
	 * 		.type : radio
	 * 		.value : true
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : aa.motor.drivers[1].hasClaims
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_Additional_Driver_Claims_Yes() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_Additional_Driver_Claims_Yes"));
	}
	/**
	 * aaMotorDrivers1HasClaimstrue: with specific test context and state.
	 *		.id : insurance-claims-yes
	 * 		.type : radio
	 * 		.value : true
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : aa.motor.drivers[1].hasClaims
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_Additional_Driver_Claims_Yes(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_Additional_Driver_Claims_Yes"), anchor, flags);
	}
	
	/**
	 * aaMotorDrivers1HasConvictionsfalse: with default state.
	 *		.id : motoring-offense-no
	 * 		.type : radio
	 * 		.value : false
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : aa.motor.drivers[1].hasConvictions
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_Additional_Driver_Convictions_No() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_Additional_Driver_Convictions_No"));
	}
	/**
	 * aaMotorDrivers1HasConvictionsfalse: with specific test context and state.
	 *		.id : motoring-offense-no
	 * 		.type : radio
	 * 		.value : false
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : aa.motor.drivers[1].hasConvictions
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_Additional_Driver_Convictions_No(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_Additional_Driver_Convictions_No"), anchor, flags);
	}
	
	/**
	 * aaMotorDrivers1HasConvictionstrue: with default state.
	 *		.id : motoring-offense-yes
	 * 		.type : radio
	 * 		.value : true
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : aa.motor.drivers[1].hasConvictions
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_Additional_Driver_Convictions_Yes() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_Additional_Driver_Convictions_Yes"));
	}
	/**
	 * aaMotorDrivers1HasConvictionstrue: with specific test context and state.
	 *		.id : motoring-offense-yes
	 * 		.type : radio
	 * 		.value : true
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : aa.motor.drivers[1].hasConvictions
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_Additional_Driver_Convictions_Yes(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_Additional_Driver_Convictions_Yes"), anchor, flags);
	}
	
	/**
	 * aaMotorAdddrivers1OtherVehiclePolicyHoldertrue: with default state.
	 *		.id : main-driver-yes
	 * 		.type : radio
	 * 		.value : true
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : aa.motor.adddrivers[1].otherVehiclePolicyHolder
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_Additional_Driver_Other_Car_Yes() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_Additional_Driver_Other_Car_Yes"));
	}
	/**
	 * aaMotorAdddrivers1OtherVehiclePolicyHoldertrue: with specific test context and state.
	 *		.id : main-driver-yes
	 * 		.type : radio
	 * 		.value : true
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : aa.motor.adddrivers[1].otherVehiclePolicyHolder
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_Additional_Driver_Other_Car_Yes(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_Additional_Driver_Other_Car_Yes"), anchor, flags);
	}
	
	/**
	 * aaMotorDrivers1TitleMISS: with default state.
	 *		.id : title-miss
	 * 		.type : radio
	 * 		.value : MISS
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : aa.motor.drivers[1].title
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_Additional_Driver_Title_Miss() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_Additional_Driver_Title_Miss"));
	}
	/**
	 * aaMotorDrivers1TitleMISS: with specific test context and state.
	 *		.id : title-miss
	 * 		.type : radio
	 * 		.value : MISS
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : aa.motor.drivers[1].title
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_Additional_Driver_Title_Miss(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_Additional_Driver_Title_Miss"), anchor, flags);
	}
	
	/**
	 * aaMotorDrivers1TitleMR: with default state.
	 *		.id : title-mr
	 * 		.type : radio
	 * 		.value : MR
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : aa.motor.drivers[1].title
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_Additional_Driver_Title_Mr() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_Additional_Driver_Title_Mr"));
	}
	/**
	 * aaMotorDrivers1TitleMR: with specific test context and state.
	 *		.id : title-mr
	 * 		.type : radio
	 * 		.value : MR
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : aa.motor.drivers[1].title
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_Additional_Driver_Title_Mr(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_Additional_Driver_Title_Mr"), anchor, flags);
	}
	
	/**
	 * aaMotorDrivers1TitleMRS: with default state.
	 *		.id : title-mrs
	 * 		.type : radio
	 * 		.value : MRS
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : aa.motor.drivers[1].title
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_Additional_Driver_Title_Mrs() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_Additional_Driver_Title_Mrs"));
	}
	/**
	 * aaMotorDrivers1TitleMRS: with specific test context and state.
	 *		.id : title-mrs
	 * 		.type : radio
	 * 		.value : MRS
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : aa.motor.drivers[1].title
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_Additional_Driver_Title_Mrs(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_Additional_Driver_Title_Mrs"), anchor, flags);
	}
	
	/**
	 * aaMotorDrivers1TitleMS: with default state.
	 *		.id : title-ms
	 * 		.type : radio
	 * 		.value : MS
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : aa.motor.drivers[1].title
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_Additional_Driver_Title_Ms() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_Additional_Driver_Title_Ms"));
	}
	/**
	 * aaMotorDrivers1TitleMS: with specific test context and state.
	 *		.id : title-ms
	 * 		.type : radio
	 * 		.value : MS
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : aa.motor.drivers[1].title
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_Additional_Driver_Title_Ms(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_Additional_Driver_Title_Ms"), anchor, flags);
	}
	
	/**
	 * aaMotorCoverTypeCOMPREHENSIVE: with default state.
	 *		.id : comprehensive
	 * 		.type : radio
	 * 		.value : COMPREHENSIVE
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : aa.motor.cover.type
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_Cover_Comp() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_Cover_Comp"));
	}
	/**
	 * aaMotorCoverTypeCOMPREHENSIVE: with specific test context and state.
	 *		.id : comprehensive
	 * 		.type : radio
	 * 		.value : COMPREHENSIVE
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : aa.motor.cover.type
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_Cover_Comp(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_Cover_Comp"), anchor, flags);
	}
	
	/**
	 * aaMotorCoverTypeTPFT: with default state.
	 *		.id : third-party-fire-theft
	 * 		.type : radio
	 * 		.value : TPFT
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : aa.motor.cover.type
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_Cover_TPFT() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_Cover_TPFT"));
	}
	/**
	 * aaMotorCoverTypeTPFT: with specific test context and state.
	 *		.id : third-party-fire-theft
	 * 		.type : radio
	 * 		.value : TPFT
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : aa.motor.cover.type
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_Cover_TPFT(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_Cover_TPFT"), anchor, flags);
	}
	
	/**
	 * aaMotorCoverTypeTP: with default state.
	 *		.id : third-party-only
	 * 		.type : radio
	 * 		.value : TP
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : aa.motor.cover.type
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_Cover_TPO() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_Cover_TPO"));
	}
	/**
	 * aaMotorCoverTypeTP: with specific test context and state.
	 *		.id : third-party-only
	 * 		.type : radio
	 * 		.value : TP
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : aa.motor.cover.type
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_Cover_TPO(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_Cover_TPO"), anchor, flags);
	}
	
	/**
	 * aaMotorDrivers0HasClaimsfalse: with default state.
	 *		.id : insurance-claims-no
	 * 		.type : radio
	 * 		.value : false
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : aa.motor.drivers[0].hasClaims
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_Proposer_Claims_No() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_Proposer_Claims_No"));
	}
	/**
	 * aaMotorDrivers0HasClaimsfalse: with specific test context and state.
	 *		.id : insurance-claims-no
	 * 		.type : radio
	 * 		.value : false
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : aa.motor.drivers[0].hasClaims
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_Proposer_Claims_No(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_Proposer_Claims_No"), anchor, flags);
	}
	
	/**
	 * aaMotorDrivers0HasClaimstrue: with default state.
	 *		.id : insurance-claims-yes
	 * 		.type : radio
	 * 		.value : true
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : aa.motor.drivers[0].hasClaims
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_Proposer_Claims_Yes() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_Proposer_Claims_Yes"));
	}
	/**
	 * aaMotorDrivers0HasClaimstrue: with specific test context and state.
	 *		.id : insurance-claims-yes
	 * 		.type : radio
	 * 		.value : true
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : aa.motor.drivers[0].hasClaims
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_Proposer_Claims_Yes(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_Proposer_Claims_Yes"), anchor, flags);
	}
	
	/**
	 * aaMotorDrivers0HasConvictionsfalse: with default state.
	 *		.id : motoring-offense-no
	 * 		.type : radio
	 * 		.value : false
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : aa.motor.drivers[0].hasConvictions
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_Proposer_Convictions_No() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_Proposer_Convictions_No"));
	}
	/**
	 * aaMotorDrivers0HasConvictionsfalse: with specific test context and state.
	 *		.id : motoring-offense-no
	 * 		.type : radio
	 * 		.value : false
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : aa.motor.drivers[0].hasConvictions
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_Proposer_Convictions_No(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_Proposer_Convictions_No"), anchor, flags);
	}
	
	/**
	 * aaMotorDrivers0HasConvictionstrue: with default state.
	 *		.id : motoring-offense-yes
	 * 		.type : radio
	 * 		.value : true
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : aa.motor.drivers[0].hasConvictions
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_Proposer_Convictions_Yes() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_Proposer_Convictions_Yes"));
	}
	/**
	 * aaMotorDrivers0HasConvictionstrue: with specific test context and state.
	 *		.id : motoring-offense-yes
	 * 		.type : radio
	 * 		.value : true
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : aa.motor.drivers[0].hasConvictions
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_Proposer_Convictions_Yes(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_Proposer_Convictions_Yes"), anchor, flags);
	}
	
	/**
	 * aaMotorDrivers0TitleMISS: with default state.
	 *		.id : title-miss
	 * 		.type : radio
	 * 		.value : MISS
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : aa.motor.drivers[0].title
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_Proposer_Title_Miss() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_Proposer_Title_Miss"));
	}
	/**
	 * aaMotorDrivers0TitleMISS: with specific test context and state.
	 *		.id : title-miss
	 * 		.type : radio
	 * 		.value : MISS
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : aa.motor.drivers[0].title
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_Proposer_Title_Miss(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_Proposer_Title_Miss"), anchor, flags);
	}
	
	/**
	 * aaMotorDrivers0TitleMR: with default state.
	 *		.id : title-mr
	 * 		.type : radio
	 * 		.value : MR
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : aa.motor.drivers[0].title
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_Proposer_Title_Mr() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_Proposer_Title_Mr"));
	}
	/**
	 * aaMotorDrivers0TitleMR: with specific test context and state.
	 *		.id : title-mr
	 * 		.type : radio
	 * 		.value : MR
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : aa.motor.drivers[0].title
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_Proposer_Title_Mr(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_Proposer_Title_Mr"), anchor, flags);
	}
	
	/**
	 * aaMotorDrivers0TitleMRS: with default state.
	 *		.id : title-mrs
	 * 		.type : radio
	 * 		.value : MRS
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : aa.motor.drivers[1].title
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_Proposer_Title_Mrs() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_Proposer_Title_Mrs"));
	}
	/**
	 * aaMotorDrivers0TitleMRS: with specific test context and state.
	 *		.id : title-mrs
	 * 		.type : radio
	 * 		.value : MRS
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : aa.motor.drivers[1].title
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_Proposer_Title_Mrs(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_Proposer_Title_Mrs"), anchor, flags);
	}
	
	/**
	 * aaMotorDrivers0TitleMS: with default state.
	 *		.id : title-ms
	 * 		.type : radio
	 * 		.value : MS
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : aa.motor.drivers[0].title
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_Proposer_Title_Ms() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_Proposer_Title_Ms"));
	}
	/**
	 * aaMotorDrivers0TitleMS: with specific test context and state.
	 *		.id : title-ms
	 * 		.type : radio
	 * 		.value : MS
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : aa.motor.drivers[0].title
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_Proposer_Title_Ms(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_Proposer_Title_Ms"), anchor, flags);
	}
	
	/**
	 * aaMotorDrivers1BusinessUsefalse: with default state.
	 *		.id : social-domestic-yes
	 * 		.type : radio
	 * 		.value : false
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : aa.motor.drivers[1].businessUse
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_aaMotorDrivers1Bus() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_aaMotorDrivers1Bus"));
	}
	/**
	 * aaMotorDrivers1BusinessUsefalse: with specific test context and state.
	 *		.id : social-domestic-yes
	 * 		.type : radio
	 * 		.value : false
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : aa.motor.drivers[1].businessUse
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_aaMotorDrivers1Bus(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_aaMotorDrivers1Bus"), anchor, flags);
	}
	
	/**
	 * aaMotorDrivers1MaritalStatusMARRIED: with default state.
	 *		.id : marital-status-married
	 * 		.type : radio
	 * 		.value : MARRIED
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : aa.motor.drivers[1].maritalStatus
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_aaMotorDrivers1Mar() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_aaMotorDrivers1Mar"));
	}
	/**
	 * aaMotorDrivers1MaritalStatusMARRIED: with specific test context and state.
	 *		.id : marital-status-married
	 * 		.type : radio
	 * 		.value : MARRIED
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : aa.motor.drivers[1].maritalStatus
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_aaMotorDrivers1Mar(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_aaMotorDrivers1Mar"), anchor, flags);
	}
	
	/**
	 * aaMotorDrivers1MaritalStatusSINGLE: with default state.
	 *		.id : marital-status-single
	 * 		.type : radio
	 * 		.value : SINGLE
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : aa.motor.drivers[1].maritalStatus
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_aaMotorDrivers1Mar2() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_aaMotorDrivers1Mar2"));
	}
	/**
	 * aaMotorDrivers1MaritalStatusSINGLE: with specific test context and state.
	 *		.id : marital-status-single
	 * 		.type : radio
	 * 		.value : SINGLE
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : aa.motor.drivers[1].maritalStatus
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_aaMotorDrivers1Mar2(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_aaMotorDrivers1Mar2"), anchor, flags);
	}
	
	/**
	 * aaMotorDrivers1NonUKLicensefalse: with default state.
	 *		.id : uk-licence-yes
	 * 		.type : radio
	 * 		.value : false
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : aa.motor.drivers[1].nonUKLicense
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_aaMotorDrivers1Non() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_aaMotorDrivers1Non"));
	}
	/**
	 * aaMotorDrivers1NonUKLicensefalse: with specific test context and state.
	 *		.id : uk-licence-yes
	 * 		.type : radio
	 * 		.value : false
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : aa.motor.drivers[1].nonUKLicense
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_aaMotorDrivers1Non(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_aaMotorDrivers1Non"), anchor, flags);
	}
	
	/**
	 * aaMotorDrivers1FirstName: with default state.
	 *		.id : first-name
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : aa.motor.drivers[1].firstName
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject text_Additional_Driver_FirstName() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_Additional_Driver_FirstName"));
	}
	/**
	 * aaMotorDrivers1FirstName: with specific test context and state.
	 *		.id : first-name
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : aa.motor.drivers[1].firstName
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject text_Additional_Driver_FirstName(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_Additional_Driver_FirstName"), anchor, flags);
	}
	
	/**
	 * aaMotorDrivers1LastName: with default state.
	 *		.id : surname
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : aa.motor.drivers[1].lastName
	 * 		.classIndex : 1
	 */
	protected TextGuiTestObject text_Additional_Driver_LastName() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_Additional_Driver_LastName"));
	}
	/**
	 * aaMotorDrivers1LastName: with specific test context and state.
	 *		.id : surname
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : aa.motor.drivers[1].lastName
	 * 		.classIndex : 1
	 */
	protected TextGuiTestObject text_Additional_Driver_LastName(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_Additional_Driver_LastName"), anchor, flags);
	}
	
	/**
	 * aaMotorDrivers0FirstName: with default state.
	 *		.id : first-name
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : aa.motor.drivers[0].firstName
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject text_Proposer_FirstName() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_Proposer_FirstName"));
	}
	/**
	 * aaMotorDrivers0FirstName: with specific test context and state.
	 *		.id : first-name
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : aa.motor.drivers[0].firstName
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject text_Proposer_FirstName(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_Proposer_FirstName"), anchor, flags);
	}
	
	/**
	 * aaMotorDrivers0AddressHouseNumber: with default state.
	 *		.id : house-name
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : aa.motor.drivers[0].address.house.number
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject text_Proposer_House_Number() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_Proposer_House_Number"));
	}
	/**
	 * aaMotorDrivers0AddressHouseNumber: with specific test context and state.
	 *		.id : house-name
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : aa.motor.drivers[0].address.house.number
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject text_Proposer_House_Number(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_Proposer_House_Number"), anchor, flags);
	}
	
	/**
	 * aaMotorDrivers0LastName: with default state.
	 *		.id : surname
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : aa.motor.drivers[0].lastName
	 * 		.classIndex : 1
	 */
	protected TextGuiTestObject text_Proposer_LastName() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_Proposer_LastName"));
	}
	/**
	 * aaMotorDrivers0LastName: with specific test context and state.
	 *		.id : surname
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : aa.motor.drivers[0].lastName
	 * 		.classIndex : 1
	 */
	protected TextGuiTestObject text_Proposer_LastName(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_Proposer_LastName"), anchor, flags);
	}
	
	/**
	 * aaMotorDrivers0AddressHousePostcode: with default state.
	 *		.id : lookup-postcode
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : aa.motor.drivers[0].address.house.postcode
	 * 		.classIndex : 1
	 */
	protected TextGuiTestObject text_Proposer_Postcode() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_Proposer_Postcode"));
	}
	/**
	 * aaMotorDrivers0AddressHousePostcode: with specific test context and state.
	 *		.id : lookup-postcode
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : aa.motor.drivers[0].address.house.postcode
	 * 		.classIndex : 1
	 */
	protected TextGuiTestObject text_Proposer_Postcode(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_Proposer_Postcode"), anchor, flags);
	}
	
	/**
	 * aaMobileNumber: with default state.
	 *		.id : mobile
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : aa.mobileNumber
	 * 		.classIndex : 4
	 */
	protected TextGuiTestObject text_aaMobileNumber() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_aaMobileNumber"));
	}
	/**
	 * aaMobileNumber: with specific test context and state.
	 *		.id : mobile
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : aa.mobileNumber
	 * 		.classIndex : 4
	 */
	protected TextGuiTestObject text_aaMobileNumber(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_aaMobileNumber"), anchor, flags);
	}
	
	/**
	 * aaMotorCoverStart: with default state.
	 *		.id : policy-start-date
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : aa.motor.cover.start
	 * 		.classIndex : 10
	 */
	protected TextGuiTestObject text_aaMotorCoverStart() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_aaMotorCoverStart"));
	}
	/**
	 * aaMotorCoverStart: with specific test context and state.
	 *		.id : policy-start-date
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : aa.motor.cover.start
	 * 		.classIndex : 10
	 */
	protected TextGuiTestObject text_aaMotorCoverStart(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_aaMotorCoverStart"), anchor, flags);
	}
	
	/**
	 * aaMotorDrivers0Email0: with default state.
	 *		.id : email
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : aa.motor.drivers[0].email[0]
	 * 		.classIndex : 5
	 */
	protected TextGuiTestObject text_aaMotorDrivers0Email0() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_aaMotorDrivers0Email0"));
	}
	/**
	 * aaMotorDrivers0Email0: with specific test context and state.
	 *		.id : email
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : aa.motor.drivers[0].email[0]
	 * 		.classIndex : 5
	 */
	protected TextGuiTestObject text_aaMotorDrivers0Email0(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_aaMotorDrivers0Email0"), anchor, flags);
	}
	
	/**
	 * aaMotorDrivers0Fulltimebusiness: with default state.
	 *		.id : business-type
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : aa.motor.drivers[0].fulltimebusiness
	 * 		.classIndex : 7
	 */
	protected TextGuiTestObject text_aaMotorDrivers0Fulltimebu() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_aaMotorDrivers0Fulltimebu"));
	}
	/**
	 * aaMotorDrivers0Fulltimebusiness: with specific test context and state.
	 *		.id : business-type
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : aa.motor.drivers[0].fulltimebusiness
	 * 		.classIndex : 7
	 */
	protected TextGuiTestObject text_aaMotorDrivers0Fulltimebu(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_aaMotorDrivers0Fulltimebu"), anchor, flags);
	}
	
	/**
	 * aaMotorDrivers0Occupationinformation: with default state.
	 *		.id : main-occupation
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : aa.motor.drivers[0].occupationinformation
	 * 		.classIndex : 6
	 */
	protected TextGuiTestObject text_aaMotorDrivers0Occupation() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_aaMotorDrivers0Occupation"));
	}
	/**
	 * aaMotorDrivers0Occupationinformation: with specific test context and state.
	 *		.id : main-occupation
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : aa.motor.drivers[0].occupationinformation
	 * 		.classIndex : 6
	 */
	protected TextGuiTestObject text_aaMotorDrivers0Occupation(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_aaMotorDrivers0Occupation"), anchor, flags);
	}
	
	/**
	 * aaMotorDrivers1Fulltimebusiness: with default state.
	 *		.id : business-type
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : aa.motor.drivers[1].fulltimebusiness
	 * 		.classIndex : 4
	 */
	protected TextGuiTestObject text_aaMotorDrivers1Fulltimebu() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_aaMotorDrivers1Fulltimebu"));
	}
	/**
	 * aaMotorDrivers1Fulltimebusiness: with specific test context and state.
	 *		.id : business-type
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : aa.motor.drivers[1].fulltimebusiness
	 * 		.classIndex : 4
	 */
	protected TextGuiTestObject text_aaMotorDrivers1Fulltimebu(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_aaMotorDrivers1Fulltimebu"), anchor, flags);
	}
	
	/**
	 * aaMotorDrivers1Occupationinformation: with default state.
	 *		.id : main-occupation
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : aa.motor.drivers[1].occupationinformation
	 * 		.classIndex : 3
	 */
	protected TextGuiTestObject text_aaMotorDrivers1Occupation() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_aaMotorDrivers1Occupation"));
	}
	/**
	 * aaMotorDrivers1Occupationinformation: with specific test context and state.
	 *		.id : main-occupation
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : aa.motor.drivers[1].occupationinformation
	 * 		.classIndex : 3
	 */
	protected TextGuiTestObject text_aaMotorDrivers1Occupation(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_aaMotorDrivers1Occupation"), anchor, flags);
	}
	
	/**
	 * aaMotorPreviousPolicyExpiryDate: with default state.
	 *		.id : policy-end-date
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : aa.motor.previousPolicyExpiryDate
	 * 		.classIndex : 9
	 */
	protected TextGuiTestObject text_aaMotorPreviousPolicyExpi() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_aaMotorPreviousPolicyExpi"));
	}
	/**
	 * aaMotorPreviousPolicyExpiryDate: with specific test context and state.
	 *		.id : policy-end-date
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : aa.motor.previousPolicyExpiryDate
	 * 		.classIndex : 9
	 */
	protected TextGuiTestObject text_aaMotorPreviousPolicyExpi(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_aaMotorPreviousPolicyExpi"), anchor, flags);
	}
	
	/**
	 * aaTelephoneNumber: with default state.
	 *		.id : telephone
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : aa.telephoneNumber
	 * 		.classIndex : 3
	 */
	protected TextGuiTestObject text_aaTelephoneNumber() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_aaTelephoneNumber"));
	}
	/**
	 * aaTelephoneNumber: with specific test context and state.
	 *		.id : telephone
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : aa.telephoneNumber
	 * 		.classIndex : 3
	 */
	protected TextGuiTestObject text_aaTelephoneNumber(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_aaTelephoneNumber"), anchor, flags);
	}
	
	/**
	 * dateOfBirth: with default state.
	 *		.id : birth-date
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : date-of-birth
	 * 		.classIndex : 2
	 */
	protected TextGuiTestObject text_dateOfBirth() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_dateOfBirth"));
	}
	/**
	 * dateOfBirth: with specific test context and state.
	 *		.id : birth-date
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : date-of-birth
	 * 		.classIndex : 2
	 */
	protected TextGuiTestObject text_dateOfBirth(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_dateOfBirth"), anchor, flags);
	}
	
	/**
	 * dateOfBirth: with default state.
	 *		.id : birth-date
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : date-of-birth
	 * 		.classIndex : 2
	 */
	protected TextGuiTestObject text_dateOfBirth2() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_dateOfBirth2"));
	}
	/**
	 * dateOfBirth: with specific test context and state.
	 *		.id : birth-date
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : date-of-birth
	 * 		.classIndex : 2
	 */
	protected TextGuiTestObject text_dateOfBirth2(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_dateOfBirth2"), anchor, flags);
	}
	
	

	protected Add_Additional_DriverHelper()
	{
		setScriptName("Motor.Add_Additional_Driver");
	}
	
}

