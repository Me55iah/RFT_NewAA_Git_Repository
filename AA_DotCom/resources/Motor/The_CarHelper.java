// DO NOT EDIT: This file is automatically generated.
//
// Only the associated template file should be edited directly.
// Helper class files are automatically regenerated from the template
// files at various times, including record actions and test object
// insertion actions.  Any changes made directly to a helper class
// file will be lost when automatically updated.

package resources.Motor;
import Utilities.AA_SuperHelper;
import com.rational.test.ft.object.interfaces.*;
import com.rational.test.ft.object.interfaces.SAP.*;
import com.rational.test.ft.object.interfaces.WPF.*;
import com.rational.test.ft.object.interfaces.siebel.*;
import com.rational.test.ft.object.interfaces.flex.*;
import com.rational.test.ft.object.interfaces.dojo.*;
import com.rational.test.ft.object.interfaces.generichtmlsubdomain.*;
import com.rational.test.ft.script.*;
import com.rational.test.ft.vp.IFtVerificationPoint;
import com.ibm.rational.test.ft.object.interfaces.sapwebportal.*;
/**
 * Script Name   : <b>The_Car</b><br>
 * Generated     : <b>2015/05/27 09:41:59</b><br>
 * Description   : Helper class for script<br>
 * Original Host : Windows 7 x86 6.1 <br>
 * 
 * @since  May 27, 2015
 * @author horned
 */
public abstract class The_CarHelper extends Utilities.AA_SuperHelper
{
	/**
	 * htmlBrowser: with default state.
	 *		.class : Html.HtmlBrowser
	 * 		.browserName : MS Internet Explorer
	 * 		.processName : iexplore.exe
	 */
	protected BrowserTestObject browser_htmlBrowser() 
	{
		return new BrowserTestObject(
                        getMappedTestObject("browser_htmlBrowser"));
	}
	/**
	 * htmlBrowser: with specific test context and state.
	 *		.class : Html.HtmlBrowser
	 * 		.browserName : MS Internet Explorer
	 * 		.processName : iexplore.exe
	 */
	protected BrowserTestObject browser_htmlBrowser(TestObject anchor, long flags) 
	{
		return new BrowserTestObject(
                        getMappedTestObject("browser_htmlBrowser"), anchor, flags);
	}
	
	/**
	 * Nextsubmit: with default state.
	 *		.id : 
	 * 		.type : submit
	 * 		.value : Next
	 * 		.title : 
	 * 		.class : Html.INPUT.submit
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_nextsubmit() 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_nextsubmit"));
	}
	/**
	 * Nextsubmit: with specific test context and state.
	 *		.id : 
	 * 		.type : submit
	 * 		.value : Next
	 * 		.title : 
	 * 		.class : Html.INPUT.submit
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_nextsubmit(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_nextsubmit"), anchor, flags);
	}
	
	/**
	 * Nextsubmit: with default state.
	 *		.id : 
	 * 		.type : submit
	 * 		.value : Next
	 * 		.title : 
	 * 		.class : Html.INPUT.submit
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_nextsubmit2() 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_nextsubmit2"));
	}
	/**
	 * Nextsubmit: with specific test context and state.
	 *		.id : 
	 * 		.type : submit
	 * 		.value : Next
	 * 		.title : 
	 * 		.class : Html.INPUT.submit
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_nextsubmit2(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_nextsubmit2"), anchor, flags);
	}
	
	/**
	 * aaMotorDrivers0OtherVehiclePolicyHoldertrue: with default state.
	 *		.id : policyholder-other-car
	 * 		.type : checkbox
	 * 		.value : true
	 * 		.title : 
	 * 		.class : Html.INPUT.checkbox
	 * 		.name : aa.motor.drivers[0].otherVehiclePolicyHolder
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject checkBox_aaMotorDriversOther_1() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("checkBox_aaMotorDriversOther_1"));
	}
	/**
	 * aaMotorDrivers0OtherVehiclePolicyHoldertrue: with specific test context and state.
	 *		.id : policyholder-other-car
	 * 		.type : checkbox
	 * 		.value : true
	 * 		.title : 
	 * 		.class : Html.INPUT.checkbox
	 * 		.name : aa.motor.drivers[0].otherVehiclePolicyHolder
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject checkBox_aaMotorDriversOther_1(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("checkBox_aaMotorDriversOther_1"), anchor, flags);
	}
	
	/**
	 * aaMotorDrivers0OtherVehicleCompanyCarMainDrivertrue: with default state.
	 *		.id : company-car
	 * 		.type : checkbox
	 * 		.value : true
	 * 		.title : 
	 * 		.class : Html.INPUT.checkbox
	 * 		.name : aa.motor.drivers[0].otherVehicleCompanyCarMainDriver
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject checkBox_aaMotorDriversOther_2() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("checkBox_aaMotorDriversOther_2"));
	}
	/**
	 * aaMotorDrivers0OtherVehicleCompanyCarMainDrivertrue: with specific test context and state.
	 *		.id : company-car
	 * 		.type : checkbox
	 * 		.value : true
	 * 		.title : 
	 * 		.class : Html.INPUT.checkbox
	 * 		.name : aa.motor.drivers[0].otherVehicleCompanyCarMainDriver
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject checkBox_aaMotorDriversOther_2(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("checkBox_aaMotorDriversOther_2"), anchor, flags);
	}
	
	/**
	 * aaMotorDrivers0OtherVehicleNamedDrivertrue: with default state.
	 *		.id : named-driver-other-car
	 * 		.type : checkbox
	 * 		.value : true
	 * 		.title : 
	 * 		.class : Html.INPUT.checkbox
	 * 		.name : aa.motor.drivers[0].otherVehicleNamedDriver
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject checkBox_aaMotorDriversOther_3() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("checkBox_aaMotorDriversOther_3"));
	}
	/**
	 * aaMotorDrivers0OtherVehicleNamedDrivertrue: with specific test context and state.
	 *		.id : named-driver-other-car
	 * 		.type : checkbox
	 * 		.value : true
	 * 		.title : 
	 * 		.class : Html.INPUT.checkbox
	 * 		.name : aa.motor.drivers[0].otherVehicleNamedDriver
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject checkBox_aaMotorDriversOther_3(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("checkBox_aaMotorDriversOther_3"), anchor, flags);
	}
	
	/**
	 * aaMotorNotOwnCartrue: with default state.
	 *		.id : bought-it
	 * 		.type : checkbox
	 * 		.value : true
	 * 		.title : 
	 * 		.class : Html.INPUT.checkbox
	 * 		.name : aa.motor.notOwnCar
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject checkBox_aaMotorNotOwnCartrue() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("checkBox_aaMotorNotOwnCartrue"));
	}
	/**
	 * aaMotorNotOwnCartrue: with specific test context and state.
	 *		.id : bought-it
	 * 		.type : checkbox
	 * 		.value : true
	 * 		.title : 
	 * 		.class : Html.INPUT.checkbox
	 * 		.name : aa.motor.notOwnCar
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject checkBox_aaMotorNotOwnCartrue(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("checkBox_aaMotorNotOwnCartrue"), anchor, flags);
	}
	
	/**
	 * CarInsuranceTheCarTheAA: with default state.
	 *		.title : Car Insurance: The car - The AA
	 * 		.class : Html.HtmlDocument
	 * 		.url : RegularExpression(https://.*\.theaa\.com/car-insurance/buy/car-details\#)
	 */
	protected DocumentTestObject document_carInsuranceTheCarThe() 
	{
		return new DocumentTestObject(
                        getMappedTestObject("document_carInsuranceTheCarThe"));
	}
	/**
	 * CarInsuranceTheCarTheAA: with specific test context and state.
	 *		.title : Car Insurance: The car - The AA
	 * 		.class : Html.HtmlDocument
	 * 		.url : RegularExpression(https://.*\.theaa\.com/car-insurance/buy/car-details\#)
	 */
	protected DocumentTestObject document_carInsuranceTheCarThe(TestObject anchor, long flags) 
	{
		return new DocumentTestObject(
                        getMappedTestObject("document_carInsuranceTheCarThe"), anchor, flags);
	}
	
	/**
	 * CarInsuranceTheCarTheAA: with default state.
	 *		.title : Car Insurance: The car - The AA
	 * 		.class : Html.HtmlDocument
	 * 		.url : https://prelive5.theaa.com/car-insurance/buy/car-details
	 */
	protected DocumentTestObject document_carInsuranceTheCarThe2() 
	{
		return new DocumentTestObject(
                        getMappedTestObject("document_carInsuranceTheCarThe2"));
	}
	/**
	 * CarInsuranceTheCarTheAA: with specific test context and state.
	 *		.title : Car Insurance: The car - The AA
	 * 		.class : Html.HtmlDocument
	 * 		.url : https://prelive5.theaa.com/car-insurance/buy/car-details
	 */
	protected DocumentTestObject document_carInsuranceTheCarThe2(TestObject anchor, long flags) 
	{
		return new DocumentTestObject(
                        getMappedTestObject("document_carInsuranceTheCarThe2"), anchor, flags);
	}
	
	/**
	 * aaVehicleValue: with default state.
	 *		.id : worth
	 * 		.title : 
	 * 		.class : Html.INPUT.number
	 * 		.name : aa.vehicle.value
	 * 		.classIndex : 0
	 */
	protected GuiTestObject html_aaVehicleValue() 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_aaVehicleValue"));
	}
	/**
	 * aaVehicleValue: with specific test context and state.
	 *		.id : worth
	 * 		.title : 
	 * 		.class : Html.INPUT.number
	 * 		.name : aa.vehicle.value
	 * 		.classIndex : 0
	 */
	protected GuiTestObject html_aaVehicleValue(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_aaVehicleValue"), anchor, flags);
	}
	
	/**
	 * AboutYourCar1: with default state.
	 *		.id : mileage
	 * 		.title : 
	 * 		.class : Html.INPUT.number
	 * 		.name : AboutYourCar1
	 * 		.classIndex : 1
	 */
	protected GuiTestObject html_aboutYourCar1() 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_aboutYourCar1"));
	}
	/**
	 * AboutYourCar1: with specific test context and state.
	 *		.id : mileage
	 * 		.title : 
	 * 		.class : Html.INPUT.number
	 * 		.name : AboutYourCar1
	 * 		.classIndex : 1
	 */
	protected GuiTestObject html_aboutYourCar1(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_aboutYourCar1"), anchor, flags);
	}
	
	/**
	 * foundVehicle: with default state.
	 *		.id : foundVehicle
	 * 		.title : 
	 * 		.class : Html.DIV
	 */
	protected GuiTestObject html_foundVehicle() 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_foundVehicle"));
	}
	/**
	 * foundVehicle: with specific test context and state.
	 *		.id : foundVehicle
	 * 		.title : 
	 * 		.class : Html.DIV
	 */
	protected GuiTestObject html_foundVehicle(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_foundVehicle"), anchor, flags);
	}
	
	/**
	 * FindTheCar: with default state.
	 *		.alt : Find the car
	 * 		.id : 
	 * 		.src : https://prelive5.theaa.com/resources/images/journeys/buttons/find.png
	 * 		.title : 
	 * 		.class : Html.IMG
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected StatelessGuiSubitemTestObject image_findTheCar() 
	{
		return new StatelessGuiSubitemTestObject(
                        getMappedTestObject("image_findTheCar"));
	}
	/**
	 * FindTheCar: with specific test context and state.
	 *		.alt : Find the car
	 * 		.id : 
	 * 		.src : https://prelive5.theaa.com/resources/images/journeys/buttons/find.png
	 * 		.title : 
	 * 		.class : Html.IMG
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected StatelessGuiSubitemTestObject image_findTheCar(TestObject anchor, long flags) 
	{
		return new StatelessGuiSubitemTestObject(
                        getMappedTestObject("image_findTheCar"), anchor, flags);
	}
	
	/**
	 * ChangeCar: with default state.
	 *		.text : Change car
	 * 		.screenLeft : 541
	 * 		.href : RegularExpression(https://.*\.theaa\.com/car-insurance/buy/car-details\#)
	 * 		.id : 
	 * 		.screenTop : 345
	 * 		.title : 
	 * 		.class : Html.A
	 * 		.disabled : false
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject link_changeCar() 
	{
		return new GuiTestObject(
                        getMappedTestObject("link_changeCar"));
	}
	/**
	 * ChangeCar: with specific test context and state.
	 *		.text : Change car
	 * 		.screenLeft : 541
	 * 		.href : RegularExpression(https://.*\.theaa\.com/car-insurance/buy/car-details\#)
	 * 		.id : 
	 * 		.screenTop : 345
	 * 		.title : 
	 * 		.class : Html.A
	 * 		.disabled : false
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject link_changeCar(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("link_changeCar"), anchor, flags);
	}
	
	/**
	 * registrationConfirm: with default state.
	 *		.text : Find the car
	 * 		.id : registration-confirm
	 * 		.href : RegularExpression(https://.*theaa\.com/car-insurance/buy/car-details\#)
	 * 		.title : 
	 * 		.class : Html.A
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject link_registrationConfirm() 
	{
		return new GuiTestObject(
                        getMappedTestObject("link_registrationConfirm"));
	}
	/**
	 * registrationConfirm: with specific test context and state.
	 *		.text : Find the car
	 * 		.id : registration-confirm
	 * 		.href : RegularExpression(https://.*theaa\.com/car-insurance/buy/car-details\#)
	 * 		.title : 
	 * 		.class : Html.A
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject link_registrationConfirm(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("link_registrationConfirm"), anchor, flags);
	}
	
	/**
	 * aaMotorVehicleNoOfSeats: with default state.
	 *		.text : Please select 1 2 3 4 5 6 7 8 9
	 * 		.id : seats
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : aa.motor.vehicle.noOfSeats
	 * 		.classIndex : 0
	 */
	protected SelectGuiSubitemTestObject list_aaMotorVehicleNoOfSeats() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_aaMotorVehicleNoOfSeats"));
	}
	/**
	 * aaMotorVehicleNoOfSeats: with specific test context and state.
	 *		.text : Please select 1 2 3 4 5 6 7 8 9
	 * 		.id : seats
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : aa.motor.vehicle.noOfSeats
	 * 		.classIndex : 0
	 */
	protected SelectGuiSubitemTestObject list_aaMotorVehicleNoOfSeats(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_aaMotorVehicleNoOfSeats"), anchor, flags);
	}
	
	/**
	 * aaMotorVehicleRegisteredTo: with default state.
	 *		.text : Please select Policyholder Spouse/Civil Partner Parent Leased (private) Leased ( ...
	 * 		.id : VEHICLE_KEEPER
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : aa.motor.vehicle.registeredTo
	 * 		.classIndex : 6
	 */
	protected SelectGuiSubitemTestObject list_aaMotorVehicleRegisteredT() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_aaMotorVehicleRegisteredT"));
	}
	/**
	 * aaMotorVehicleRegisteredTo: with specific test context and state.
	 *		.text : Please select Policyholder Spouse/Civil Partner Parent Leased (private) Leased ( ...
	 * 		.id : VEHICLE_KEEPER
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : aa.motor.vehicle.registeredTo
	 * 		.classIndex : 6
	 */
	protected SelectGuiSubitemTestObject list_aaMotorVehicleRegisteredT(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_aaMotorVehicleRegisteredT"), anchor, flags);
	}
	
	/**
	 * aaMotorVehicleVehicleOwner: with default state.
	 *		.text : Please select Policyholder Spouse/Civil Partner Parent Leased (private) Leased ( ...
	 * 		.id : VEHICLE_OWNER
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : aa.motor.vehicle.vehicleOwner
	 * 		.classIndex : 5
	 */
	protected SelectGuiSubitemTestObject list_aaMotorVehicleVehicleOwne() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_aaMotorVehicleVehicleOwne"));
	}
	/**
	 * aaMotorVehicleVehicleOwner: with specific test context and state.
	 *		.text : Please select Policyholder Spouse/Civil Partner Parent Leased (private) Leased ( ...
	 * 		.id : VEHICLE_OWNER
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : aa.motor.vehicle.vehicleOwner
	 * 		.classIndex : 5
	 */
	protected SelectGuiSubitemTestObject list_aaMotorVehicleVehicleOwne(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_aaMotorVehicleVehicleOwne"), anchor, flags);
	}
	
	/**
	 * aaVehiclePurchaseMonth: with default state.
	 *		.text : Month January February March April May June July August September October Novemb ...
	 * 		.id : purchased-month
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : aa.vehicle.purchase.month
	 * 		.classIndex : 3
	 */
	protected SelectGuiSubitemTestObject list_aaVehiclePurchaseMonth() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_aaVehiclePurchaseMonth"));
	}
	/**
	 * aaVehiclePurchaseMonth: with specific test context and state.
	 *		.text : Month January February March April May June July August September October Novemb ...
	 * 		.id : purchased-month
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : aa.vehicle.purchase.month
	 * 		.classIndex : 3
	 */
	protected SelectGuiSubitemTestObject list_aaVehiclePurchaseMonth(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_aaVehiclePurchaseMonth"), anchor, flags);
	}
	
	/**
	 * aaVehiclePurchaseMonth: with default state.
	 *		.text : Month January February March April May June July August September October Novemb ...
	 * 		.id : purchased-month
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : aa.vehicle.purchase.month
	 * 		.classIndex : 3
	 */
	protected SelectGuiSubitemTestObject list_aaVehiclePurchaseMonth2() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_aaVehiclePurchaseMonth2"));
	}
	/**
	 * aaVehiclePurchaseMonth: with specific test context and state.
	 *		.text : Month January February March April May June July August September October Novemb ...
	 * 		.id : purchased-month
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : aa.vehicle.purchase.month
	 * 		.classIndex : 3
	 */
	protected SelectGuiSubitemTestObject list_aaVehiclePurchaseMonth2(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_aaVehiclePurchaseMonth2"), anchor, flags);
	}
	
	/**
	 * aaVehiclePurchaseMonth: with default state.
	 *		.text : Month January February March April May June July August September October Novemb ...
	 * 		.id : purchased-month
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : aa.vehicle.purchase.month
	 * 		.classIndex : 3
	 */
	protected SelectGuiSubitemTestObject list_aaVehiclePurchaseMonth3() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_aaVehiclePurchaseMonth3"));
	}
	/**
	 * aaVehiclePurchaseMonth: with specific test context and state.
	 *		.text : Month January February March April May June July August September October Novemb ...
	 * 		.id : purchased-month
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : aa.vehicle.purchase.month
	 * 		.classIndex : 3
	 */
	protected SelectGuiSubitemTestObject list_aaVehiclePurchaseMonth3(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_aaVehiclePurchaseMonth3"), anchor, flags);
	}
	
	/**
	 * aaVehiclePurchaseYear: with default state.
	 *		.text : Year 2013 2012 2011 2010 2009 2008 2007 2006 2005 2004 2003 2002 2001 2000 1999  ...
	 * 		.id : purchased-year
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : aa.vehicle.purchase.year
	 * 		.classIndex : 4
	 */
	protected SelectGuiSubitemTestObject list_aaVehiclePurchaseYear() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_aaVehiclePurchaseYear"));
	}
	/**
	 * aaVehiclePurchaseYear: with specific test context and state.
	 *		.text : Year 2013 2012 2011 2010 2009 2008 2007 2006 2005 2004 2003 2002 2001 2000 1999  ...
	 * 		.id : purchased-year
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : aa.vehicle.purchase.year
	 * 		.classIndex : 4
	 */
	protected SelectGuiSubitemTestObject list_aaVehiclePurchaseYear(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_aaVehiclePurchaseYear"), anchor, flags);
	}
	
	/**
	 * aaVehiclePurchaseYear: with default state.
	 *		.text : Year 2013 2012 2011 2010 2009 2008 2007 2006 2005 2004 2003 2002 2001 2000 1999  ...
	 * 		.id : purchased-year
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : aa.vehicle.purchase.year
	 * 		.classIndex : 4
	 */
	protected SelectGuiSubitemTestObject list_aaVehiclePurchaseYear2() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_aaVehiclePurchaseYear2"));
	}
	/**
	 * aaVehiclePurchaseYear: with specific test context and state.
	 *		.text : Year 2013 2012 2011 2010 2009 2008 2007 2006 2005 2004 2003 2002 2001 2000 1999  ...
	 * 		.id : purchased-year
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : aa.vehicle.purchase.year
	 * 		.classIndex : 4
	 */
	protected SelectGuiSubitemTestObject list_aaVehiclePurchaseYear2(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_aaVehiclePurchaseYear2"), anchor, flags);
	}
	
	/**
	 * aaVehiclePurchaseYear: with default state.
	 *		.text : Year 2013 2012 2011 2010 2009 2008 2007 2006 2005 2004 2003 2002 2001 2000 1999  ...
	 * 		.id : purchased-year
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : aa.vehicle.purchase.year
	 * 		.classIndex : 4
	 */
	protected SelectGuiSubitemTestObject list_aaVehiclePurchaseYear3() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_aaVehiclePurchaseYear3"));
	}
	/**
	 * aaVehiclePurchaseYear: with specific test context and state.
	 *		.text : Year 2013 2012 2011 2010 2009 2008 2007 2006 2005 2004 2003 2002 2001 2000 1999  ...
	 * 		.id : purchased-year
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : aa.vehicle.purchase.year
	 * 		.classIndex : 4
	 */
	protected SelectGuiSubitemTestObject list_aaVehiclePurchaseYear3(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_aaVehiclePurchaseYear3"), anchor, flags);
	}
	
	/**
	 * aaVehicleUsage: with default state.
	 *		.text : Social, Domestic, Pleasure & Commuting (No Business Use) Social, Domestic, Pleas ...
	 * 		.id : VEHICLE_USE
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : aa.vehicle.usage
	 * 		.classIndex : 7
	 */
	protected SelectGuiSubitemTestObject list_aaVehicleUsage() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_aaVehicleUsage"));
	}
	/**
	 * aaVehicleUsage: with specific test context and state.
	 *		.text : Social, Domestic, Pleasure & Commuting (No Business Use) Social, Domestic, Pleas ...
	 * 		.id : VEHICLE_USE
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : aa.vehicle.usage
	 * 		.classIndex : 7
	 */
	protected SelectGuiSubitemTestObject list_aaVehicleUsage(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_aaVehicleUsage"), anchor, flags);
	}
	
	/**
	 * aaVehicleUsage: with default state.
	 *		.text : Social, Domestic, Pleasure & Commuting (No Business Use) Social, Domestic, Pleas ...
	 * 		.id : VEHICLE_USE
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : aa.vehicle.usage
	 * 		.classIndex : 7
	 */
	protected SelectGuiSubitemTestObject list_aaVehicleUsage2() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_aaVehicleUsage2"));
	}
	/**
	 * aaVehicleUsage: with specific test context and state.
	 *		.text : Social, Domestic, Pleasure & Commuting (No Business Use) Social, Domestic, Pleas ...
	 * 		.id : VEHICLE_USE
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : aa.vehicle.usage
	 * 		.classIndex : 7
	 */
	protected SelectGuiSubitemTestObject list_aaVehicleUsage2(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_aaVehicleUsage2"), anchor, flags);
	}
	
	/**
	 * AboutYourCar0: with default state.
	 *		.text : Please select Locked Garage Driveway Carport Street Public Place Unlocked Garage
	 * 		.id : kept-overnight
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : AboutYourCar0
	 * 		.classIndex : 8
	 */
	protected SelectGuiSubitemTestObject list_aboutYourCar0() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_aboutYourCar0"));
	}
	/**
	 * AboutYourCar0: with specific test context and state.
	 *		.text : Please select Locked Garage Driveway Carport Street Public Place Unlocked Garage
	 * 		.id : kept-overnight
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : AboutYourCar0
	 * 		.classIndex : 8
	 */
	protected SelectGuiSubitemTestObject list_aboutYourCar0(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_aboutYourCar0"), anchor, flags);
	}
	
	/**
	 * AboutYourCar1: with default state.
	 *		.text : Please select Locked Garage Driveway or Carport Street Public Place Unlocked Gar ...
	 * 		.id : kept-overnight
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : RegularExpression(AboutYourCar.*)
	 * 		.classIndex : 8
	 */
	protected SelectGuiSubitemTestObject list_aboutYourCar1() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_aboutYourCar1"));
	}
	/**
	 * AboutYourCar1: with specific test context and state.
	 *		.text : Please select Locked Garage Driveway or Carport Street Public Place Unlocked Gar ...
	 * 		.id : kept-overnight
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : RegularExpression(AboutYourCar.*)
	 * 		.classIndex : 8
	 */
	protected SelectGuiSubitemTestObject list_aboutYourCar1(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_aboutYourCar1"), anchor, flags);
	}
	
	/**
	 * AboutYourCar2: with default state.
	 *		.text : Please select Locked Garage Driveway Carport Street Public Place Unlocked Garage
	 * 		.id : kept-overnight
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : AboutYourCar2
	 * 		.classIndex : 8
	 */
	protected SelectGuiSubitemTestObject list_whereVehicleKept() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_whereVehicleKept"));
	}
	/**
	 * AboutYourCar2: with specific test context and state.
	 *		.text : Please select Locked Garage Driveway Carport Street Public Place Unlocked Garage
	 * 		.id : kept-overnight
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : AboutYourCar2
	 * 		.classIndex : 8
	 */
	protected SelectGuiSubitemTestObject list_whereVehicleKept(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_whereVehicleKept"), anchor, flags);
	}
	
	/**
	 * aaMotorDrivers0UseOfOtherVehiclesfalse: with default state.
	 *		.id : other-vehicles-no
	 * 		.type : radio
	 * 		.value : false
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : aa.motor.drivers[0].useOfOtherVehicles
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_aaMotorDrivers0Use() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_aaMotorDrivers0Use"));
	}
	/**
	 * aaMotorDrivers0UseOfOtherVehiclesfalse: with specific test context and state.
	 *		.id : other-vehicles-no
	 * 		.type : radio
	 * 		.value : false
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : aa.motor.drivers[0].useOfOtherVehicles
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_aaMotorDrivers0Use(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_aaMotorDrivers0Use"), anchor, flags);
	}
	
	/**
	 * aaMotorDrivers0UseOfOtherVehiclestrue: with default state.
	 *		.id : other-vehicles-yes
	 * 		.type : radio
	 * 		.value : true
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : aa.motor.drivers[0].useOfOtherVehicles
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_aaMotorDrivers0Use2() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_aaMotorDrivers0Use2"));
	}
	/**
	 * aaMotorDrivers0UseOfOtherVehiclestrue: with specific test context and state.
	 *		.id : other-vehicles-yes
	 * 		.type : radio
	 * 		.value : true
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : aa.motor.drivers[0].useOfOtherVehicles
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_aaMotorDrivers0Use2(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_aaMotorDrivers0Use2"), anchor, flags);
	}
	
	/**
	 * aaMotorDrivers0UseOfOtherVehiclesfalse: with default state.
	 *		.id : other-vehicles-no
	 * 		.type : radio
	 * 		.value : false
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : aa.motor.drivers[0].useOfOtherVehicles
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_aaMotorDrivers0Use3() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_aaMotorDrivers0Use3"));
	}
	/**
	 * aaMotorDrivers0UseOfOtherVehiclesfalse: with specific test context and state.
	 *		.id : other-vehicles-no
	 * 		.type : radio
	 * 		.value : false
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : aa.motor.drivers[0].useOfOtherVehicles
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_aaMotorDrivers0Use3(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_aaMotorDrivers0Use3"), anchor, flags);
	}
	
	/**
	 * aaMotorDrivers0UseOfOtherVehiclestrue: with default state.
	 *		.id : other-vehicles-yes
	 * 		.type : radio
	 * 		.value : true
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : aa.motor.drivers[0].useOfOtherVehicles
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_aaMotorDrivers0Use4() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_aaMotorDrivers0Use4"));
	}
	/**
	 * aaMotorDrivers0UseOfOtherVehiclestrue: with specific test context and state.
	 *		.id : other-vehicles-yes
	 * 		.type : radio
	 * 		.value : true
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : aa.motor.drivers[0].useOfOtherVehicles
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_aaMotorDrivers0Use4(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_aaMotorDrivers0Use4"), anchor, flags);
	}
	
	/**
	 * aaVehicleKeptLocationHOME: with default state.
	 *		.id : kept-home
	 * 		.type : radio
	 * 		.value : HOME
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : aa.vehicle.keptLocation
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_aaVehicleKeptLocat() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_aaVehicleKeptLocat"));
	}
	/**
	 * aaVehicleKeptLocationHOME: with specific test context and state.
	 *		.id : kept-home
	 * 		.type : radio
	 * 		.value : HOME
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : aa.vehicle.keptLocation
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_aaVehicleKeptLocat(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_aaVehicleKeptLocat"), anchor, flags);
	}
	
	/**
	 * aaVehicleModifiedfalse: with default state.
	 *		.id : modified-no
	 * 		.type : radio
	 * 		.value : false
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : aa.vehicle.modified
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_aaVehicleModifiedf() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_aaVehicleModifiedf"));
	}
	/**
	 * aaVehicleModifiedfalse: with specific test context and state.
	 *		.id : modified-no
	 * 		.type : radio
	 * 		.value : false
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : aa.vehicle.modified
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_aaVehicleModifiedf(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_aaVehicleModifiedf"), anchor, flags);
	}
	
	/**
	 * aaVehicleRhdfalse: with default state.
	 *		.id : right-hand-no
	 * 		.type : radio
	 * 		.value : false
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : aa.vehicle.rhd
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_aaVehicleRhdfalse() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_aaVehicleRhdfalse"));
	}
	/**
	 * aaVehicleRhdfalse: with specific test context and state.
	 *		.id : right-hand-no
	 * 		.type : radio
	 * 		.value : false
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : aa.vehicle.rhd
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_aaVehicleRhdfalse(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_aaVehicleRhdfalse"), anchor, flags);
	}
	
	/**
	 * aaVehicleRhdtrue: with default state.
	 *		.id : right-hand-yes
	 * 		.type : radio
	 * 		.value : true
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : aa.vehicle.rhd
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_aaVehicleRhdtrue() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_aaVehicleRhdtrue"));
	}
	/**
	 * aaVehicleRhdtrue: with specific test context and state.
	 *		.id : right-hand-yes
	 * 		.type : radio
	 * 		.value : true
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : aa.vehicle.rhd
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_aaVehicleRhdtrue(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_aaVehicleRhdtrue"), anchor, flags);
	}
	
	/**
	 * AboutYourCar0MANUFACTURER_STANDARD_FIT: with default state.
	 *		.id : security-type-standard
	 * 		.type : radio
	 * 		.value : MANUFACTURER_STANDARD_FIT
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : AboutYourCar0
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_aboutYourCar0MANUF() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_aboutYourCar0MANUF"));
	}
	/**
	 * AboutYourCar0MANUFACTURER_STANDARD_FIT: with specific test context and state.
	 *		.id : security-type-standard
	 * 		.type : radio
	 * 		.value : MANUFACTURER_STANDARD_FIT
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : AboutYourCar0
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_aboutYourCar0MANUF(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_aboutYourCar0MANUF"), anchor, flags);
	}
	
	/**
	 * AboutYourCar1MANUFACTURER_STANDARD_FIT: with default state.
	 *		.id : security-type-standard
	 * 		.type : radio
	 * 		.value : MANUFACTURER_STANDARD_FIT
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : AboutYourCar1
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_aboutYourCar1MANUF() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_aboutYourCar1MANUF"));
	}
	/**
	 * AboutYourCar1MANUFACTURER_STANDARD_FIT: with specific test context and state.
	 *		.id : security-type-standard
	 * 		.type : radio
	 * 		.value : MANUFACTURER_STANDARD_FIT
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : AboutYourCar1
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_aboutYourCar1MANUF(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_aboutYourCar1MANUF"), anchor, flags);
	}
	
	/**
	 * AboutYourCar2MANUFACTURER_STANDARD_FIT: with default state.
	 *		.id : security-type-standard
	 * 		.type : radio
	 * 		.value : MANUFACTURER_STANDARD_FIT
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : RegularExpression(.*)
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_aboutYourCar2MANUF() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_aboutYourCar2MANUF"));
	}
	/**
	 * AboutYourCar2MANUFACTURER_STANDARD_FIT: with specific test context and state.
	 *		.id : security-type-standard
	 * 		.type : radio
	 * 		.value : MANUFACTURER_STANDARD_FIT
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : RegularExpression(.*)
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_aboutYourCar2MANUF(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_aboutYourCar2MANUF"), anchor, flags);
	}
	
	/**
	 * aaVehicleReg: with default state.
	 *		.id : registration
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : aa.vehicle.reg
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject text_aaVehicleReg() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_aaVehicleReg"));
	}
	/**
	 * aaVehicleReg: with specific test context and state.
	 *		.id : registration
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : aa.vehicle.reg
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject text_aaVehicleReg(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_aaVehicleReg"), anchor, flags);
	}
	
	/**
	 * aaVehicleValue: with default state.
	 *		.id : worth
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : aa.vehicle.value
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject text_aaVehicleValue() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_aaVehicleValue"));
	}
	/**
	 * aaVehicleValue: with specific test context and state.
	 *		.id : worth
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : aa.vehicle.value
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject text_aaVehicleValue(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_aaVehicleValue"), anchor, flags);
	}
	
	/**
	 * aaVehicleValue: with default state.
	 *		.id : worth
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : aa.vehicle.value
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject text_aaVehicleValue2() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_aaVehicleValue2"));
	}
	/**
	 * aaVehicleValue: with specific test context and state.
	 *		.id : worth
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : aa.vehicle.value
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject text_aaVehicleValue2(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_aaVehicleValue2"), anchor, flags);
	}
	
	/**
	 * AboutYourCar0: with default state.
	 *		.id : mileage
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : AboutYourCar0
	 * 		.classIndex : 1
	 */
	protected TextGuiTestObject text_aboutYourCar0() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_aboutYourCar0"));
	}
	/**
	 * AboutYourCar0: with specific test context and state.
	 *		.id : mileage
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : AboutYourCar0
	 * 		.classIndex : 1
	 */
	protected TextGuiTestObject text_aboutYourCar0(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_aboutYourCar0"), anchor, flags);
	}
	
	/**
	 * AboutYourCar1: with default state.
	 *		.id : mileage
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : RegularExpression(.*)
	 * 		.classIndex : 1
	 */
	protected TextGuiTestObject text_aboutYourCar1() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_aboutYourCar1"));
	}
	/**
	 * AboutYourCar1: with specific test context and state.
	 *		.id : mileage
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : RegularExpression(.*)
	 * 		.classIndex : 1
	 */
	protected TextGuiTestObject text_aboutYourCar1(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_aboutYourCar1"), anchor, flags);
	}
	
	/**
	 * AboutYourCar2: with default state.
	 *		.id : mileage
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : AboutYourCar2
	 * 		.classIndex : 1
	 */
	protected TextGuiTestObject text_aboutYourCar2() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_aboutYourCar2"));
	}
	/**
	 * AboutYourCar2: with specific test context and state.
	 *		.id : mileage
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : AboutYourCar2
	 * 		.classIndex : 1
	 */
	protected TextGuiTestObject text_aboutYourCar2(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_aboutYourCar2"), anchor, flags);
	}
	
	/**
	 * AboutYourCar2: with default state.
	 *		.id : mileage
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : AboutYourCar2
	 * 		.classIndex : 1
	 */
	protected TextGuiTestObject text_aboutYourCar2_2() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_aboutYourCar2_2"));
	}
	/**
	 * AboutYourCar2: with specific test context and state.
	 *		.id : mileage
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : AboutYourCar2
	 * 		.classIndex : 1
	 */
	protected TextGuiTestObject text_aboutYourCar2_2(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_aboutYourCar2_2"), anchor, flags);
	}
	
	/**
	 * AboutYourCar1: with default state.
	 *		.id : mileage
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : AboutYourCar1
	 * 		.classIndex : 1
	 */
	protected TextGuiTestObject text_annualMileage() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_annualMileage"));
	}
	/**
	 * AboutYourCar1: with specific test context and state.
	 *		.id : mileage
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : AboutYourCar1
	 * 		.classIndex : 1
	 */
	protected TextGuiTestObject text_annualMileage(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_annualMileage"), anchor, flags);
	}
	
	

	protected The_CarHelper()
	{
		setScriptName("Motor.The_Car");
	}
	
}

