// DO NOT EDIT: This file is automatically generated.
//
// Only the associated template file should be edited directly.
// Helper class files are automatically regenerated from the template
// files at various times, including record actions and test object
// insertion actions.  Any changes made directly to a helper class
// file will be lost when automatically updated.

package resources.HER;

import com.rational.test.ft.object.interfaces.*;
import com.rational.test.ft.object.interfaces.SAP.*;
import com.rational.test.ft.object.interfaces.WPF.*;
import com.rational.test.ft.object.interfaces.siebel.*;
import com.rational.test.ft.object.interfaces.flex.*;
import com.rational.test.ft.object.interfaces.dojo.*;
import com.rational.test.ft.object.interfaces.generichtmlsubdomain.*;
import com.rational.test.ft.script.*;
import com.rational.test.ft.vp.IFtVerificationPoint;
import com.ibm.rational.test.ft.object.interfaces.sapwebportal.*;
/**
 * Script Name   : <b>Your_Payment</b><br>
 * Generated     : <b>2013/04/09 15:06:36</b><br>
 * Description   : Helper class for script<br>
 * Original Host : Windows XP x86 5.1 <br>
 * 
 * @since  April 09, 2013
 * @author courtl
 */
public abstract class Your_PaymentHelper extends RationalTestScript
{
	/**
	 * Submit: with default state.
	 *		.id : next-ass
	 * 		.type : image
	 * 		.value : Submit
	 * 		.title : 
	 * 		.class : Html.INPUT.image
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_submit() 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_submit"));
	}
	/**
	 * Submit: with specific test context and state.
	 *		.id : next-ass
	 * 		.type : image
	 * 		.value : Submit
	 * 		.title : 
	 * 		.class : Html.INPUT.image
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_submit(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_submit"), anchor, flags);
	}
	
	/**
	 * confirmAuthorisedForDDpaymentstrue: with default state.
	 *		.id : confirmAuthorisedForDDpayments
	 * 		.type : checkbox
	 * 		.value : true
	 * 		.title : 
	 * 		.class : Html.INPUT.checkbox
	 * 		.name : confirmAuthorisedForDDpayments
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject checkBox_confirmAuthorisedForD() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("checkBox_confirmAuthorisedForD"));
	}
	/**
	 * confirmAuthorisedForDDpaymentstrue: with specific test context and state.
	 *		.id : confirmAuthorisedForDDpayments
	 * 		.type : checkbox
	 * 		.value : true
	 * 		.title : 
	 * 		.class : Html.INPUT.checkbox
	 * 		.name : confirmAuthorisedForDDpayments
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject checkBox_confirmAuthorisedForD(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("checkBox_confirmAuthorisedForD"), anchor, flags);
	}
	
	/**
	 * termsAndConditionsConfirmtrue: with default state.
	 *		.id : termsAndConditionsConfirm
	 * 		.type : checkbox
	 * 		.value : true
	 * 		.title : 
	 * 		.class : Html.INPUT.checkbox
	 * 		.name : termsAndConditionsConfirm
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject checkBox_termsAndConditionsCon() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("checkBox_termsAndConditionsCon"));
	}
	/**
	 * termsAndConditionsConfirmtrue: with specific test context and state.
	 *		.id : termsAndConditionsConfirm
	 * 		.type : checkbox
	 * 		.value : true
	 * 		.title : 
	 * 		.class : Html.INPUT.checkbox
	 * 		.name : termsAndConditionsConfirm
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject checkBox_termsAndConditionsCon(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("checkBox_termsAndConditionsCon"), anchor, flags);
	}
	
	/**
	 * aside: with default state.
	 *		.id : aside
	 * 		.title : 
	 * 		.class : Html.DIV
	 * 		.classIndex : 1
	 */
	protected GuiTestObject html_aside() 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_aside"));
	}
	/**
	 * aside: with specific test context and state.
	 *		.id : aside
	 * 		.title : 
	 * 		.class : Html.DIV
	 * 		.classIndex : 1
	 */
	protected GuiTestObject html_aside(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_aside"), anchor, flags);
	}
	
	/**
	 * aside: with default state.
	 *		.id : aside
	 * 		.class : Html.DIV
	 * 		.title : 
	 * 		.classIndex : 1
	 */
	protected GuiTestObject html_aside2() 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_aside2"));
	}
	/**
	 * aside: with specific test context and state.
	 *		.id : aside
	 * 		.class : Html.DIV
	 * 		.title : 
	 * 		.classIndex : 1
	 */
	protected GuiTestObject html_aside2(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_aside2"), anchor, flags);
	}
	
	/**
	 * main: with default state.
	 *		.id : main
	 * 		.title : 
	 * 		.class : Html.DIV
	 * 		.classIndex : 0
	 */
	protected GuiTestObject html_main() 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_main"));
	}
	/**
	 * main: with specific test context and state.
	 *		.id : main
	 * 		.title : 
	 * 		.class : Html.DIV
	 * 		.classIndex : 0
	 */
	protected GuiTestObject html_main(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_main"), anchor, flags);
	}
	
	/**
	 * priceInstalments: with default state.
	 *		.id : priceInstalments
	 * 		.title : 
	 * 		.class : Html.DIV
	 * 		.classIndex : 0
	 */
	protected GuiTestObject html_priceInstalments() 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_priceInstalments"));
	}
	/**
	 * priceInstalments: with specific test context and state.
	 *		.id : priceInstalments
	 * 		.title : 
	 * 		.class : Html.DIV
	 * 		.classIndex : 0
	 */
	protected GuiTestObject html_priceInstalments(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_priceInstalments"), anchor, flags);
	}
	
	/**
	 * cardExpiryMonth: with default state.
	 *		.text : -- January February March April May June July August September October November  ...
	 * 		.id : cardExpiry
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : cardExpiryMonth
	 * 		.classIndex : 1
	 */
	protected SelectGuiSubitemTestObject list_cardExpiryMonth() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_cardExpiryMonth"));
	}
	/**
	 * cardExpiryMonth: with specific test context and state.
	 *		.text : -- January February March April May June July August September October November  ...
	 * 		.id : cardExpiry
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : cardExpiryMonth
	 * 		.classIndex : 1
	 */
	protected SelectGuiSubitemTestObject list_cardExpiryMonth(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_cardExpiryMonth"), anchor, flags);
	}
	
	/**
	 * cardExpiryYear: with default state.
	 *		.text : ---- 2013 2014 2015 2016 2017 2018 2019 2020 2021
	 * 		.id : cardExpiryYear
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : cardExpiryYear
	 * 		.classIndex : 2
	 */
	protected SelectGuiSubitemTestObject list_cardExpiryYear() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_cardExpiryYear"));
	}
	/**
	 * cardExpiryYear: with specific test context and state.
	 *		.text : ---- 2013 2014 2015 2016 2017 2018 2019 2020 2021
	 * 		.id : cardExpiryYear
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : cardExpiryYear
	 * 		.classIndex : 2
	 */
	protected SelectGuiSubitemTestObject list_cardExpiryYear(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_cardExpiryYear"), anchor, flags);
	}
	
	/**
	 * cardType: with default state.
	 *		.text : Please select AA MasterCard AA Visa MasterCard MasterCard Debit Maestro Visa Vis ...
	 * 		.id : cardType
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : cardType
	 * 		.classIndex : 0
	 */
	protected SelectGuiSubitemTestObject list_cardType() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_cardType"));
	}
	/**
	 * cardType: with specific test context and state.
	 *		.text : Please select AA MasterCard AA Visa MasterCard MasterCard Debit Maestro Visa Vis ...
	 * 		.id : cardType
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : cardType
	 * 		.classIndex : 0
	 */
	protected SelectGuiSubitemTestObject list_cardType(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_cardType"), anchor, flags);
	}
	
	/**
	 * bankAccountHolderName: with default state.
	 *		.id : bankAccountHolderName
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : bankAccountHolderName
	 * 		.classIndex : 6
	 */
	protected TextGuiTestObject text_bankAccountHolderName() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_bankAccountHolderName"));
	}
	/**
	 * bankAccountHolderName: with specific test context and state.
	 *		.id : bankAccountHolderName
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : bankAccountHolderName
	 * 		.classIndex : 6
	 */
	protected TextGuiTestObject text_bankAccountHolderName(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_bankAccountHolderName"), anchor, flags);
	}
	
	/**
	 * bankAccountNo: with default state.
	 *		.id : bankAccountNo
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : bankAccountNo
	 * 		.classIndex : 5
	 */
	protected TextGuiTestObject text_bankAccountNo() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_bankAccountNo"));
	}
	/**
	 * bankAccountNo: with specific test context and state.
	 *		.id : bankAccountNo
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : bankAccountNo
	 * 		.classIndex : 5
	 */
	protected TextGuiTestObject text_bankAccountNo(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_bankAccountNo"), anchor, flags);
	}
	
	/**
	 * bankAccountSortCode1: with default state.
	 *		.id : bankAccountSortCode
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : bankAccountSortCode1
	 * 		.classIndex : 2
	 */
	protected TextGuiTestObject text_bankAccountSortCode1() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_bankAccountSortCode1"));
	}
	/**
	 * bankAccountSortCode1: with specific test context and state.
	 *		.id : bankAccountSortCode
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : bankAccountSortCode1
	 * 		.classIndex : 2
	 */
	protected TextGuiTestObject text_bankAccountSortCode1(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_bankAccountSortCode1"), anchor, flags);
	}
	
	/**
	 * bankAccountSortCode2: with default state.
	 *		.id : 
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : bankAccountSortCode2
	 * 		.classIndex : 3
	 */
	protected TextGuiTestObject text_bankAccountSortCode2() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_bankAccountSortCode2"));
	}
	/**
	 * bankAccountSortCode2: with specific test context and state.
	 *		.id : 
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : bankAccountSortCode2
	 * 		.classIndex : 3
	 */
	protected TextGuiTestObject text_bankAccountSortCode2(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_bankAccountSortCode2"), anchor, flags);
	}
	
	/**
	 * bankAccountSortCode3: with default state.
	 *		.id : 
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : bankAccountSortCode3
	 * 		.classIndex : 4
	 */
	protected TextGuiTestObject text_bankAccountSortCode3() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_bankAccountSortCode3"));
	}
	/**
	 * bankAccountSortCode3: with specific test context and state.
	 *		.id : 
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : bankAccountSortCode3
	 * 		.classIndex : 4
	 */
	protected TextGuiTestObject text_bankAccountSortCode3(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_bankAccountSortCode3"), anchor, flags);
	}
	
	/**
	 * cardHolderName: with default state.
	 *		.id : cardHolderName
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : cardHolderName
	 * 		.classIndex : 1
	 */
	protected TextGuiTestObject text_cardHolderName() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_cardHolderName"));
	}
	/**
	 * cardHolderName: with specific test context and state.
	 *		.id : cardHolderName
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : cardHolderName
	 * 		.classIndex : 1
	 */
	protected TextGuiTestObject text_cardHolderName(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_cardHolderName"), anchor, flags);
	}
	
	/**
	 * cardNumber: with default state.
	 *		.id : cardNumber
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : cardNumber
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject text_cardNumber() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_cardNumber"));
	}
	/**
	 * cardNumber: with specific test context and state.
	 *		.id : cardNumber
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : cardNumber
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject text_cardNumber(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_cardNumber"), anchor, flags);
	}
	
	

	protected Your_PaymentHelper()
	{
		setScriptName("HER.Your_Payment");
	}
	
}

