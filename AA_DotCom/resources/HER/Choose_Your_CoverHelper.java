// DO NOT EDIT: This file is automatically generated.
//
// Only the associated template file should be edited directly.
// Helper class files are automatically regenerated from the template
// files at various times, including record actions and test object
// insertion actions.  Any changes made directly to a helper class
// file will be lost when automatically updated.

package resources.HER;

import com.rational.test.ft.object.interfaces.*;
import com.rational.test.ft.object.interfaces.SAP.*;
import com.rational.test.ft.object.interfaces.WPF.*;
import com.rational.test.ft.object.interfaces.siebel.*;
import com.rational.test.ft.object.interfaces.flex.*;
import com.rational.test.ft.object.interfaces.dojo.*;
import com.rational.test.ft.object.interfaces.generichtmlsubdomain.*;
import com.rational.test.ft.script.*;
import com.rational.test.ft.vp.IFtVerificationPoint;
import com.ibm.rational.test.ft.object.interfaces.sapwebportal.*;
/**
 * Script Name   : <b>Choose_Your_Cover</b><br>
 * Generated     : <b>2013/10/22 14:03:27</b><br>
 * Description   : Helper class for script<br>
 * Original Host : Windows XP x86 5.1 <br>
 * 
 * @since  October 22, 2013
 * @author courtl
 */
public abstract class Choose_Your_CoverHelper extends RationalTestScript
{
	/**
	 * Confirm: with default state.
	 *		.id : choosebutton
	 * 		.type : image
	 * 		.value : Next
	 * 		.title : 
	 * 		.class : Html.INPUT.image
	 * 		.name : goNext
	 * 		.classIndex : 0
	 */
	protected GuiTestObject Buy_now() 
	{
		return new GuiTestObject(
                        getMappedTestObject("Buy_now"));
	}
	/**
	 * Confirm: with specific test context and state.
	 *		.id : choosebutton
	 * 		.type : image
	 * 		.value : Next
	 * 		.title : 
	 * 		.class : Html.INPUT.image
	 * 		.name : goNext
	 * 		.classIndex : 0
	 */
	protected GuiTestObject Buy_now(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("Buy_now"), anchor, flags);
	}
	
	/**
	 * null: with default state.
	 *		.id : 
	 * 		.value : 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 3
	 */
	protected GuiTestObject Central_Heating_Emergency_Reponse() 
	{
		return new GuiTestObject(
                        getMappedTestObject("Central_Heating_Emergency_Reponse"));
	}
	/**
	 * null: with specific test context and state.
	 *		.id : 
	 * 		.value : 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 3
	 */
	protected GuiTestObject Central_Heating_Emergency_Reponse(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("Central_Heating_Emergency_Reponse"), anchor, flags);
	}
	
	/**
	 * null: with default state.
	 *		.id : 
	 * 		.value : 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 3
	 */
	protected GuiTestObject Central_Heating_Response_Plus() 
	{
		return new GuiTestObject(
                        getMappedTestObject("Central_Heating_Response_Plus"));
	}
	/**
	 * null: with specific test context and state.
	 *		.id : 
	 * 		.value : 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 3
	 */
	protected GuiTestObject Central_Heating_Response_Plus(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("Central_Heating_Response_Plus"), anchor, flags);
	}
	
	/**
	 * null: with default state.
	 *		.id : 
	 * 		.value : 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 3
	 */
	protected GuiTestObject Home_Emergency_Response() 
	{
		return new GuiTestObject(
                        getMappedTestObject("Home_Emergency_Response"));
	}
	/**
	 * null: with specific test context and state.
	 *		.id : 
	 * 		.value : 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 3
	 */
	protected GuiTestObject Home_Emergency_Response(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("Home_Emergency_Response"), anchor, flags);
	}
	
	/**
	 * null: with default state.
	 *		.id : 
	 * 		.value : 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 3
	 */
	protected GuiTestObject Home_Response_Plus() 
	{
		return new GuiTestObject(
                        getMappedTestObject("Home_Response_Plus"));
	}
	/**
	 * null: with specific test context and state.
	 *		.id : 
	 * 		.value : 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 3
	 */
	protected GuiTestObject Home_Response_Plus(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("Home_Response_Plus"), anchor, flags);
	}
	
	/**
	 * Confirm: with default state.
	 *		.id : choosebutton
	 * 		.type : image
	 * 		.value : Next
	 * 		.title : 
	 * 		.class : Html.INPUT.image
	 * 		.name : goNext
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_confirm() 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_confirm"));
	}
	/**
	 * Confirm: with specific test context and state.
	 *		.id : choosebutton
	 * 		.type : image
	 * 		.value : Next
	 * 		.title : 
	 * 		.class : Html.INPUT.image
	 * 		.name : goNext
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_confirm(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_confirm"), anchor, flags);
	}
	
	/**
	 * boilerCoverBS: with default state.
	 *		.id : 
	 * 		.type : checkbox
	 * 		.value : BS
	 * 		.title : 
	 * 		.class : Html.INPUT.checkbox
	 * 		.name : boilerCover
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject checkBox_boilerCoverBS() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("checkBox_boilerCoverBS"));
	}
	/**
	 * boilerCoverBS: with specific test context and state.
	 *		.id : 
	 * 		.type : checkbox
	 * 		.value : BS
	 * 		.title : 
	 * 		.class : Html.INPUT.checkbox
	 * 		.name : boilerCover
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject checkBox_boilerCoverBS(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("checkBox_boilerCoverBS"), anchor, flags);
	}
	
	/**
	 * boilerCoverCH: with default state.
	 *		.id : 
	 * 		.type : checkbox
	 * 		.value : CH
	 * 		.title : 
	 * 		.class : Html.INPUT.checkbox
	 * 		.name : boilerCover
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject checkBox_boilerCoverCH() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("checkBox_boilerCoverCH"));
	}
	/**
	 * boilerCoverCH: with specific test context and state.
	 *		.id : 
	 * 		.type : checkbox
	 * 		.value : CH
	 * 		.title : 
	 * 		.class : Html.INPUT.checkbox
	 * 		.name : boilerCover
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject checkBox_boilerCoverCH(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("checkBox_boilerCoverCH"), anchor, flags);
	}
	
	/**
	 * boilerCoverExcessY: with default state.
	 *		.id : 
	 * 		.type : checkbox
	 * 		.value : Y
	 * 		.title : 
	 * 		.class : Html.INPUT.checkbox
	 * 		.name : boilerCoverExcess
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject checkBox_boilerCoverExcessY() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("checkBox_boilerCoverExcessY"));
	}
	/**
	 * boilerCoverExcessY: with specific test context and state.
	 *		.id : 
	 * 		.type : checkbox
	 * 		.value : Y
	 * 		.title : 
	 * 		.class : Html.INPUT.checkbox
	 * 		.name : boilerCoverExcess
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject checkBox_boilerCoverExcessY(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("checkBox_boilerCoverExcessY"), anchor, flags);
	}
	
	/**
	 * herBasicY: with default state.
	 *		.id : herBasic
	 * 		.type : checkbox
	 * 		.value : Y
	 * 		.title : 
	 * 		.class : Html.INPUT.checkbox
	 * 		.name : herBasic
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject checkBox_herBasicY() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("checkBox_herBasicY"));
	}
	/**
	 * herBasicY: with specific test context and state.
	 *		.id : herBasic
	 * 		.type : checkbox
	 * 		.value : Y
	 * 		.title : 
	 * 		.class : Html.INPUT.checkbox
	 * 		.name : herBasic
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject checkBox_herBasicY(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("checkBox_herBasicY"), anchor, flags);
	}
	
	/**
	 * firstName: with default state.
	 *		.id : firstName
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : firstName
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject text_firstName() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_firstName"));
	}
	/**
	 * firstName: with specific test context and state.
	 *		.id : firstName
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : firstName
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject text_firstName(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_firstName"), anchor, flags);
	}
	
	/**
	 * firstName: with default state.
	 *		.id : firstName
	 * 		.type : text
	 * 		.class : Html.INPUT.text
	 * 		.title : 
	 * 		.name : firstName
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject text_firstName2() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_firstName2"));
	}
	/**
	 * firstName: with specific test context and state.
	 *		.id : firstName
	 * 		.type : text
	 * 		.class : Html.INPUT.text
	 * 		.title : 
	 * 		.name : firstName
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject text_firstName2(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_firstName2"), anchor, flags);
	}
	
	

	protected Choose_Your_CoverHelper()
	{
		setScriptName("HER.Choose_Your_Cover");
	}
	
}

