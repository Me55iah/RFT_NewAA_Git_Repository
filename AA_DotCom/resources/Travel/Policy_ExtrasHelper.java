// DO NOT EDIT: This file is automatically generated.
//
// Only the associated template file should be edited directly.
// Helper class files are automatically regenerated from the template
// files at various times, including record actions and test object
// insertion actions.  Any changes made directly to a helper class
// file will be lost when automatically updated.

package resources.Travel;

import com.rational.test.ft.object.interfaces.*;
import com.rational.test.ft.object.interfaces.SAP.*;
import com.rational.test.ft.object.interfaces.WPF.*;
import com.rational.test.ft.object.interfaces.siebel.*;
import com.rational.test.ft.object.interfaces.flex.*;
import com.rational.test.ft.object.interfaces.dojo.*;
import com.rational.test.ft.object.interfaces.generichtmlsubdomain.*;
import com.rational.test.ft.script.*;
import com.rational.test.ft.vp.IFtVerificationPoint;
import com.ibm.rational.test.ft.object.interfaces.sapwebportal.*;
/**
 * Script Name   : <b>Policy_Extras</b><br>
 * Generated     : <b>2014/10/07 14:08:11</b><br>
 * Description   : Helper class for script<br>
 * Original Host : Windows XP x86 5.1 <br>
 * 
 * @since  October 07, 2014
 * @author mandanar
 */
public abstract class Policy_ExtrasHelper extends RationalTestScript
{
	/**
	 * htmlBrowser: with default state.
	 *		.class : Html.HtmlBrowser
	 * 		.browserName : MS Internet Explorer
	 * 		.processName : iexplore.exe
	 */
	protected BrowserTestObject browser_htmlBrowser() 
	{
		return new BrowserTestObject(
                        getMappedTestObject("browser_htmlBrowser"));
	}
	/**
	 * htmlBrowser: with specific test context and state.
	 *		.class : Html.HtmlBrowser
	 * 		.browserName : MS Internet Explorer
	 * 		.processName : iexplore.exe
	 */
	protected BrowserTestObject browser_htmlBrowser(TestObject anchor, long flags) 
	{
		return new BrowserTestObject(
                        getMappedTestObject("browser_htmlBrowser"), anchor, flags);
	}
	
	/**
	 * UpdateQuotesubmit: with default state.
	 *		.id : 
	 * 		.type : submit
	 * 		.value : RegularExpression(Update.*)
	 * 		.title : RegularExpression(Update.*)
	 * 		.class : Html.INPUT.submit
	 * 		.name : navigateasfunctionofsubmissionbuttonidflowstrategy_return
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_updateQuotesubmit() 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_updateQuotesubmit"));
	}
	/**
	 * UpdateQuotesubmit: with specific test context and state.
	 *		.id : 
	 * 		.type : submit
	 * 		.value : RegularExpression(Update.*)
	 * 		.title : RegularExpression(Update.*)
	 * 		.class : Html.INPUT.submit
	 * 		.name : navigateasfunctionofsubmissionbuttonidflowstrategy_return
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_updateQuotesubmit(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_updateQuotesubmit"), anchor, flags);
	}
	
	/**
	 * YourDetailssubmit: with default state.
	 *		.id : 
	 * 		.type : submit
	 * 		.value : RegularExpression(.*)
	 * 		.title : RegularExpression(.*)
	 * 		.class : Html.INPUT.submit
	 * 		.name : navigateasfunctionofsubmissionbuttonidflowstrategy_forward
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_yourDetailssubmit() 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_yourDetailssubmit"));
	}
	/**
	 * YourDetailssubmit: with specific test context and state.
	 *		.id : 
	 * 		.type : submit
	 * 		.value : RegularExpression(.*)
	 * 		.title : RegularExpression(.*)
	 * 		.class : Html.INPUT.submit
	 * 		.name : navigateasfunctionofsubmissionbuttonidflowstrategy_forward
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_yourDetailssubmit(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_yourDetailssubmit"), anchor, flags);
	}
	
	/**
	 * aaTiRiskDataSelectedQuoteEndorsementGroups1Endorsements6: with default state.
	 *		.id : widget_9
	 * 		.type : checkbox
	 * 		.value : ON
	 * 		.title : 
	 * 		.class : Html.INPUT.checkbox
	 * 		.name : aa.ti.riskData.selectedQuote.endorsementGroups[1].endorsements[6].selected
	 * 		.classIndex : 6
	 */
	protected ToggleGUITestObject checkBox_aaTiRiskDataSelectedQ() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("checkBox_aaTiRiskDataSelectedQ"));
	}
	/**
	 * aaTiRiskDataSelectedQuoteEndorsementGroups1Endorsements6: with specific test context and state.
	 *		.id : widget_9
	 * 		.type : checkbox
	 * 		.value : ON
	 * 		.title : 
	 * 		.class : Html.INPUT.checkbox
	 * 		.name : aa.ti.riskData.selectedQuote.endorsementGroups[1].endorsements[6].selected
	 * 		.classIndex : 6
	 */
	protected ToggleGUITestObject checkBox_aaTiRiskDataSelectedQ(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("checkBox_aaTiRiskDataSelectedQ"), anchor, flags);
	}
	
	/**
	 * aaTiRiskDataSelectedQuoteEndorsementGroups1Endorsements3: with default state.
	 *		.id : widget_6
	 * 		.type : checkbox
	 * 		.value : ON
	 * 		.class : Html.INPUT.checkbox
	 * 		.title : 
	 * 		.name : aa.ti.riskData.selectedQuote.endorsementGroups[1].endorsements[3].selected
	 * 		.classIndex : 3
	 */
	protected ToggleGUITestObject checkBox_aaTiRiskDataSelectedQ10() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("checkBox_aaTiRiskDataSelectedQ10"));
	}
	/**
	 * aaTiRiskDataSelectedQuoteEndorsementGroups1Endorsements3: with specific test context and state.
	 *		.id : widget_6
	 * 		.type : checkbox
	 * 		.value : ON
	 * 		.class : Html.INPUT.checkbox
	 * 		.title : 
	 * 		.name : aa.ti.riskData.selectedQuote.endorsementGroups[1].endorsements[3].selected
	 * 		.classIndex : 3
	 */
	protected ToggleGUITestObject checkBox_aaTiRiskDataSelectedQ10(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("checkBox_aaTiRiskDataSelectedQ10"), anchor, flags);
	}
	
	/**
	 * aaTiRiskDataSelectedQuoteEndorsementGroups1Endorsements0: with default state.
	 *		.id : widget_3
	 * 		.type : checkbox
	 * 		.value : ON
	 * 		.title : 
	 * 		.class : Html.INPUT.checkbox
	 * 		.name : aa.ti.riskData.selectedQuote.endorsementGroups[1].endorsements[0].selected
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject checkBox_aaTiRiskDataSelectedQ2() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("checkBox_aaTiRiskDataSelectedQ2"));
	}
	/**
	 * aaTiRiskDataSelectedQuoteEndorsementGroups1Endorsements0: with specific test context and state.
	 *		.id : widget_3
	 * 		.type : checkbox
	 * 		.value : ON
	 * 		.title : 
	 * 		.class : Html.INPUT.checkbox
	 * 		.name : aa.ti.riskData.selectedQuote.endorsementGroups[1].endorsements[0].selected
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject checkBox_aaTiRiskDataSelectedQ2(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("checkBox_aaTiRiskDataSelectedQ2"), anchor, flags);
	}
	
	/**
	 * aaTiRiskDataSelectedQuoteEndorsementGroups1Endorsements1: with default state.
	 *		.id : widget_4
	 * 		.type : checkbox
	 * 		.value : ON
	 * 		.title : 
	 * 		.class : Html.INPUT.checkbox
	 * 		.name : aa.ti.riskData.selectedQuote.endorsementGroups[1].endorsements[1].selected
	 * 		.classIndex : 1
	 */
	protected ToggleGUITestObject checkBox_aaTiRiskDataSelectedQ3() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("checkBox_aaTiRiskDataSelectedQ3"));
	}
	/**
	 * aaTiRiskDataSelectedQuoteEndorsementGroups1Endorsements1: with specific test context and state.
	 *		.id : widget_4
	 * 		.type : checkbox
	 * 		.value : ON
	 * 		.title : 
	 * 		.class : Html.INPUT.checkbox
	 * 		.name : aa.ti.riskData.selectedQuote.endorsementGroups[1].endorsements[1].selected
	 * 		.classIndex : 1
	 */
	protected ToggleGUITestObject checkBox_aaTiRiskDataSelectedQ3(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("checkBox_aaTiRiskDataSelectedQ3"), anchor, flags);
	}
	
	/**
	 * aaTiRiskDataSelectedQuoteEndorsementGroups1Endorsements2: with default state.
	 *		.id : widget_5
	 * 		.type : checkbox
	 * 		.value : ON
	 * 		.title : 
	 * 		.class : Html.INPUT.checkbox
	 * 		.name : aa.ti.riskData.selectedQuote.endorsementGroups[1].endorsements[2].selected
	 * 		.classIndex : 2
	 */
	protected ToggleGUITestObject checkBox_aaTiRiskDataSelectedQ4() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("checkBox_aaTiRiskDataSelectedQ4"));
	}
	/**
	 * aaTiRiskDataSelectedQuoteEndorsementGroups1Endorsements2: with specific test context and state.
	 *		.id : widget_5
	 * 		.type : checkbox
	 * 		.value : ON
	 * 		.title : 
	 * 		.class : Html.INPUT.checkbox
	 * 		.name : aa.ti.riskData.selectedQuote.endorsementGroups[1].endorsements[2].selected
	 * 		.classIndex : 2
	 */
	protected ToggleGUITestObject checkBox_aaTiRiskDataSelectedQ4(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("checkBox_aaTiRiskDataSelectedQ4"), anchor, flags);
	}
	
	/**
	 * aaTiRiskDataSelectedQuoteEndorsementGroups1Endorsements3: with default state.
	 *		.id : widget_6
	 * 		.type : checkbox
	 * 		.value : ON
	 * 		.title : 
	 * 		.class : Html.INPUT.checkbox
	 * 		.name : aa.ti.riskData.selectedQuote.endorsementGroups[1].endorsements[3].selected
	 * 		.classIndex : 3
	 */
	protected ToggleGUITestObject checkBox_aaTiRiskDataSelectedQ5() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("checkBox_aaTiRiskDataSelectedQ5"));
	}
	/**
	 * aaTiRiskDataSelectedQuoteEndorsementGroups1Endorsements3: with specific test context and state.
	 *		.id : widget_6
	 * 		.type : checkbox
	 * 		.value : ON
	 * 		.title : 
	 * 		.class : Html.INPUT.checkbox
	 * 		.name : aa.ti.riskData.selectedQuote.endorsementGroups[1].endorsements[3].selected
	 * 		.classIndex : 3
	 */
	protected ToggleGUITestObject checkBox_aaTiRiskDataSelectedQ5(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("checkBox_aaTiRiskDataSelectedQ5"), anchor, flags);
	}
	
	/**
	 * aaTiRiskDataSelectedQuoteEndorsementGroups1Endorsements4: with default state.
	 *		.id : widget_7
	 * 		.type : checkbox
	 * 		.value : ON
	 * 		.title : 
	 * 		.class : Html.INPUT.checkbox
	 * 		.name : aa.ti.riskData.selectedQuote.endorsementGroups[1].endorsements[4].selected
	 * 		.classIndex : 4
	 */
	protected ToggleGUITestObject checkBox_aaTiRiskDataSelectedQ6() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("checkBox_aaTiRiskDataSelectedQ6"));
	}
	/**
	 * aaTiRiskDataSelectedQuoteEndorsementGroups1Endorsements4: with specific test context and state.
	 *		.id : widget_7
	 * 		.type : checkbox
	 * 		.value : ON
	 * 		.title : 
	 * 		.class : Html.INPUT.checkbox
	 * 		.name : aa.ti.riskData.selectedQuote.endorsementGroups[1].endorsements[4].selected
	 * 		.classIndex : 4
	 */
	protected ToggleGUITestObject checkBox_aaTiRiskDataSelectedQ6(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("checkBox_aaTiRiskDataSelectedQ6"), anchor, flags);
	}
	
	/**
	 * aaTiRiskDataSelectedQuoteEndorsementGroups1Endorsements5: with default state.
	 *		.id : widget_8
	 * 		.type : checkbox
	 * 		.value : ON
	 * 		.title : 
	 * 		.class : Html.INPUT.checkbox
	 * 		.name : aa.ti.riskData.selectedQuote.endorsementGroups[1].endorsements[5].selected
	 * 		.classIndex : 5
	 */
	protected ToggleGUITestObject checkBox_aaTiRiskDataSelectedQ7() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("checkBox_aaTiRiskDataSelectedQ7"));
	}
	/**
	 * aaTiRiskDataSelectedQuoteEndorsementGroups1Endorsements5: with specific test context and state.
	 *		.id : widget_8
	 * 		.type : checkbox
	 * 		.value : ON
	 * 		.title : 
	 * 		.class : Html.INPUT.checkbox
	 * 		.name : aa.ti.riskData.selectedQuote.endorsementGroups[1].endorsements[5].selected
	 * 		.classIndex : 5
	 */
	protected ToggleGUITestObject checkBox_aaTiRiskDataSelectedQ7(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("checkBox_aaTiRiskDataSelectedQ7"), anchor, flags);
	}
	
	/**
	 * aaTiRiskDataSelectedQuoteEndorsementGroups1Endorsements5: with default state.
	 *		.id : widget_8
	 * 		.type : checkbox
	 * 		.value : ON
	 * 		.class : Html.INPUT.checkbox
	 * 		.title : 
	 * 		.name : aa.ti.riskData.selectedQuote.endorsementGroups[1].endorsements[5].selected
	 * 		.classIndex : 5
	 */
	protected ToggleGUITestObject checkBox_aaTiRiskDataSelectedQ8() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("checkBox_aaTiRiskDataSelectedQ8"));
	}
	/**
	 * aaTiRiskDataSelectedQuoteEndorsementGroups1Endorsements5: with specific test context and state.
	 *		.id : widget_8
	 * 		.type : checkbox
	 * 		.value : ON
	 * 		.class : Html.INPUT.checkbox
	 * 		.title : 
	 * 		.name : aa.ti.riskData.selectedQuote.endorsementGroups[1].endorsements[5].selected
	 * 		.classIndex : 5
	 */
	protected ToggleGUITestObject checkBox_aaTiRiskDataSelectedQ8(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("checkBox_aaTiRiskDataSelectedQ8"), anchor, flags);
	}
	
	/**
	 * aaTiRiskDataSelectedQuoteEndorsementGroups1Endorsements1: with default state.
	 *		.id : widget_4
	 * 		.type : checkbox
	 * 		.value : ON
	 * 		.class : Html.INPUT.checkbox
	 * 		.title : 
	 * 		.name : aa.ti.riskData.selectedQuote.endorsementGroups[1].endorsements[1].selected
	 * 		.classIndex : 1
	 */
	protected ToggleGUITestObject checkBox_aaTiRiskDataSelectedQ9() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("checkBox_aaTiRiskDataSelectedQ9"));
	}
	/**
	 * aaTiRiskDataSelectedQuoteEndorsementGroups1Endorsements1: with specific test context and state.
	 *		.id : widget_4
	 * 		.type : checkbox
	 * 		.value : ON
	 * 		.class : Html.INPUT.checkbox
	 * 		.title : 
	 * 		.name : aa.ti.riskData.selectedQuote.endorsementGroups[1].endorsements[1].selected
	 * 		.classIndex : 1
	 */
	protected ToggleGUITestObject checkBox_aaTiRiskDataSelectedQ9(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("checkBox_aaTiRiskDataSelectedQ9"), anchor, flags);
	}
	
	/**
	 * AATravelInsurance: with default state.
	 *		.title : RegularExpression(.*)
	 * 		.class : Html.HtmlDocument
	 * 		.url : RegularExpression(.*)
	 */
	protected DocumentTestObject document_aaTravelInsurance() 
	{
		return new DocumentTestObject(
                        getMappedTestObject("document_aaTravelInsurance"));
	}
	/**
	 * AATravelInsurance: with specific test context and state.
	 *		.title : RegularExpression(.*)
	 * 		.class : Html.HtmlDocument
	 * 		.url : RegularExpression(.*)
	 */
	protected DocumentTestObject document_aaTravelInsurance(TestObject anchor, long flags) 
	{
		return new DocumentTestObject(
                        getMappedTestObject("document_aaTravelInsurance"), anchor, flags);
	}
	
	/**
	 * formQuote: with default state.
	 *		.id : form-quote
	 * 		.title : 
	 * 		.class : Html.FORM
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject form_formQuote() 
	{
		return new GuiTestObject(
                        getMappedTestObject("form_formQuote"));
	}
	/**
	 * formQuote: with specific test context and state.
	 *		.id : form-quote
	 * 		.title : 
	 * 		.class : Html.FORM
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject form_formQuote(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("form_formQuote"), anchor, flags);
	}
	
	/**
	 * totalPrice: with default state.
	 *		.id : totalPrice
	 * 		.title : 
	 * 		.class : Html.SPAN
	 * 		.classIndex : 0
	 */
	protected GuiTestObject html_totalPrice() 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_totalPrice"));
	}
	/**
	 * totalPrice: with specific test context and state.
	 *		.id : totalPrice
	 * 		.title : 
	 * 		.class : Html.SPAN
	 * 		.classIndex : 0
	 */
	protected GuiTestObject html_totalPrice(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_totalPrice"), anchor, flags);
	}
	
	/**
	 * totalPrice: with default state.
	 *		.id : totalPrice
	 * 		.title : 
	 * 		.class : Html.SPAN
	 * 		.classIndex : 0
	 */
	protected GuiTestObject html_totalPrice2() 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_totalPrice2"));
	}
	/**
	 * totalPrice: with specific test context and state.
	 *		.id : totalPrice
	 * 		.title : 
	 * 		.class : Html.SPAN
	 * 		.classIndex : 0
	 */
	protected GuiTestObject html_totalPrice2(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_totalPrice2"), anchor, flags);
	}
	
	/**
	 * aaTiSelectedExcess2: with default state.
	 *		.id : widget_2
	 * 		.type : radio
	 * 		.value : 2
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : aa.ti.selectedExcess
	 * 		.classIndex : 1
	 */
	protected ToggleGUITestObject radioButton_Excess_Waiver() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_Excess_Waiver"));
	}
	/**
	 * aaTiSelectedExcess2: with specific test context and state.
	 *		.id : widget_2
	 * 		.type : radio
	 * 		.value : 2
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : aa.ti.selectedExcess
	 * 		.classIndex : 1
	 */
	protected ToggleGUITestObject radioButton_Excess_Waiver(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_Excess_Waiver"), anchor, flags);
	}
	
	/**
	 * aaTiSelectedExcess1: with default state.
	 *		.id : widget_1
	 * 		.type : radio
	 * 		.value : 1
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : aa.ti.selectedExcess
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_Standard_Excess() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_Standard_Excess"));
	}
	/**
	 * aaTiSelectedExcess1: with specific test context and state.
	 *		.id : widget_1
	 * 		.type : radio
	 * 		.value : 1
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : aa.ti.selectedExcess
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_Standard_Excess(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_Standard_Excess"), anchor, flags);
	}
	
	/**
	 * aaTiCustomers0AddressHouseNumber: with default state.
	 *		.id : house-name
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : aa.ti.customers[0].address.houseNumber
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject text_aaTiCustomers0AddressHous() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_aaTiCustomers0AddressHous"));
	}
	/**
	 * aaTiCustomers0AddressHouseNumber: with specific test context and state.
	 *		.id : house-name
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : aa.ti.customers[0].address.houseNumber
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject text_aaTiCustomers0AddressHous(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_aaTiCustomers0AddressHous"), anchor, flags);
	}
	
	

	protected Policy_ExtrasHelper()
	{
		setScriptName("Travel.Policy_Extras");
	}
	
}

