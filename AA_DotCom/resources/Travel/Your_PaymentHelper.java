// DO NOT EDIT: This file is automatically generated.
//
// Only the associated template file should be edited directly.
// Helper class files are automatically regenerated from the template
// files at various times, including record actions and test object
// insertion actions.  Any changes made directly to a helper class
// file will be lost when automatically updated.

package resources.Travel;

import com.rational.test.ft.object.interfaces.*;
import com.rational.test.ft.object.interfaces.SAP.*;
import com.rational.test.ft.object.interfaces.WPF.*;
import com.rational.test.ft.object.interfaces.siebel.*;
import com.rational.test.ft.object.interfaces.flex.*;
import com.rational.test.ft.object.interfaces.dojo.*;
import com.rational.test.ft.object.interfaces.generichtmlsubdomain.*;
import com.rational.test.ft.script.*;
import com.rational.test.ft.vp.IFtVerificationPoint;
import com.ibm.rational.test.ft.object.interfaces.sapwebportal.*;
/**
 * Script Name   : <b>Your_Payment</b><br>
 * Generated     : <b>2013/06/27 14:42:16</b><br>
 * Description   : Helper class for script<br>
 * Original Host : Windows XP x86 5.1 <br>
 * 
 * @since  June 27, 2013
 * @author courtl
 */
public abstract class Your_PaymentHelper extends RationalTestScript
{
	/**
	 * PurchasePolicysubmit: with default state.
	 *		.id : 
	 * 		.type : submit
	 * 		.value : Purchase policy
	 * 		.title : Purchase policy
	 * 		.class : Html.INPUT.submit
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_purchasePolicysubmit() 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_purchasePolicysubmit"));
	}
	/**
	 * PurchasePolicysubmit: with specific test context and state.
	 *		.id : 
	 * 		.type : submit
	 * 		.value : Purchase policy
	 * 		.title : Purchase policy
	 * 		.class : Html.INPUT.submit
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_purchasePolicysubmit(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_purchasePolicysubmit"), anchor, flags);
	}
	
	/**
	 * Submit: with default state.
	 *		.id : 
	 * 		.type : submit
	 * 		.value : Submit
	 * 		.title : 
	 * 		.class : Html.INPUT.submit
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_submit() 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_submit"));
	}
	/**
	 * Submit: with specific test context and state.
	 *		.id : 
	 * 		.type : submit
	 * 		.value : Submit
	 * 		.title : 
	 * 		.class : Html.INPUT.submit
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_submit(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_submit"), anchor, flags);
	}
	
	/**
	 * cardASSUMPTIONSCORRECTtrue: with default state.
	 *		.id : cardASSUMPTIONSCORRECT
	 * 		.type : checkbox
	 * 		.value : true
	 * 		.title : 
	 * 		.class : Html.INPUT.checkbox
	 * 		.name : card.ASSUMPTIONSCORRECT
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject checkBox_cardASSUMPTIONSCORREC() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("checkBox_cardASSUMPTIONSCORREC"));
	}
	/**
	 * cardASSUMPTIONSCORRECTtrue: with specific test context and state.
	 *		.id : cardASSUMPTIONSCORRECT
	 * 		.type : checkbox
	 * 		.value : true
	 * 		.title : 
	 * 		.class : Html.INPUT.checkbox
	 * 		.name : card.ASSUMPTIONSCORRECT
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject checkBox_cardASSUMPTIONSCORREC(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("checkBox_cardASSUMPTIONSCORREC"), anchor, flags);
	}
	
	/**
	 * divPolicyNumber: with default state.
	 *		.id : RegularExpression(div-policy-num.*)
	 * 		.title : 
	 * 		.class : Html.DIV
	 * 		.classIndex : 0
	 */
	protected GuiTestObject html_divPolicyNumber() 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_divPolicyNumber"));
	}
	/**
	 * divPolicyNumber: with specific test context and state.
	 *		.id : RegularExpression(div-policy-num.*)
	 * 		.title : 
	 * 		.class : Html.DIV
	 * 		.classIndex : 0
	 */
	protected GuiTestObject html_divPolicyNumber(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_divPolicyNumber"), anchor, flags);
	}
	
	/**
	 * divPolicyNumber: with default state.
	 *		.id : div-policy-number
	 * 		.title : 
	 * 		.class : Html.DIV
	 * 		.classIndex : 0
	 */
	protected GuiTestObject html_divPolicyNumber2() 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_divPolicyNumber2"));
	}
	/**
	 * divPolicyNumber: with specific test context and state.
	 *		.id : div-policy-number
	 * 		.title : 
	 * 		.class : Html.DIV
	 * 		.classIndex : 0
	 */
	protected GuiTestObject html_divPolicyNumber2(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_divPolicyNumber2"), anchor, flags);
	}
	
	/**
	 * divPolicySummary: with default state.
	 *		.id : div-policy-summary
	 * 		.title : 
	 * 		.class : Html.DIV
	 * 		.classIndex : 1
	 */
	protected GuiTestObject html_divPolicySummary() 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_divPolicySummary"));
	}
	/**
	 * divPolicySummary: with specific test context and state.
	 *		.id : div-policy-summary
	 * 		.title : 
	 * 		.class : Html.DIV
	 * 		.classIndex : 1
	 */
	protected GuiTestObject html_divPolicySummary(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_divPolicySummary"), anchor, flags);
	}
	
	/**
	 * divPolicySummary: with default state.
	 *		.id : div-policy-summary
	 * 		.title : 
	 * 		.class : Html.DIV
	 * 		.classIndex : 1
	 */
	protected GuiTestObject html_divPolicySummary2() 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_divPolicySummary2"));
	}
	/**
	 * divPolicySummary: with specific test context and state.
	 *		.id : div-policy-summary
	 * 		.title : 
	 * 		.class : Html.DIV
	 * 		.classIndex : 1
	 */
	protected GuiTestObject html_divPolicySummary2(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_divPolicySummary2"), anchor, flags);
	}
	
	/**
	 * cardExpiryMonth: with default state.
	 *		.text : MM 01 02 03 04 05 06 07 08 09 10 11 12
	 * 		.id : cardExpiryMonth
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : card.expiry.month
	 * 		.classIndex : 1
	 */
	protected SelectGuiSubitemTestObject list_cardExpiryMonth() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_cardExpiryMonth"));
	}
	/**
	 * cardExpiryMonth: with specific test context and state.
	 *		.text : MM 01 02 03 04 05 06 07 08 09 10 11 12
	 * 		.id : cardExpiryMonth
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : card.expiry.month
	 * 		.classIndex : 1
	 */
	protected SelectGuiSubitemTestObject list_cardExpiryMonth(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_cardExpiryMonth"), anchor, flags);
	}
	
	/**
	 * cardExpiryYear: with default state.
	 *		.text : YY 13 14 15 16 17 18 19 20 21
	 * 		.id : cardExpiryYear
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : card.expiry.year
	 * 		.classIndex : 2
	 */
	protected SelectGuiSubitemTestObject list_cardExpiryYear() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_cardExpiryYear"));
	}
	/**
	 * cardExpiryYear: with specific test context and state.
	 *		.text : YY 13 14 15 16 17 18 19 20 21
	 * 		.id : cardExpiryYear
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : card.expiry.year
	 * 		.classIndex : 2
	 */
	protected SelectGuiSubitemTestObject list_cardExpiryYear(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_cardExpiryYear"), anchor, flags);
	}
	
	/**
	 * cardType: with default state.
	 *		.text : Visa Visa Debit AA Visa Maestro Mastercard Mastercard Debit AA Mastercard
	 * 		.id : cardType
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : card.type
	 * 		.classIndex : 0
	 */
	protected SelectGuiSubitemTestObject list_cardType() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_cardType"));
	}
	/**
	 * cardType: with specific test context and state.
	 *		.text : Visa Visa Debit AA Visa Maestro Mastercard Mastercard Debit AA Mastercard
	 * 		.id : cardType
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : card.type
	 * 		.classIndex : 0
	 */
	protected SelectGuiSubitemTestObject list_cardType(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_cardType"), anchor, flags);
	}
	
	/**
	 * cardCvcNumber: with default state.
	 *		.id : cardCvcNumber
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : card.cvc.number
	 * 		.classIndex : 3
	 */
	protected TextGuiTestObject text_cardCvcNumber() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_cardCvcNumber"));
	}
	/**
	 * cardCvcNumber: with specific test context and state.
	 *		.id : cardCvcNumber
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : card.cvc.number
	 * 		.classIndex : 3
	 */
	protected TextGuiTestObject text_cardCvcNumber(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_cardCvcNumber"), anchor, flags);
	}
	
	/**
	 * cardName: with default state.
	 *		.id : cardName
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : card.name
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject text_cardName() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_cardName"));
	}
	/**
	 * cardName: with specific test context and state.
	 *		.id : cardName
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : card.name
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject text_cardName(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_cardName"), anchor, flags);
	}
	
	/**
	 * cardNumber: with default state.
	 *		.id : cardNumber
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : card.number
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject text_cardNumber() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_cardNumber"));
	}
	/**
	 * cardNumber: with specific test context and state.
	 *		.id : cardNumber
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : card.number
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject text_cardNumber(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_cardNumber"), anchor, flags);
	}
	
	/**
	 * cardNumber: with default state.
	 *		.id : cardNumber
	 * 		.type : text
	 * 		.class : Html.INPUT.text
	 * 		.title : 
	 * 		.name : card.number
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject text_cardNumber2() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_cardNumber2"));
	}
	/**
	 * cardNumber: with specific test context and state.
	 *		.id : cardNumber
	 * 		.type : text
	 * 		.class : Html.INPUT.text
	 * 		.title : 
	 * 		.name : card.number
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject text_cardNumber2(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_cardNumber2"), anchor, flags);
	}
	
	

	protected Your_PaymentHelper()
	{
		setScriptName("Travel.Your_Payment");
	}
	
}

