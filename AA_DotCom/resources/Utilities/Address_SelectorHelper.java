// DO NOT EDIT: This file is automatically generated.
//
// Only the associated template file should be edited directly.
// Helper class files are automatically regenerated from the template
// files at various times, including record actions and test object
// insertion actions.  Any changes made directly to a helper class
// file will be lost when automatically updated.

package resources.Utilities;
import Utilities.AA_SuperHelper;
import com.rational.test.ft.object.interfaces.*;
import com.rational.test.ft.object.interfaces.SAP.*;
import com.rational.test.ft.object.interfaces.WPF.*;
import com.rational.test.ft.object.interfaces.siebel.*;
import com.rational.test.ft.object.interfaces.flex.*;
import com.rational.test.ft.object.interfaces.dojo.*;
import com.rational.test.ft.object.interfaces.generichtmlsubdomain.*;
import com.rational.test.ft.script.*;
import com.rational.test.ft.vp.IFtVerificationPoint;
import com.ibm.rational.test.ft.object.interfaces.sapwebportal.*;
/**
 * Script Name   : <b>Address_Selector</b><br>
 * Generated     : <b>2015/09/23 13:07:54</b><br>
 * Description   : Helper class for script<br>
 * Original Host : Windows 7 x86 6.1 <br>
 * 
 * @since  September 23, 2015
 * @author horned
 */
public abstract class Address_SelectorHelper extends Utilities.AA_SuperHelper
{
	/**
	 * htmlBrowser: with default state.
	 *		.class : Html.HtmlBrowser
	 * 		.browserName : MS Internet Explorer
	 * 		.processName : iexplore.exe
	 */
	protected BrowserTestObject browser_htmlBrowser() 
	{
		return new BrowserTestObject(
                        getMappedTestObject("browser_htmlBrowser"));
	}
	/**
	 * htmlBrowser: with specific test context and state.
	 *		.class : Html.HtmlBrowser
	 * 		.browserName : MS Internet Explorer
	 * 		.processName : iexplore.exe
	 */
	protected BrowserTestObject browser_htmlBrowser(TestObject anchor, long flags) 
	{
		return new BrowserTestObject(
                        getMappedTestObject("browser_htmlBrowser"), anchor, flags);
	}
	
	/**
	 * AddressNotListedsubmit: with default state.
	 *		.id : NotListed
	 * 		.type : submit
	 * 		.value : Address not listed
	 * 		.title : 
	 * 		.class : Html.BUTTON
	 * 		.name : 
	 * 		.classIndex : 1
	 */
	protected GuiTestObject button_addressNotListedsubmit() 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_addressNotListedsubmit"));
	}
	/**
	 * AddressNotListedsubmit: with specific test context and state.
	 *		.id : NotListed
	 * 		.type : submit
	 * 		.value : Address not listed
	 * 		.title : 
	 * 		.class : Html.BUTTON
	 * 		.name : 
	 * 		.classIndex : 1
	 */
	protected GuiTestObject button_addressNotListedsubmit(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_addressNotListedsubmit"), anchor, flags);
	}
	
	/**
	 * Continuesubmit: with default state.
	 *		.id : Continue
	 * 		.type : submit
	 * 		.value : Continue
	 * 		.title : 
	 * 		.class : Html.BUTTON
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_continuesubmit() 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_continuesubmit"));
	}
	/**
	 * Continuesubmit: with specific test context and state.
	 *		.id : Continue
	 * 		.type : submit
	 * 		.value : Continue
	 * 		.title : 
	 * 		.class : Html.BUTTON
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_continuesubmit(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_continuesubmit"), anchor, flags);
	}
	
	/**
	 * HtmlComboLBox: with default state.
	 *		.class : Html.ComboLBox
	 */
	protected GuiTestObject comboListBox_htmlComboLBox() 
	{
		return new GuiTestObject(
                        getMappedTestObject("comboListBox_htmlComboLBox"));
	}
	/**
	 * HtmlComboLBox: with specific test context and state.
	 *		.class : Html.ComboLBox
	 */
	protected GuiTestObject comboListBox_htmlComboLBox(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("comboListBox_htmlComboLBox"), anchor, flags);
	}
	
	/**
	 * VehicleInspectionsForCarsVansAndMotorHomesAA: with default state.
	 *		.title : RegularExpression(AA)
	 * 		.class : Html.HtmlDocument
	 * 		.url : RegularExpression(theaa)
	 */
	protected DocumentTestObject document_vehicleInspectionsFor() 
	{
		return new DocumentTestObject(
                        getMappedTestObject("document_vehicleInspectionsFor"));
	}
	/**
	 * VehicleInspectionsForCarsVansAndMotorHomesAA: with specific test context and state.
	 *		.title : RegularExpression(AA)
	 * 		.class : Html.HtmlDocument
	 * 		.url : RegularExpression(theaa)
	 */
	protected DocumentTestObject document_vehicleInspectionsFor(TestObject anchor, long flags) 
	{
		return new DocumentTestObject(
                        getMappedTestObject("document_vehicleInspectionsFor"), anchor, flags);
	}
	
	/**
	 * YourAddressPleaseChooseYourAddressSelectCATUKSERVICES: with default state.
	 *		.id : 
	 * 		.title : 
	 * 		.class : Html.FORM
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject form_yourAddressPleaseChooseYo() 
	{
		return new GuiTestObject(
                        getMappedTestObject("form_yourAddressPleaseChooseYo"));
	}
	/**
	 * YourAddressPleaseChooseYourAddressSelectCATUKSERVICES: with specific test context and state.
	 *		.id : 
	 * 		.title : 
	 * 		.class : Html.FORM
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject form_yourAddressPleaseChooseYo(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("form_yourAddressPleaseChooseYo"), anchor, flags);
	}
	
	/**
	 * Select: with default state.
	 *		.text : RegularExpression(Select)
	 * 		.id : Select
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected SelectGuiSubitemTestObject list_select() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_select"));
	}
	/**
	 * Select: with specific test context and state.
	 *		.text : RegularExpression(Select)
	 * 		.id : Select
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected SelectGuiSubitemTestObject list_select(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_select"), anchor, flags);
	}
	
	

	protected Address_SelectorHelper()
	{
		setScriptName("Utilities.Address_Selector");
	}
	
}

