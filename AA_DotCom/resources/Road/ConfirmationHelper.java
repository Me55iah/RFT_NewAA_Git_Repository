// DO NOT EDIT: This file is automatically generated.
//
// Only the associated template file should be edited directly.
// Helper class files are automatically regenerated from the template
// files at various times, including record actions and test object
// insertion actions.  Any changes made directly to a helper class
// file will be lost when automatically updated.

package resources.Road;

import com.rational.test.ft.object.interfaces.*;
import com.rational.test.ft.object.interfaces.SAP.*;
import com.rational.test.ft.object.interfaces.WPF.*;
import com.rational.test.ft.object.interfaces.siebel.*;
import com.rational.test.ft.object.interfaces.flex.*;
import com.rational.test.ft.object.interfaces.dojo.*;
import com.rational.test.ft.object.interfaces.generichtmlsubdomain.*;
import com.rational.test.ft.script.*;
import com.rational.test.ft.vp.IFtVerificationPoint;
import com.ibm.rational.test.ft.object.interfaces.sapwebportal.*;
/**
 * Script Name   : <b>Confirmation</b><br>
 * Generated     : <b>2014/10/02 11:46:18</b><br>
 * Description   : Helper class for script<br>
 * Original Host : Windows XP x86 5.1 <br>
 * 
 * @since  October 02, 2014
 * @author MANDANAR
 */
public abstract class ConfirmationHelper extends RationalTestScript
{
	/**
	 * BuyBreakdownCoverbutton: with default state.
	 *		.id : submitToPCI
	 * 		.type : button
	 * 		.value : Buy breakdown cover
	 * 		.title : 
	 * 		.class : Html.INPUT.button
	 * 		.name : submitAppForm
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_buyBreakdownCoverbutton() 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_buyBreakdownCoverbutton"));
	}
	/**
	 * BuyBreakdownCoverbutton: with specific test context and state.
	 *		.id : submitToPCI
	 * 		.type : button
	 * 		.value : Buy breakdown cover
	 * 		.title : 
	 * 		.class : Html.INPUT.button
	 * 		.name : submitAppForm
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_buyBreakdownCoverbutton(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_buyBreakdownCoverbutton"), anchor, flags);
	}
	
	/**
	 * BuyBreakdownCoversubmit: with default state.
	 *		.id : nextPageImageButton
	 * 		.type : submit
	 * 		.value : Buy breakdown cover
	 * 		.title : 
	 * 		.class : Html.INPUT.submit
	 * 		.name : submitAppForm
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_buyBreakdownCoversubmit() 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_buyBreakdownCoversubmit"));
	}
	/**
	 * BuyBreakdownCoversubmit: with specific test context and state.
	 *		.id : nextPageImageButton
	 * 		.type : submit
	 * 		.value : Buy breakdown cover
	 * 		.title : 
	 * 		.class : Html.INPUT.submit
	 * 		.name : submitAppForm
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_buyBreakdownCoversubmit(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_buyBreakdownCoversubmit"), anchor, flags);
	}
	
	/**
	 * terms_Conditiontrue: with default state.
	 *		.id : terms_Condition
	 * 		.type : checkbox
	 * 		.value : true
	 * 		.title : 
	 * 		.class : Html.INPUT.checkbox
	 * 		.name : terms_Condition
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject checkBox_terms_Conditiontrue() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("checkBox_terms_Conditiontrue"));
	}
	/**
	 * terms_Conditiontrue: with specific test context and state.
	 *		.id : terms_Condition
	 * 		.type : checkbox
	 * 		.value : true
	 * 		.title : 
	 * 		.class : Html.INPUT.checkbox
	 * 		.name : terms_Condition
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject checkBox_terms_Conditiontrue(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("checkBox_terms_Conditiontrue"), anchor, flags);
	}
	
	/**
	 * bdLeft: with default state.
	 *		.id : bd-left
	 * 		.title : 
	 * 		.class : Html.DIV
	 * 		.classIndex : 1
	 */
	protected GuiTestObject html_bdLeft() 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_bdLeft"));
	}
	/**
	 * bdLeft: with specific test context and state.
	 *		.id : bd-left
	 * 		.title : 
	 * 		.class : Html.DIV
	 * 		.classIndex : 1
	 */
	protected GuiTestObject html_bdLeft(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_bdLeft"), anchor, flags);
	}
	
	/**
	 * IConfirmThatYouHaveInformedMeOfTheImportanceOfReading: with default state.
	 *		.id : 
	 * 		.value : I confirm that you have informed me of the importance of reading the terms and c ...
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 0
	 */
	protected GuiTestObject label_iConfirmThatYouHaveInfor() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_iConfirmThatYouHaveInfor"));
	}
	/**
	 * IConfirmThatYouHaveInformedMeOfTheImportanceOfReading: with specific test context and state.
	 *		.id : 
	 * 		.value : I confirm that you have informed me of the importance of reading the terms and c ...
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 0
	 */
	protected GuiTestObject label_iConfirmThatYouHaveInfor(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_iConfirmThatYouHaveInfor"), anchor, flags);
	}
	
	/**
	 * IncludeThisCoverAtNoExtraCostFor6MonthsIConfirmThat: with default state.
	 *		.id : 
	 * 		.value : Include this cover at no extra cost for 6 months.  I confirm that you've informe ...
	 * 		.class : Html.LABEL
	 * 		.title : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject label_includeThisCoverAtNoExtr() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_includeThisCoverAtNoExtr"));
	}
	/**
	 * IncludeThisCoverAtNoExtraCostFor6MonthsIConfirmThat: with specific test context and state.
	 *		.id : 
	 * 		.value : Include this cover at no extra cost for 6 months.  I confirm that you've informe ...
	 * 		.class : Html.LABEL
	 * 		.title : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject label_includeThisCoverAtNoExtr(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_includeThisCoverAtNoExtr"), anchor, flags);
	}
	
	/**
	 * accountName: with default state.
	 *		.id : accountName
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : accountName
	 * 		.classIndex : 2
	 */
	protected TextGuiTestObject text_accountName() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_accountName"));
	}
	/**
	 * accountName: with specific test context and state.
	 *		.id : accountName
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : accountName
	 * 		.classIndex : 2
	 */
	protected TextGuiTestObject text_accountName(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_accountName"), anchor, flags);
	}
	
	/**
	 * sortCode: with default state.
	 *		.id : sort_code_id
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : sortCode
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject text_sortCode() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_sortCode"));
	}
	/**
	 * sortCode: with specific test context and state.
	 *		.id : sort_code_id
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : sortCode
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject text_sortCode(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_sortCode"), anchor, flags);
	}
	
	

	protected ConfirmationHelper()
	{
		setScriptName("Road.Confirmation");
	}
	
}

