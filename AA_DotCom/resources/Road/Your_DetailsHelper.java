// DO NOT EDIT: This file is automatically generated.
//
// Only the associated template file should be edited directly.
// Helper class files are automatically regenerated from the template
// files at various times, including record actions and test object
// insertion actions.  Any changes made directly to a helper class
// file will be lost when automatically updated.

package resources.Road;

import com.rational.test.ft.object.interfaces.*;
import com.rational.test.ft.object.interfaces.SAP.*;
import com.rational.test.ft.object.interfaces.WPF.*;
import com.rational.test.ft.object.interfaces.siebel.*;
import com.rational.test.ft.object.interfaces.flex.*;
import com.rational.test.ft.object.interfaces.dojo.*;
import com.rational.test.ft.object.interfaces.generichtmlsubdomain.*;
import com.rational.test.ft.script.*;
import com.rational.test.ft.vp.IFtVerificationPoint;
import com.ibm.rational.test.ft.object.interfaces.sapwebportal.*;
/**
 * Script Name   : <b>Your_Details</b><br>
 * Generated     : <b>2014/12/03 16:11:12</b><br>
 * Description   : Helper class for script<br>
 * Original Host : Windows XP x86 5.1 <br>
 * 
 * @since  December 03, 2014
 * @author horned
 */
public abstract class Your_DetailsHelper extends RationalTestScript
{
	/**
	 * BreakdownCoverYourDetailsTheAAGoogleChrome: with default state.
	 *		.text : Breakdown Cover : Your details - The AA - Google Chrome
	 * 		.class : Chrome_WidgetWin_1
	 * 		.processName : chrome.exe
	 * 		.name : Breakdown Cover : Your details - The AA - Google Chrome
	 */
	protected TopLevelSubitemTestObject breakdownCoverYourDetailsTheAA() 
	{
		return new TopLevelSubitemTestObject(
                        getMappedTestObject("breakdownCoverYourDetailsTheAA"));
	}
	/**
	 * BreakdownCoverYourDetailsTheAAGoogleChrome: with specific test context and state.
	 *		.text : Breakdown Cover : Your details - The AA - Google Chrome
	 * 		.class : Chrome_WidgetWin_1
	 * 		.processName : chrome.exe
	 * 		.name : Breakdown Cover : Your details - The AA - Google Chrome
	 */
	protected TopLevelSubitemTestObject breakdownCoverYourDetailsTheAA(TestObject anchor, long flags) 
	{
		return new TopLevelSubitemTestObject(
                        getMappedTestObject("breakdownCoverYourDetailsTheAA"), anchor, flags);
	}
	
	/**
	 * htmlBrowser: with default state.
	 *		.class : Html.HtmlBrowser
	 * 		.browserName : MS Internet Explorer
	 * 		.processName : iexplore.exe
	 */
	protected BrowserTestObject browser_htmlBrowser() 
	{
		return new BrowserTestObject(
                        getMappedTestObject("browser_htmlBrowser"));
	}
	/**
	 * htmlBrowser: with specific test context and state.
	 *		.class : Html.HtmlBrowser
	 * 		.browserName : MS Internet Explorer
	 * 		.processName : iexplore.exe
	 */
	protected BrowserTestObject browser_htmlBrowser(TestObject anchor, long flags) 
	{
		return new BrowserTestObject(
                        getMappedTestObject("browser_htmlBrowser"), anchor, flags);
	}
	
	/**
	 * BuyBreakdownCoverbutton: with default state.
	 *		.id : submitToPCI
	 * 		.type : button
	 * 		.value : Buy breakdown cover
	 * 		.title : 
	 * 		.class : Html.INPUT.button
	 * 		.name : submitAppForm
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_buyBreakdownCoverbutton() 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_buyBreakdownCoverbutton"));
	}
	/**
	 * BuyBreakdownCoverbutton: with specific test context and state.
	 *		.id : submitToPCI
	 * 		.type : button
	 * 		.value : Buy breakdown cover
	 * 		.title : 
	 * 		.class : Html.INPUT.button
	 * 		.name : submitAppForm
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_buyBreakdownCoverbutton(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_buyBreakdownCoverbutton"), anchor, flags);
	}
	
	/**
	 * Continue: with default state.
	 *		.id : continueImageButton
	 * 		.type : image
	 * 		.value : 
	 * 		.title : 
	 * 		.class : Html.INPUT.image
	 * 		.name : next
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_continue() 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_continue"));
	}
	/**
	 * Continue: with specific test context and state.
	 *		.id : continueImageButton
	 * 		.type : image
	 * 		.value : 
	 * 		.title : 
	 * 		.class : Html.INPUT.image
	 * 		.name : next
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_continue(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_continue"), anchor, flags);
	}
	
	/**
	 * Continuesubmit: with default state.
	 *		.id : submitAppForm
	 * 		.type : submit
	 * 		.value : Continue
	 * 		.title : 
	 * 		.class : Html.INPUT.submit
	 * 		.name : submitAppForm
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_continuesubmit() 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_continuesubmit"));
	}
	/**
	 * Continuesubmit: with specific test context and state.
	 *		.id : submitAppForm
	 * 		.type : submit
	 * 		.value : Continue
	 * 		.title : 
	 * 		.class : Html.INPUT.submit
	 * 		.name : submitAppForm
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_continuesubmit(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_continuesubmit"), anchor, flags);
	}
	
	/**
	 * Continuesubmit: with default state.
	 *		.id : continueImageButton
	 * 		.type : submit
	 * 		.value : Continue
	 * 		.title : 
	 * 		.class : Html.INPUT.submit
	 * 		.name : next
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_continuesubmit3() 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_continuesubmit3"));
	}
	/**
	 * Continuesubmit: with specific test context and state.
	 *		.id : continueImageButton
	 * 		.type : submit
	 * 		.value : Continue
	 * 		.title : 
	 * 		.class : Html.INPUT.submit
	 * 		.name : next
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_continuesubmit3(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_continuesubmit3"), anchor, flags);
	}
	
	/**
	 * FindMyAddressbutton: with default state.
	 *		.id : findAddress
	 * 		.type : button
	 * 		.value : Find my address
	 * 		.title : 
	 * 		.class : Html.INPUT.button
	 * 		.name : lookupAddress
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_findMyAddressbutton() 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_findMyAddressbutton"));
	}
	/**
	 * FindMyAddressbutton: with specific test context and state.
	 *		.id : findAddress
	 * 		.type : button
	 * 		.value : Find my address
	 * 		.title : 
	 * 		.class : Html.INPUT.button
	 * 		.name : lookupAddress
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_findMyAddressbutton(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_findMyAddressbutton"), anchor, flags);
	}
	
	/**
	 * Next: with default state.
	 *		.id : 
	 * 		.type : image
	 * 		.value : 
	 * 		.title : 
	 * 		.class : Html.INPUT.image
	 * 		.name : next
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_next() 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_next"));
	}
	/**
	 * Next: with specific test context and state.
	 *		.id : 
	 * 		.type : image
	 * 		.value : 
	 * 		.title : 
	 * 		.class : Html.INPUT.image
	 * 		.name : next
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_next(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_next"), anchor, flags);
	}
	
	/**
	 * NoThanksIJustWantBreakdwon: with default state.
	 *		.id : 
	 * 		.type : image
	 * 		.value : 
	 * 		.title : 
	 * 		.class : Html.INPUT.image
	 * 		.name : notRequired
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_noThanksIJustWantBreakd() 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_noThanksIJustWantBreakd"));
	}
	/**
	 * NoThanksIJustWantBreakdwon: with specific test context and state.
	 *		.id : 
	 * 		.type : image
	 * 		.value : 
	 * 		.title : 
	 * 		.class : Html.INPUT.image
	 * 		.name : notRequired
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_noThanksIJustWantBreakd(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_noThanksIJustWantBreakd"), anchor, flags);
	}
	
	/**
	 * ProceedToSecurePayment: with default state.
	 *		.id : submitAppForm
	 * 		.type : image
	 * 		.value : RegularExpression(.*)
	 * 		.title : 
	 * 		.class : Html.INPUT.image
	 * 		.name : submitAppForm
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_proceedToSecurePayment() 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_proceedToSecurePayment"));
	}
	/**
	 * ProceedToSecurePayment: with specific test context and state.
	 *		.id : submitAppForm
	 * 		.type : image
	 * 		.value : RegularExpression(.*)
	 * 		.title : 
	 * 		.class : Html.INPUT.image
	 * 		.name : submitAppForm
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_proceedToSecurePayment(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_proceedToSecurePayment"), anchor, flags);
	}
	
	/**
	 * assumptionson: with default state.
	 *		.id : 
	 * 		.type : checkbox
	 * 		.value : on
	 * 		.title : 
	 * 		.class : Html.INPUT.checkbox
	 * 		.name : assumptions
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject checkBox_assumptionson() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("checkBox_assumptionson"));
	}
	/**
	 * assumptionson: with specific test context and state.
	 *		.id : 
	 * 		.type : checkbox
	 * 		.value : on
	 * 		.title : 
	 * 		.class : Html.INPUT.checkbox
	 * 		.name : assumptions
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject checkBox_assumptionson(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("checkBox_assumptionson"), anchor, flags);
	}
	
	/**
	 * assumptionson: with default state.
	 *		.id : assumptions
	 * 		.type : checkbox
	 * 		.value : on
	 * 		.title : 
	 * 		.class : Html.INPUT.checkbox
	 * 		.name : assumptions
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject checkBox_assumptionson2() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("checkBox_assumptionson2"));
	}
	/**
	 * assumptionson: with specific test context and state.
	 *		.id : assumptions
	 * 		.type : checkbox
	 * 		.value : on
	 * 		.title : 
	 * 		.class : Html.INPUT.checkbox
	 * 		.name : assumptions
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject checkBox_assumptionson2(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("checkBox_assumptionson2"), anchor, flags);
	}
	
	/**
	 * assumptionson: with default state.
	 *		.id : assumptions
	 * 		.type : checkbox
	 * 		.value : on
	 * 		.title : 
	 * 		.class : Html.INPUT.checkbox
	 * 		.name : assumptions
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject checkBox_assumptionson3() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("checkBox_assumptionson3"));
	}
	/**
	 * assumptionson: with specific test context and state.
	 *		.id : assumptions
	 * 		.type : checkbox
	 * 		.value : on
	 * 		.title : 
	 * 		.class : Html.INPUT.checkbox
	 * 		.name : assumptions
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject checkBox_assumptionson3(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("checkBox_assumptionson3"), anchor, flags);
	}
	
	/**
	 * terms_Conditiontrue: with default state.
	 *		.id : terms_Condition
	 * 		.type : checkbox
	 * 		.value : true
	 * 		.title : 
	 * 		.class : Html.INPUT.checkbox
	 * 		.name : terms_Condition
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject checkBox_terms_Conditiontrue() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("checkBox_terms_Conditiontrue"));
	}
	/**
	 * terms_Conditiontrue: with specific test context and state.
	 *		.id : terms_Condition
	 * 		.type : checkbox
	 * 		.value : true
	 * 		.title : 
	 * 		.class : Html.INPUT.checkbox
	 * 		.name : terms_Condition
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject checkBox_terms_Conditiontrue(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("checkBox_terms_Conditiontrue"), anchor, flags);
	}
	
	/**
	 * ChromeLegacyWindow: with default state.
	 *		.text : Chrome Legacy Window
	 * 		.class : Chrome_RenderWidgetHostHWND
	 * 		.name : Chrome Legacy Window
	 * 		.classIndex : 0
	 */
	protected GuiSubitemTestObject chromeLegacyWindowwindow() 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("chromeLegacyWindowwindow"));
	}
	/**
	 * ChromeLegacyWindow: with specific test context and state.
	 *		.text : Chrome Legacy Window
	 * 		.class : Chrome_RenderWidgetHostHWND
	 * 		.name : Chrome Legacy Window
	 * 		.classIndex : 0
	 */
	protected GuiSubitemTestObject chromeLegacyWindowwindow(TestObject anchor, long flags) 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("chromeLegacyWindowwindow"), anchor, flags);
	}
	
	/**
	 * Continuesubmit: with default state.
	 *		.id : continueImageButton
	 * 		.type : submit
	 * 		.value : Continue
	 * 		.title : 
	 * 		.class : Html.INPUT.submit
	 * 		.name : next
	 * 		.classIndex : 0
	 */
	protected GuiTestObject continuesubmit() 
	{
		return new GuiTestObject(
                        getMappedTestObject("continuesubmit"));
	}
	/**
	 * Continuesubmit: with specific test context and state.
	 *		.id : continueImageButton
	 * 		.type : submit
	 * 		.value : Continue
	 * 		.title : 
	 * 		.class : Html.INPUT.submit
	 * 		.name : next
	 * 		.classIndex : 0
	 */
	protected GuiTestObject continuesubmit(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("continuesubmit"), anchor, flags);
	}
	
	/**
	 * BreakdownCoverHomeEmergencyResponseTheAA: with default state.
	 *		.title : RegularExpression(.*Home Emergency .*)
	 * 		.class : Html.HtmlDocument
	 * 		.url : RegularExpression(https://.*)
	 */
	protected DocumentTestObject document_breakdownCoverHomeEme() 
	{
		return new DocumentTestObject(
                        getMappedTestObject("document_breakdownCoverHomeEme"));
	}
	/**
	 * BreakdownCoverHomeEmergencyResponseTheAA: with specific test context and state.
	 *		.title : RegularExpression(.*Home Emergency .*)
	 * 		.class : Html.HtmlDocument
	 * 		.url : RegularExpression(https://.*)
	 */
	protected DocumentTestObject document_breakdownCoverHomeEme(TestObject anchor, long flags) 
	{
		return new DocumentTestObject(
                        getMappedTestObject("document_breakdownCoverHomeEme"), anchor, flags);
	}
	
	/**
	 * BreakdownCoverYourDetailsTheAA: with default state.
	 *		.title : Breakdown Cover : Your details - The AA
	 * 		.class : Html.HtmlDocument
	 * 		.url : RegularExpression(.*breakdown-cover/uk-breakdown.*)
	 */
	protected DocumentTestObject document_breakdownCoverYourDet() 
	{
		return new DocumentTestObject(
                        getMappedTestObject("document_breakdownCoverYourDet"));
	}
	/**
	 * BreakdownCoverYourDetailsTheAA: with specific test context and state.
	 *		.title : Breakdown Cover : Your details - The AA
	 * 		.class : Html.HtmlDocument
	 * 		.url : RegularExpression(.*breakdown-cover/uk-breakdown.*)
	 */
	protected DocumentTestObject document_breakdownCoverYourDet(TestObject anchor, long flags) 
	{
		return new DocumentTestObject(
                        getMappedTestObject("document_breakdownCoverYourDet"), anchor, flags);
	}
	
	/**
	 * PlaybackLogForFull_Road_Regression_Test: with default state.
	 *		.title : Playback Log for Full_Road_Regression_Test
	 * 		.class : Html.HtmlDocument
	 * 		.url : file://C:\Checkouts\AA_DotCom_logs\Full_Road_Regression_Test_02_12_2014_03\ratio ...
	 */
	protected DocumentTestObject document_playbackLogForFull_Ro() 
	{
		return new DocumentTestObject(
                        getMappedTestObject("document_playbackLogForFull_Ro"));
	}
	/**
	 * PlaybackLogForFull_Road_Regression_Test: with specific test context and state.
	 *		.title : Playback Log for Full_Road_Regression_Test
	 * 		.class : Html.HtmlDocument
	 * 		.url : file://C:\Checkouts\AA_DotCom_logs\Full_Road_Regression_Test_02_12_2014_03\ratio ...
	 */
	protected DocumentTestObject document_playbackLogForFull_Ro(TestObject anchor, long flags) 
	{
		return new DocumentTestObject(
                        getMappedTestObject("document_playbackLogForFull_Ro"), anchor, flags);
	}
	
	/**
	 * PlaybackLogForFull_Road_Regression_Test: with default state.
	 *		.title : Playback Log for Full_Road_Regression_Test
	 * 		.class : Html.HtmlDocument
	 * 		.url : file://C:\Checkouts\AA_DotCom_logs\Full_Road_Debug\rational_ft_log.html
	 */
	protected DocumentTestObject document_playbackLogForFull_Ro2() 
	{
		return new DocumentTestObject(
                        getMappedTestObject("document_playbackLogForFull_Ro2"));
	}
	/**
	 * PlaybackLogForFull_Road_Regression_Test: with specific test context and state.
	 *		.title : Playback Log for Full_Road_Regression_Test
	 * 		.class : Html.HtmlDocument
	 * 		.url : file://C:\Checkouts\AA_DotCom_logs\Full_Road_Debug\rational_ft_log.html
	 */
	protected DocumentTestObject document_playbackLogForFull_Ro2(TestObject anchor, long flags) 
	{
		return new DocumentTestObject(
                        getMappedTestObject("document_playbackLogForFull_Ro2"), anchor, flags);
	}
	
	/**
	 * formTerms: with default state.
	 *		.id : form-terms
	 * 		.title : 
	 * 		.class : Html.DIV
	 * 		.classIndex : 0
	 */
	protected GuiTestObject html_formTerms() 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_formTerms"));
	}
	/**
	 * formTerms: with specific test context and state.
	 *		.id : form-terms
	 * 		.title : 
	 * 		.class : Html.DIV
	 * 		.classIndex : 0
	 */
	protected GuiTestObject html_formTerms(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_formTerms"), anchor, flags);
	}
	
	/**
	 * scrollSummary: with default state.
	 *		.id : scroll-summary
	 * 		.title : 
	 * 		.class : Html.DIV
	 * 		.classIndex : 0
	 */
	protected GuiTestObject html_scrollSummary() 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_scrollSummary"));
	}
	/**
	 * scrollSummary: with specific test context and state.
	 *		.id : scroll-summary
	 * 		.title : 
	 * 		.class : Html.DIV
	 * 		.classIndex : 0
	 */
	protected GuiTestObject html_scrollSummary(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_scrollSummary"), anchor, flags);
	}
	
	/**
	 * HomeEmergencyResponse247Helpline365DaysAYearSkilled: with default state.
	 *		.text : Home Emergency Response 24/7 helpline, 365 days a year. Skilled tradesmen. Unlim ...
	 * 		.id : homeEmergencyResponse
	 * 		.className : bd-option-her clearfix
	 * 		.value :   Home Emergency Response  24/7 helpline, 365 days a year. Skilled tradesmen. Un ...
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.bounds : java.awt.Rectangle[x=252,y=301,width=653,height=95]
	 * 		.classIndex : 0
	 */
	protected GuiTestObject label_homeEmergencyResponse247() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_homeEmergencyResponse247"));
	}
	/**
	 * HomeEmergencyResponse247Helpline365DaysAYearSkilled: with specific test context and state.
	 *		.text : Home Emergency Response 24/7 helpline, 365 days a year. Skilled tradesmen. Unlim ...
	 * 		.id : homeEmergencyResponse
	 * 		.className : bd-option-her clearfix
	 * 		.value :   Home Emergency Response  24/7 helpline, 365 days a year. Skilled tradesmen. Un ...
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.bounds : java.awt.Rectangle[x=252,y=301,width=653,height=95]
	 * 		.classIndex : 0
	 */
	protected GuiTestObject label_homeEmergencyResponse247(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_homeEmergencyResponse247"), anchor, flags);
	}
	
	/**
	 * HomeEmergencyResponseGet247HelpFromTrustedAndSkilledT: with default state.
	 *		.id : 
	 * 		.value : RegularExpression( Home Emergency Response.*)
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 0
	 */
	protected GuiTestObject label_homeEmergencyResponseGet() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_homeEmergencyResponseGet"));
	}
	/**
	 * HomeEmergencyResponseGet247HelpFromTrustedAndSkilledT: with specific test context and state.
	 *		.id : 
	 * 		.value : RegularExpression( Home Emergency Response.*)
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 0
	 */
	protected GuiTestObject label_homeEmergencyResponseGet(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_homeEmergencyResponseGet"), anchor, flags);
	}
	
	/**
	 * motorInsRenewalMonth: with default state.
	 *		.text : Month January February March April May June July August September October Novemb ...
	 * 		.id : motorInsRenewalMonth
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : motorInsRenewalMonth
	 * 		.classIndex : 0
	 */
	protected SelectGuiSubitemTestObject list_motorInsRenewalMonth() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_motorInsRenewalMonth"));
	}
	/**
	 * motorInsRenewalMonth: with specific test context and state.
	 *		.text : Month January February March April May June July August September October Novemb ...
	 * 		.id : motorInsRenewalMonth
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : motorInsRenewalMonth
	 * 		.classIndex : 0
	 */
	protected SelectGuiSubitemTestObject list_motorInsRenewalMonth(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_motorInsRenewalMonth"), anchor, flags);
	}
	
	/**
	 * noOfBedrooms: with default state.
	 *		.text : 1 2 3 4 5
	 * 		.id : 
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : noOfBedrooms
	 * 		.classIndex : 1
	 */
	protected SelectGuiSubitemTestObject list_noOfBedrooms() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_noOfBedrooms"));
	}
	/**
	 * noOfBedrooms: with specific test context and state.
	 *		.text : 1 2 3 4 5
	 * 		.id : 
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : noOfBedrooms
	 * 		.classIndex : 1
	 */
	protected SelectGuiSubitemTestObject list_noOfBedrooms(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_noOfBedrooms"), anchor, flags);
	}
	
	/**
	 * propertyType: with default state.
	 *		.text : Flat/Maisonette Bungalow Detached Semi-detached Terraced
	 * 		.id : 
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : propertyType
	 * 		.classIndex : 0
	 */
	protected SelectGuiSubitemTestObject list_propertyType() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_propertyType"));
	}
	/**
	 * propertyType: with specific test context and state.
	 *		.text : Flat/Maisonette Bungalow Detached Semi-detached Terraced
	 * 		.id : 
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : propertyType
	 * 		.classIndex : 0
	 */
	protected SelectGuiSubitemTestObject list_propertyType(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_propertyType"), anchor, flags);
	}
	
	/**
	 * additionalMembers0Titlemr: with default state.
	 *		.id : title-mrfamily1
	 * 		.type : radio
	 * 		.value : mr
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : additionalMembers[0].title
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_additionalMembers0() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_additionalMembers0"));
	}
	/**
	 * additionalMembers0Titlemr: with specific test context and state.
	 *		.id : title-mrfamily1
	 * 		.type : radio
	 * 		.value : mr
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : additionalMembers[0].title
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_additionalMembers0(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_additionalMembers0"), anchor, flags);
	}
	
	/**
	 * additionalMembers0Titlemrs: with default state.
	 *		.id : title-mrsfamily1
	 * 		.type : radio
	 * 		.value : mrs
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : additionalMembers[0].title
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_additionalMembers0_2() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_additionalMembers0_2"));
	}
	/**
	 * additionalMembers0Titlemrs: with specific test context and state.
	 *		.id : title-mrsfamily1
	 * 		.type : radio
	 * 		.value : mrs
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : additionalMembers[0].title
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_additionalMembers0_2(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_additionalMembers0_2"), anchor, flags);
	}
	
	/**
	 * additionalMembers0Titlemiss: with default state.
	 *		.id : title-missfamily1
	 * 		.type : radio
	 * 		.value : miss
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : additionalMembers[0].title
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_additionalMembers0_3() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_additionalMembers0_3"));
	}
	/**
	 * additionalMembers0Titlemiss: with specific test context and state.
	 *		.id : title-missfamily1
	 * 		.type : radio
	 * 		.value : miss
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : additionalMembers[0].title
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_additionalMembers0_3(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_additionalMembers0_3"), anchor, flags);
	}
	
	/**
	 * additionalMembers0Titlems: with default state.
	 *		.id : title-msfamily1
	 * 		.type : radio
	 * 		.value : ms
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : additionalMembers[0].title
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_additionalMembers0_4() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_additionalMembers0_4"));
	}
	/**
	 * additionalMembers0Titlems: with specific test context and state.
	 *		.id : title-msfamily1
	 * 		.type : radio
	 * 		.value : ms
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : additionalMembers[0].title
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_additionalMembers0_4(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_additionalMembers0_4"), anchor, flags);
	}
	
	/**
	 * additionalMembers1Titlemr: with default state.
	 *		.id : title-mrfamily2
	 * 		.type : radio
	 * 		.value : mr
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : additionalMembers[1].title
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_additionalMembers1() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_additionalMembers1"));
	}
	/**
	 * additionalMembers1Titlemr: with specific test context and state.
	 *		.id : title-mrfamily2
	 * 		.type : radio
	 * 		.value : mr
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : additionalMembers[1].title
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_additionalMembers1(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_additionalMembers1"), anchor, flags);
	}
	
	/**
	 * additionalMembers2Titlemr: with default state.
	 *		.id : title-mrfamily3
	 * 		.type : radio
	 * 		.value : mr
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : additionalMembers[2].title
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_additionalMembers2() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_additionalMembers2"));
	}
	/**
	 * additionalMembers2Titlemr: with specific test context and state.
	 *		.id : title-mrfamily3
	 * 		.type : radio
	 * 		.value : mr
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : additionalMembers[2].title
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_additionalMembers2(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_additionalMembers2"), anchor, flags);
	}
	
	/**
	 * membershipPaymentTypeAnnualDirectDebit: with default state.
	 *		.id : paymentMethodDD
	 * 		.type : radio
	 * 		.value : AnnualDirectDebit
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : membershipPaymentType
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_membershipPaymentT() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_membershipPaymentT"));
	}
	/**
	 * membershipPaymentTypeAnnualDirectDebit: with specific test context and state.
	 *		.id : paymentMethodDD
	 * 		.type : radio
	 * 		.value : AnnualDirectDebit
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : membershipPaymentType
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_membershipPaymentT(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_membershipPaymentT"), anchor, flags);
	}
	
	/**
	 * membershipPaymentTypeAnnualCard: with default state.
	 *		.id : paymentMethodCard
	 * 		.type : radio
	 * 		.value : AnnualCard
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : membershipPaymentType
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_membershipPaymentT2() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_membershipPaymentT2"));
	}
	/**
	 * membershipPaymentTypeAnnualCard: with specific test context and state.
	 *		.id : paymentMethodCard
	 * 		.type : radio
	 * 		.value : AnnualCard
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : membershipPaymentType
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_membershipPaymentT2(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_membershipPaymentT2"), anchor, flags);
	}
	
	/**
	 * membershipPaymentTypeMonthly: with default state.
	 *		.id : paymentMethodMonthly
	 * 		.type : radio
	 * 		.value : Monthly
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : membershipPaymentType
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_membershipPaymentT3() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_membershipPaymentT3"));
	}
	/**
	 * membershipPaymentTypeMonthly: with specific test context and state.
	 *		.id : paymentMethodMonthly
	 * 		.type : radio
	 * 		.value : Monthly
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : membershipPaymentType
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_membershipPaymentT3(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_membershipPaymentT3"), anchor, flags);
	}
	
	/**
	 * membershipPaymentTypeAnnualDirectDebit: with default state.
	 *		.id : paymentMethodDD
	 * 		.type : radio
	 * 		.value : AnnualDirectDebit
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : membershipPaymentType
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_membershipPayment_Bank_Account() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_membershipPayment_Bank_Account"));
	}
	/**
	 * membershipPaymentTypeAnnualDirectDebit: with specific test context and state.
	 *		.id : paymentMethodDD
	 * 		.type : radio
	 * 		.value : AnnualDirectDebit
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : membershipPaymentType
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_membershipPayment_Bank_Account(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_membershipPayment_Bank_Account"), anchor, flags);
	}
	
	/**
	 * membershipPaymentTypeAnnualCard: with default state.
	 *		.id : paymentMethodCard
	 * 		.type : radio
	 * 		.value : AnnualCard
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : membershipPaymentType
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_membershipPayment_By_Card() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_membershipPayment_By_Card"));
	}
	/**
	 * membershipPaymentTypeAnnualCard: with specific test context and state.
	 *		.id : paymentMethodCard
	 * 		.type : radio
	 * 		.value : AnnualCard
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : membershipPaymentType
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_membershipPayment_By_Card(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_membershipPayment_By_Card"), anchor, flags);
	}
	
	/**
	 * membershipPaymentTypeMonthly: with default state.
	 *		.id : paymentMethodMonthly
	 * 		.type : radio
	 * 		.value : Monthly
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : membershipPaymentType
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_membershipPayment_Monthly() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_membershipPayment_Monthly"));
	}
	/**
	 * membershipPaymentTypeMonthly: with specific test context and state.
	 *		.id : paymentMethodMonthly
	 * 		.type : radio
	 * 		.value : Monthly
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : membershipPaymentType
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_membershipPayment_Monthly(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_membershipPayment_Monthly"), anchor, flags);
	}
	
	/**
	 * policyHolderTitlemiss: with default state.
	 *		.id : title-miss
	 * 		.type : radio
	 * 		.value : miss
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : policyHolderTitle
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_policyHolderTitle_Miss() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_policyHolderTitle_Miss"));
	}
	/**
	 * policyHolderTitlemiss: with specific test context and state.
	 *		.id : title-miss
	 * 		.type : radio
	 * 		.value : miss
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : policyHolderTitle
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_policyHolderTitle_Miss(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_policyHolderTitle_Miss"), anchor, flags);
	}
	
	/**
	 * policyHolderTitlemr: with default state.
	 *		.id : title-mr
	 * 		.type : radio
	 * 		.value : mr
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : policyHolderTitle
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_policyHolderTitle_Mr() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_policyHolderTitle_Mr"));
	}
	/**
	 * policyHolderTitlemr: with specific test context and state.
	 *		.id : title-mr
	 * 		.type : radio
	 * 		.value : mr
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : policyHolderTitle
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_policyHolderTitle_Mr(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_policyHolderTitle_Mr"), anchor, flags);
	}
	
	/**
	 * policyHolderTitlemrs: with default state.
	 *		.id : title-mrs
	 * 		.type : radio
	 * 		.value : mrs
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : policyHolderTitle
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_policyHolderTitle_Mrs() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_policyHolderTitle_Mrs"));
	}
	/**
	 * policyHolderTitlemrs: with specific test context and state.
	 *		.id : title-mrs
	 * 		.type : radio
	 * 		.value : mrs
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : policyHolderTitle
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_policyHolderTitle_Mrs(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_policyHolderTitle_Mrs"), anchor, flags);
	}
	
	/**
	 * policyHolderTitlems: with default state.
	 *		.id : title-ms
	 * 		.type : radio
	 * 		.value : ms
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : policyHolderTitle
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_policyHolderTitle_Ms() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_policyHolderTitle_Ms"));
	}
	/**
	 * policyHolderTitlems: with specific test context and state.
	 *		.id : title-ms
	 * 		.type : radio
	 * 		.value : ms
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : policyHolderTitle
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_policyHolderTitle_Ms(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_policyHolderTitle_Ms"), anchor, flags);
	}
	
	/**
	 * additionalMembers0DateOfBirthDate: with default state.
	 *		.id : policyHolder2Dob
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : additionalMembers[0].dateOfBirth.date
	 * 		.classIndex : 11
	 */
	protected TextGuiTestObject text_additionalMembers0DateOfB() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_additionalMembers0DateOfB"));
	}
	/**
	 * additionalMembers0DateOfBirthDate: with specific test context and state.
	 *		.id : policyHolder2Dob
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : additionalMembers[0].dateOfBirth.date
	 * 		.classIndex : 11
	 */
	protected TextGuiTestObject text_additionalMembers0DateOfB(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_additionalMembers0DateOfB"), anchor, flags);
	}
	
	/**
	 * additionalMembers0FirstName: with default state.
	 *		.id : family1Firstname
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : additionalMembers[0].firstName
	 * 		.classIndex : 9
	 */
	protected TextGuiTestObject text_additionalMembers0FirstNa() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_additionalMembers0FirstNa"));
	}
	/**
	 * additionalMembers0FirstName: with specific test context and state.
	 *		.id : family1Firstname
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : additionalMembers[0].firstName
	 * 		.classIndex : 9
	 */
	protected TextGuiTestObject text_additionalMembers0FirstNa(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_additionalMembers0FirstNa"), anchor, flags);
	}
	
	/**
	 * additionalMembers0Surname: with default state.
	 *		.id : family1Surname
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : additionalMembers[0].surname
	 * 		.classIndex : 10
	 */
	protected TextGuiTestObject text_additionalMembers0Surname() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_additionalMembers0Surname"));
	}
	/**
	 * additionalMembers0Surname: with specific test context and state.
	 *		.id : family1Surname
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : additionalMembers[0].surname
	 * 		.classIndex : 10
	 */
	protected TextGuiTestObject text_additionalMembers0Surname(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_additionalMembers0Surname"), anchor, flags);
	}
	
	/**
	 * additionalMembers1DateOfBirthDate: with default state.
	 *		.id : policyHolder3Dob
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : additionalMembers[1].dateOfBirth.date
	 * 		.classIndex : 14
	 */
	protected TextGuiTestObject text_additionalMembers1DateOfB() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_additionalMembers1DateOfB"));
	}
	/**
	 * additionalMembers1DateOfBirthDate: with specific test context and state.
	 *		.id : policyHolder3Dob
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : additionalMembers[1].dateOfBirth.date
	 * 		.classIndex : 14
	 */
	protected TextGuiTestObject text_additionalMembers1DateOfB(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_additionalMembers1DateOfB"), anchor, flags);
	}
	
	/**
	 * additionalMembers1FirstName: with default state.
	 *		.id : family2Firstname
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : additionalMembers[1].firstName
	 * 		.classIndex : 12
	 */
	protected TextGuiTestObject text_additionalMembers1FirstNa() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_additionalMembers1FirstNa"));
	}
	/**
	 * additionalMembers1FirstName: with specific test context and state.
	 *		.id : family2Firstname
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : additionalMembers[1].firstName
	 * 		.classIndex : 12
	 */
	protected TextGuiTestObject text_additionalMembers1FirstNa(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_additionalMembers1FirstNa"), anchor, flags);
	}
	
	/**
	 * additionalMembers1Surname: with default state.
	 *		.id : family2Surname
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : additionalMembers[1].surname
	 * 		.classIndex : 13
	 */
	protected TextGuiTestObject text_additionalMembers1Surname() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_additionalMembers1Surname"));
	}
	/**
	 * additionalMembers1Surname: with specific test context and state.
	 *		.id : family2Surname
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : additionalMembers[1].surname
	 * 		.classIndex : 13
	 */
	protected TextGuiTestObject text_additionalMembers1Surname(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_additionalMembers1Surname"), anchor, flags);
	}
	
	/**
	 * additionalMembers2DateOfBirthDate: with default state.
	 *		.id : policyHolder4Dob
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : additionalMembers[2].dateOfBirth.date
	 * 		.classIndex : 17
	 */
	protected TextGuiTestObject text_additionalMembers2DateOfB() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_additionalMembers2DateOfB"));
	}
	/**
	 * additionalMembers2DateOfBirthDate: with specific test context and state.
	 *		.id : policyHolder4Dob
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : additionalMembers[2].dateOfBirth.date
	 * 		.classIndex : 17
	 */
	protected TextGuiTestObject text_additionalMembers2DateOfB(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_additionalMembers2DateOfB"), anchor, flags);
	}
	
	/**
	 * additionalMembers2FirstName: with default state.
	 *		.id : family3Firstname
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : additionalMembers[2].firstName
	 * 		.classIndex : 15
	 */
	protected TextGuiTestObject text_additionalMembers2FirstNa() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_additionalMembers2FirstNa"));
	}
	/**
	 * additionalMembers2FirstName: with specific test context and state.
	 *		.id : family3Firstname
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : additionalMembers[2].firstName
	 * 		.classIndex : 15
	 */
	protected TextGuiTestObject text_additionalMembers2FirstNa(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_additionalMembers2FirstNa"), anchor, flags);
	}
	
	/**
	 * additionalMembers2Surname: with default state.
	 *		.id : family3Surname
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : additionalMembers[2].surname
	 * 		.classIndex : 16
	 */
	protected TextGuiTestObject text_additionalMembers2Surname() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_additionalMembers2Surname"));
	}
	/**
	 * additionalMembers2Surname: with specific test context and state.
	 *		.id : family3Surname
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : additionalMembers[2].surname
	 * 		.classIndex : 16
	 */
	protected TextGuiTestObject text_additionalMembers2Surname(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_additionalMembers2Surname"), anchor, flags);
	}
	
	/**
	 * addressAddressLine1: with default state.
	 *		.id : addressLine1
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : address.addressLine1
	 * 		.classIndex : 4
	 */
	protected TextGuiTestObject text_addressAddressLine1() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_addressAddressLine1"));
	}
	/**
	 * addressAddressLine1: with specific test context and state.
	 *		.id : addressLine1
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : address.addressLine1
	 * 		.classIndex : 4
	 */
	protected TextGuiTestObject text_addressAddressLine1(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_addressAddressLine1"), anchor, flags);
	}
	
	/**
	 * addressPostcode: with default state.
	 *		.id : postcode
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : address.postcode
	 * 		.classIndex : 5
	 */
	protected TextGuiTestObject text_addressPostcode() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_addressPostcode"));
	}
	/**
	 * addressPostcode: with specific test context and state.
	 *		.id : postcode
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : address.postcode
	 * 		.classIndex : 5
	 */
	protected TextGuiTestObject text_addressPostcode(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_addressPostcode"), anchor, flags);
	}
	
	/**
	 * emailAddress: with default state.
	 *		.id : emailAddress
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : emailAddress
	 * 		.classIndex : 6
	 */
	protected TextGuiTestObject text_emailAddress() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_emailAddress"));
	}
	/**
	 * emailAddress: with specific test context and state.
	 *		.id : emailAddress
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : emailAddress
	 * 		.classIndex : 6
	 */
	protected TextGuiTestObject text_emailAddress(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_emailAddress"), anchor, flags);
	}
	
	/**
	 * mobileNumber: with default state.
	 *		.id : mobileNumber
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : mobileNumber
	 * 		.classIndex : 8
	 */
	protected TextGuiTestObject text_mobileNumber() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_mobileNumber"));
	}
	/**
	 * mobileNumber: with specific test context and state.
	 *		.id : mobileNumber
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : mobileNumber
	 * 		.classIndex : 8
	 */
	protected TextGuiTestObject text_mobileNumber(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_mobileNumber"), anchor, flags);
	}
	
	/**
	 * personalVehReg: with default state.
	 *		.id : vehicleRegistration
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : personalVehReg
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject text_personalVehReg() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_personalVehReg"));
	}
	/**
	 * personalVehReg: with specific test context and state.
	 *		.id : vehicleRegistration
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : personalVehReg
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject text_personalVehReg(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_personalVehReg"), anchor, flags);
	}
	
	/**
	 * personalVehReg: with default state.
	 *		.id : vehicleRegistration
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : personalVehReg
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject text_personalVehReg2() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_personalVehReg2"));
	}
	/**
	 * personalVehReg: with specific test context and state.
	 *		.id : vehicleRegistration
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : personalVehReg
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject text_personalVehReg2(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_personalVehReg2"), anchor, flags);
	}
	
	/**
	 * phoneNumber: with default state.
	 *		.id : phoneNumber
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : phoneNumber
	 * 		.classIndex : 7
	 */
	protected TextGuiTestObject text_phoneNumber() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_phoneNumber"));
	}
	/**
	 * phoneNumber: with specific test context and state.
	 *		.id : phoneNumber
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : phoneNumber
	 * 		.classIndex : 7
	 */
	protected TextGuiTestObject text_phoneNumber(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_phoneNumber"), anchor, flags);
	}
	
	/**
	 * policyHolderDobDate: with default state.
	 *		.id : policyHolderDob
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : policyHolderDob.date
	 * 		.classIndex : 3
	 */
	protected TextGuiTestObject text_policyHolderDobDate() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_policyHolderDobDate"));
	}
	/**
	 * policyHolderDobDate: with specific test context and state.
	 *		.id : policyHolderDob
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : policyHolderDob.date
	 * 		.classIndex : 3
	 */
	protected TextGuiTestObject text_policyHolderDobDate(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_policyHolderDobDate"), anchor, flags);
	}
	
	/**
	 * policyHolderFirstname: with default state.
	 *		.id : first-name
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : policyHolderFirstname
	 * 		.classIndex : 1
	 */
	protected TextGuiTestObject text_policyHolderFirstname() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_policyHolderFirstname"));
	}
	/**
	 * policyHolderFirstname: with specific test context and state.
	 *		.id : first-name
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : policyHolderFirstname
	 * 		.classIndex : 1
	 */
	protected TextGuiTestObject text_policyHolderFirstname(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_policyHolderFirstname"), anchor, flags);
	}
	
	/**
	 * policyHolderSurname: with default state.
	 *		.id : surname
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : policyHolderSurname
	 * 		.classIndex : 2
	 */
	protected TextGuiTestObject text_policyHolderSurname() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_policyHolderSurname"));
	}
	/**
	 * policyHolderSurname: with specific test context and state.
	 *		.id : surname
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : policyHolderSurname
	 * 		.classIndex : 2
	 */
	protected TextGuiTestObject text_policyHolderSurname(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_policyHolderSurname"), anchor, flags);
	}
	
	/**
	 * policyStartDate: with default state.
	 *		.id : policyStart
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : policyStart.date
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject text_policyStartDate() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_policyStartDate"));
	}
	/**
	 * policyStartDate: with specific test context and state.
	 *		.id : policyStart
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : policyStart.date
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject text_policyStartDate(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_policyStartDate"), anchor, flags);
	}
	
	

	protected Your_DetailsHelper()
	{
		setScriptName("Road.Your_Details");
	}
	
}

