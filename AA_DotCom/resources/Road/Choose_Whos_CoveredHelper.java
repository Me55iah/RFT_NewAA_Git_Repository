// DO NOT EDIT: This file is automatically generated.
//
// Only the associated template file should be edited directly.
// Helper class files are automatically regenerated from the template
// files at various times, including record actions and test object
// insertion actions.  Any changes made directly to a helper class
// file will be lost when automatically updated.

package resources.Road;

import com.rational.test.ft.object.interfaces.*;
import com.rational.test.ft.object.interfaces.SAP.*;
import com.rational.test.ft.object.interfaces.WPF.*;
import com.rational.test.ft.object.interfaces.siebel.*;
import com.rational.test.ft.object.interfaces.flex.*;
import com.rational.test.ft.object.interfaces.dojo.*;
import com.rational.test.ft.object.interfaces.generichtmlsubdomain.*;
import com.rational.test.ft.script.*;
import com.rational.test.ft.vp.IFtVerificationPoint;
import com.ibm.rational.test.ft.object.interfaces.sapwebportal.*;
/**
 * Script Name   : <b>Choose_Whos_Covered</b><br>
 * Generated     : <b>2014/07/14 14:03:26</b><br>
 * Description   : Helper class for script<br>
 * Original Host : Windows XP x86 5.1 <br>
 * 
 * @since  July 14, 2014
 * @author courtl
 */
public abstract class Choose_Whos_CoveredHelper extends RationalTestScript
{
	/**
	 * htmlBrowser: with default state.
	 *		.class : Html.HtmlBrowser
	 * 		.browserName : MS Internet Explorer
	 * 		.processName : iexplore.exe
	 */
	protected BrowserTestObject browser_htmlBrowser() 
	{
		return new BrowserTestObject(
                        getMappedTestObject("browser_htmlBrowser"));
	}
	/**
	 * htmlBrowser: with specific test context and state.
	 *		.class : Html.HtmlBrowser
	 * 		.browserName : MS Internet Explorer
	 * 		.processName : iexplore.exe
	 */
	protected BrowserTestObject browser_htmlBrowser(TestObject anchor, long flags) 
	{
		return new BrowserTestObject(
                        getMappedTestObject("browser_htmlBrowser"), anchor, flags);
	}
	
	/**
	 * continue: with default state.
	 *		.id : nextPageImageButton
	 * 		.type : image
	 * 		.value : 1
	 * 		.title : 
	 * 		.class : Html.INPUT.image
	 * 		.name : nextPage
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_continue() 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_continue"));
	}
	/**
	 * continue: with specific test context and state.
	 *		.id : nextPageImageButton
	 * 		.type : image
	 * 		.value : 1
	 * 		.title : 
	 * 		.class : Html.INPUT.image
	 * 		.name : nextPage
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_continue(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_continue"), anchor, flags);
	}
	
	/**
	 * Continue: with default state.
	 *		.id : 
	 * 		.type : image
	 * 		.value : 
	 * 		.title : 
	 * 		.class : Html.INPUT.image
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_continue2() 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_continue2"));
	}
	/**
	 * Continue: with specific test context and state.
	 *		.id : 
	 * 		.type : image
	 * 		.value : 
	 * 		.title : 
	 * 		.class : Html.INPUT.image
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_continue2(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_continue2"), anchor, flags);
	}
	
	/**
	 * Continue: with default state.
	 *		.id : 
	 * 		.type : image
	 * 		.value : 
	 * 		.title : 
	 * 		.class : Html.INPUT.image
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_continue3() 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_continue3"));
	}
	/**
	 * Continue: with specific test context and state.
	 *		.id : 
	 * 		.type : image
	 * 		.value : 
	 * 		.title : 
	 * 		.class : Html.INPUT.image
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_continue3(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_continue3"), anchor, flags);
	}
	
	/**
	 * Continue: with default state.
	 *		.id : 
	 * 		.type : image
	 * 		.value : 
	 * 		.title : 
	 * 		.class : Html.INPUT.image
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_continue4() 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_continue4"));
	}
	/**
	 * Continue: with specific test context and state.
	 *		.id : 
	 * 		.type : image
	 * 		.value : 
	 * 		.title : 
	 * 		.class : Html.INPUT.image
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_continue4(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_continue4"), anchor, flags);
	}
	
	/**
	 * continue: with default state.
	 *		.id : nextPageImageButton
	 * 		.type : image
	 * 		.value : 1
	 * 		.title : 
	 * 		.class : Html.INPUT.image
	 * 		.name : nextPage
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_continue5() 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_continue5"));
	}
	/**
	 * continue: with specific test context and state.
	 *		.id : nextPageImageButton
	 * 		.type : image
	 * 		.value : 1
	 * 		.title : 
	 * 		.class : Html.INPUT.image
	 * 		.name : nextPage
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_continue5(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_continue5"), anchor, flags);
	}
	
	/**
	 * Continuesubmit: with default state.
	 *		.id : nextPageImageButton
	 * 		.type : submit
	 * 		.value : Continue
	 * 		.title : 
	 * 		.class : Html.INPUT.submit
	 * 		.name : nextPage
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_continuesubmit() 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_continuesubmit"));
	}
	/**
	 * Continuesubmit: with specific test context and state.
	 *		.id : nextPageImageButton
	 * 		.type : submit
	 * 		.value : Continue
	 * 		.title : 
	 * 		.class : Html.INPUT.submit
	 * 		.name : nextPage
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_continuesubmit(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_continuesubmit"), anchor, flags);
	}
	
	/**
	 * UpdateYourQuote: with default state.
	 *		.id : 
	 * 		.type : image
	 * 		.value : 
	 * 		.title : 
	 * 		.class : Html.INPUT.image
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_updateYourQuote() 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_updateYourQuote"));
	}
	/**
	 * UpdateYourQuote: with specific test context and state.
	 *		.id : 
	 * 		.type : image
	 * 		.value : 
	 * 		.title : 
	 * 		.class : Html.INPUT.image
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_updateYourQuote(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_updateYourQuote"), anchor, flags);
	}
	
	/**
	 * UpdateYourQuote: with default state.
	 *		.id : 
	 * 		.type : image
	 * 		.value : 
	 * 		.title : 
	 * 		.class : Html.INPUT.image
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_updateYourQuote2() 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_updateYourQuote2"));
	}
	/**
	 * UpdateYourQuote: with specific test context and state.
	 *		.id : 
	 * 		.type : image
	 * 		.value : 
	 * 		.title : 
	 * 		.class : Html.INPUT.image
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_updateYourQuote2(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_updateYourQuote2"), anchor, flags);
	}
	
	/**
	 * UpdateYourQuote: with default state.
	 *		.id : 
	 * 		.type : image
	 * 		.value : 
	 * 		.title : 
	 * 		.class : Html.INPUT.image
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_updateYourQuote3() 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_updateYourQuote3"));
	}
	/**
	 * UpdateYourQuote: with specific test context and state.
	 *		.id : 
	 * 		.type : image
	 * 		.value : 
	 * 		.title : 
	 * 		.class : Html.INPUT.image
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_updateYourQuote3(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_updateYourQuote3"), anchor, flags);
	}
	
	/**
	 * BreakdownCoverChooseWhoSCoveredTheAA: with default state.
	 *		.title : RegularExpression(Breakdown Cover : .*)
	 * 		.class : Html.HtmlDocument
	 * 		.url : RegularExpression(.*breakdown-cover/uk-breakdown/.*)
	 */
	protected DocumentTestObject document_breakdownCoverChooseW() 
	{
		return new DocumentTestObject(
                        getMappedTestObject("document_breakdownCoverChooseW"));
	}
	/**
	 * BreakdownCoverChooseWhoSCoveredTheAA: with specific test context and state.
	 *		.title : RegularExpression(Breakdown Cover : .*)
	 * 		.class : Html.HtmlDocument
	 * 		.url : RegularExpression(.*breakdown-cover/uk-breakdown/.*)
	 */
	protected DocumentTestObject document_breakdownCoverChooseW(TestObject anchor, long flags) 
	{
		return new DocumentTestObject(
                        getMappedTestObject("document_breakdownCoverChooseW"), anchor, flags);
	}
	
	/**
	 * VehicleNumberPlateAddAVehicleSecondVehicleNumberPlateA: with default state.
	 *		.id : 
	 * 		.title : 
	 * 		.class : Html.FORM
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject form_vehicleNumberPlateAddAVeh() 
	{
		return new GuiTestObject(
                        getMappedTestObject("form_vehicleNumberPlateAddAVeh"));
	}
	/**
	 * VehicleNumberPlateAddAVehicleSecondVehicleNumberPlateA: with specific test context and state.
	 *		.id : 
	 * 		.title : 
	 * 		.class : Html.FORM
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject form_vehicleNumberPlateAddAVeh(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("form_vehicleNumberPlateAddAVeh"), anchor, flags);
	}
	
	/**
	 * VehicleNumberPlateImportantInformationPleaseCheckTheFoll: with default state.
	 *		.id : 
	 * 		.title : 
	 * 		.class : Html.FORM
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject form_vehicleNumberPlateImporta() 
	{
		return new GuiTestObject(
                        getMappedTestObject("form_vehicleNumberPlateImporta"));
	}
	/**
	 * VehicleNumberPlateImportantInformationPleaseCheckTheFoll: with specific test context and state.
	 *		.id : 
	 * 		.title : 
	 * 		.class : Html.FORM
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject form_vehicleNumberPlateImporta(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("form_vehicleNumberPlateImporta"), anchor, flags);
	}
	
	/**
	 * overlay: with default state.
	 *		.id : overlay
	 * 		.title : 
	 * 		.class : Html.DIV
	 * 		.classIndex : 4
	 */
	protected GuiTestObject html_overlay() 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_overlay"));
	}
	/**
	 * overlay: with specific test context and state.
	 *		.id : overlay
	 * 		.title : 
	 * 		.class : Html.DIV
	 * 		.classIndex : 4
	 */
	protected GuiTestObject html_overlay(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_overlay"), anchor, flags);
	}
	
	/**
	 * coverTypeSelfcon100: with default state.
	 *		.id : joint3
	 * 		.type : radio
	 * 		.value : RegularExpression(.*)
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : coverTypeSel
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_coverType_Family() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_coverType_Family"));
	}
	/**
	 * coverTypeSelfcon100: with specific test context and state.
	 *		.id : joint3
	 * 		.type : radio
	 * 		.value : RegularExpression(.*)
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : coverTypeSel
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_coverType_Family(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_coverType_Family"), anchor, flags);
	}
	
	/**
	 * coverTypeSeljcon100: with default state.
	 *		.id : joint
	 * 		.type : radio
	 * 		.value : RegularExpression(.*)
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : coverTypeSel
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_coverType_Joint() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_coverType_Joint"));
	}
	/**
	 * coverTypeSeljcon100: with specific test context and state.
	 *		.id : joint
	 * 		.type : radio
	 * 		.value : RegularExpression(.*)
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : coverTypeSel
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_coverType_Joint(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_coverType_Joint"), anchor, flags);
	}
	
	/**
	 * coverTypeSelscon100: with default state.
	 *		.id : single
	 * 		.type : radio
	 * 		.value : RegularExpression(.*)
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : coverTypeSel
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_coverType_Single() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_coverType_Single"));
	}
	/**
	 * coverTypeSelscon100: with specific test context and state.
	 *		.id : single
	 * 		.type : radio
	 * 		.value : RegularExpression(.*)
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : coverTypeSel
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_coverType_Single(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_coverType_Single"), anchor, flags);
	}
	
	/**
	 * coverTypeSelvcon100: with default state.
	 *		.id : vehicle
	 * 		.type : radio
	 * 		.value : RegularExpression(.*)
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : coverTypeSel
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_coverType_Vehicle() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_coverType_Vehicle"));
	}
	/**
	 * coverTypeSelvcon100: with specific test context and state.
	 *		.id : vehicle
	 * 		.type : radio
	 * 		.value : RegularExpression(.*)
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : coverTypeSel
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_coverType_Vehicle(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_coverType_Vehicle"), anchor, flags);
	}
	
	/**
	 * policyStartDate: with default state.
	 *		.id : policyStart
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : policyStart.date
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject text_policyStartDate() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_policyStartDate"));
	}
	/**
	 * policyStartDate: with specific test context and state.
	 *		.id : policyStart
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : policyStart.date
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject text_policyStartDate(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_policyStartDate"), anchor, flags);
	}
	
	/**
	 * vehReg: with default state.
	 *		.id : vehReg2
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : vehReg
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject text_vehReg() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_vehReg"));
	}
	/**
	 * vehReg: with specific test context and state.
	 *		.id : vehReg2
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : vehReg
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject text_vehReg(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_vehReg"), anchor, flags);
	}
	
	/**
	 * vehReg: with default state.
	 *		.id : vehReg1
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : vehReg
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject text_vehReg2() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_vehReg2"));
	}
	/**
	 * vehReg: with specific test context and state.
	 *		.id : vehReg1
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : vehReg
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject text_vehReg2(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_vehReg2"), anchor, flags);
	}
	
	/**
	 * vehReg: with default state.
	 *		.id : vehReg1
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : vehReg
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject text_vehReg3() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_vehReg3"));
	}
	/**
	 * vehReg: with specific test context and state.
	 *		.id : vehReg1
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : vehReg
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject text_vehReg3(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_vehReg3"), anchor, flags);
	}
	
	

	protected Choose_Whos_CoveredHelper()
	{
		setScriptName("Road.Choose_Whos_Covered");
	}
	
}

