// DO NOT EDIT: This file is automatically generated.
//
// Only the associated template file should be edited directly.
// Helper class files are automatically regenerated from the template
// files at various times, including record actions and test object
// insertion actions.  Any changes made directly to a helper class
// file will be lost when automatically updated.

package resources.Vehicle_Inspection;
import Utilities.AA_SuperHelper;
import com.rational.test.ft.object.interfaces.*;
import com.rational.test.ft.object.interfaces.SAP.*;
import com.rational.test.ft.object.interfaces.WPF.*;
import com.rational.test.ft.object.interfaces.siebel.*;
import com.rational.test.ft.object.interfaces.flex.*;
import com.rational.test.ft.object.interfaces.dojo.*;
import com.rational.test.ft.object.interfaces.generichtmlsubdomain.*;
import com.rational.test.ft.script.*;
import com.rational.test.ft.vp.IFtVerificationPoint;
import com.ibm.rational.test.ft.object.interfaces.sapwebportal.*;
/**
 * Script Name   : <b>Vehicle__Inspection</b><br>
 * Generated     : <b>2015/09/21 11:24:41</b><br>
 * Description   : Helper class for script<br>
 * Original Host : Windows 7 x86 6.1 <br>
 * 
 * @since  September 21, 2015
 * @author horned
 */
public abstract class Vehicle__InspectionHelper extends Utilities.AA_SuperHelper
{
	/**
	 * Continuesubmit: with default state.
	 *		.id : continue
	 * 		.type : submit
	 * 		.value : Continue
	 * 		.title : 
	 * 		.class : Html.BUTTON
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_continuesubmit() 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_continuesubmit"));
	}
	/**
	 * Continuesubmit: with specific test context and state.
	 *		.id : continue
	 * 		.type : submit
	 * 		.value : Continue
	 * 		.title : 
	 * 		.class : Html.BUTTON
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_continuesubmit(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_continuesubmit"), anchor, flags);
	}
	
	/**
	 * ctrlMinidetails: with default state.
	 *		.id : 
	 * 		.title : 
	 * 		.class : Html.FORM
	 * 		.name : ctrl.minidetails
	 * 		.classIndex : 0
	 */
	protected GuiTestObject form_ctrlMinidetails() 
	{
		return new GuiTestObject(
                        getMappedTestObject("form_ctrlMinidetails"));
	}
	/**
	 * ctrlMinidetails: with specific test context and state.
	 *		.id : 
	 * 		.title : 
	 * 		.class : Html.FORM
	 * 		.name : ctrl.minidetails
	 * 		.classIndex : 0
	 */
	protected GuiTestObject form_ctrlMinidetails(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("form_ctrlMinidetails"), anchor, flags);
	}
	
	/**
	 * container: with default state.
	 *		.id : container
	 * 		.title : 
	 * 		.class : Html.DIV
	 * 		.classIndex : 0
	 */
	protected GuiTestObject html_container() 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_container"));
	}
	/**
	 * container: with specific test context and state.
	 *		.id : container
	 * 		.title : 
	 * 		.class : Html.DIV
	 * 		.classIndex : 0
	 */
	protected GuiTestObject html_container(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_container"), anchor, flags);
	}
	
	/**
	 * ngApp: with default state.
	 *		.id : ng-app
	 * 		.title : 
	 * 		.class : Html.HTML
	 * 		.classIndex : 0
	 */
	protected GuiTestObject html_ngApp() 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_ngApp"));
	}
	/**
	 * ngApp: with specific test context and state.
	 *		.id : ng-app
	 * 		.title : 
	 * 		.class : Html.HTML
	 * 		.classIndex : 0
	 */
	protected GuiTestObject html_ngApp(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_ngApp"), anchor, flags);
	}
	
	/**
	 * iE: with default state.
	 *		.class : Html.HtmlBrowser
	 * 		.browserName : MS Internet Explorer
	 * 		.processName : iexplore.exe
	 */
	protected BrowserTestObject iE() 
	{
		return new BrowserTestObject(
                        getMappedTestObject("iE"));
	}
	/**
	 * iE: with specific test context and state.
	 *		.class : Html.HtmlBrowser
	 * 		.browserName : MS Internet Explorer
	 * 		.processName : iexplore.exe
	 */
	protected BrowserTestObject iE(TestObject anchor, long flags) 
	{
		return new BrowserTestObject(
                        getMappedTestObject("iE"), anchor, flags);
	}
	
	/**
	 * Car: with default state.
	 *		.id : vehicle_type_car_label
	 * 		.value : Car
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 1
	 */
	protected GuiTestObject label_car() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_car"));
	}
	/**
	 * Car: with specific test context and state.
	 *		.id : vehicle_type_car_label
	 * 		.value : Car
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 1
	 */
	protected GuiTestObject label_car(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_car"), anchor, flags);
	}
	
	/**
	 * Motor_4X4: with default state.
	 *		.id : vehicle_type_4x4_label
	 * 		.value : 4X4
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 4
	 */
	protected GuiTestObject label_motor_4X4() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_motor_4X4"));
	}
	/**
	 * Motor_4X4: with specific test context and state.
	 *		.id : vehicle_type_4x4_label
	 * 		.value : 4X4
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 4
	 */
	protected GuiTestObject label_motor_4X4(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_motor_4X4"), anchor, flags);
	}
	
	/**
	 * Motorhome: with default state.
	 *		.id : vehicle_type_motorhome_label
	 * 		.value : Motorhome
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 3
	 */
	protected GuiTestObject label_motorhome() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_motorhome"));
	}
	/**
	 * Motorhome: with specific test context and state.
	 *		.id : vehicle_type_motorhome_label
	 * 		.value : Motorhome
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 3
	 */
	protected GuiTestObject label_motorhome(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_motorhome"), anchor, flags);
	}
	
	/**
	 * Van: with default state.
	 *		.id : vehicle_type_van_label
	 * 		.value : Van
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 2
	 */
	protected GuiTestObject label_van() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_van"));
	}
	/**
	 * Van: with specific test context and state.
	 *		.id : vehicle_type_van_label
	 * 		.value : Van
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 2
	 */
	protected GuiTestObject label_van(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_van"), anchor, flags);
	}
	
	/**
	 * registration_number: with default state.
	 *		.id : registration_number
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : registration_number
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject text_registration_number() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_registration_number"));
	}
	/**
	 * registration_number: with specific test context and state.
	 *		.id : registration_number
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : registration_number
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject text_registration_number(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_registration_number"), anchor, flags);
	}
	
	

	protected Vehicle__InspectionHelper()
	{
		setScriptName("Vehicle_Inspection.Vehicle__Inspection");
	}
	
}

