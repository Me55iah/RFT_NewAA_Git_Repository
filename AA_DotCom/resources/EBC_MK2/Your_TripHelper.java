// DO NOT EDIT: This file is automatically generated.
//
// Only the associated template file should be edited directly.
// Helper class files are automatically regenerated from the template
// files at various times, including record actions and test object
// insertion actions.  Any changes made directly to a helper class
// file will be lost when automatically updated.

package resources.EBC_MK2;

import com.rational.test.ft.object.interfaces.*;
import com.rational.test.ft.object.interfaces.SAP.*;
import com.rational.test.ft.object.interfaces.WPF.*;
import com.rational.test.ft.object.interfaces.siebel.*;
import com.rational.test.ft.object.interfaces.flex.*;
import com.rational.test.ft.object.interfaces.dojo.*;
import com.rational.test.ft.object.interfaces.generichtmlsubdomain.*;
import com.rational.test.ft.script.*;
import com.rational.test.ft.vp.IFtVerificationPoint;
import com.ibm.rational.test.ft.object.interfaces.sapwebportal.*;
/**
 * Script Name   : <b>Your_Trip</b><br>
 * Generated     : <b>2015/01/09 09:41:37</b><br>
 * Description   : Helper class for script<br>
 * Original Host : Windows 7 x86 6.1 <br>
 * 
 * @since  January 09, 2015
 * @author horned
 */
public abstract class Your_TripHelper extends RationalTestScript
{
	/**
	 * reg: with default state.
	 *		.id : reg
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : reg
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject Registration_Number() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("Registration_Number"));
	}
	/**
	 * reg: with specific test context and state.
	 *		.id : reg
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : reg
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject Registration_Number(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("Registration_Number"), anchor, flags);
	}
	
	/**
	 * ContinueWithZone1Zone2Zone3AllZonessubmit: with default state.
	 *		.id : zone-submit
	 * 		.type : submit
	 * 		.value :  Continue with Zone 1 Zone 2 Zone 3 All zones 
	 * 		.title : 
	 * 		.class : Html.BUTTON
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_Zone1() 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_Zone1"));
	}
	/**
	 * ContinueWithZone1Zone2Zone3AllZonessubmit: with specific test context and state.
	 *		.id : zone-submit
	 * 		.type : submit
	 * 		.value :  Continue with Zone 1 Zone 2 Zone 3 All zones 
	 * 		.title : 
	 * 		.class : Html.BUTTON
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_Zone1(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_Zone1"), anchor, flags);
	}
	
	/**
	 * Continuesubmit: with default state.
	 *		.id : continue
	 * 		.type : submit
	 * 		.value : Continue
	 * 		.title : 
	 * 		.class : Html.BUTTON
	 * 		.name : 
	 * 		.classIndex : RegularExpression(\d)
	 */
	protected GuiTestObject continue_Submit() 
	{
		return new GuiTestObject(
                        getMappedTestObject("continue_Submit"));
	}
	/**
	 * Continuesubmit: with specific test context and state.
	 *		.id : continue
	 * 		.type : submit
	 * 		.value : Continue
	 * 		.title : 
	 * 		.class : Html.BUTTON
	 * 		.name : 
	 * 		.classIndex : RegularExpression(\d)
	 */
	protected GuiTestObject continue_Submit(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("continue_Submit"), anchor, flags);
	}
	
	/**
	 * Annual: with default state.
	 *		.id : annual-label
	 * 		.value : Annual
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : RegularExpression(\d)
	 */
	protected GuiTestObject label_annual() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_annual"));
	}
	/**
	 * Annual: with specific test context and state.
	 *		.id : annual-label
	 * 		.value : Annual
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : RegularExpression(\d)
	 */
	protected GuiTestObject label_annual(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_annual"), anchor, flags);
	}
	
	/**
	 * SingleTrip: with default state.
	 *		.id : single-label
	 * 		.value : Single trip
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : RegularExpression(\d)
	 */
	protected GuiTestObject label_singleTrip() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_singleTrip"));
	}
	/**
	 * SingleTrip: with specific test context and state.
	 *		.id : single-label
	 * 		.value : Single trip
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : RegularExpression(\d)
	 */
	protected GuiTestObject label_singleTrip(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_singleTrip"), anchor, flags);
	}
	
	/**
	 * YearOfRegistration: with default state.
	 *		.id : year-of-reg-label
	 * 		.value : Year of registration
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 0
	 */
	protected GuiTestObject label_yearOfRegistration() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_yearOfRegistration"));
	}
	/**
	 * YearOfRegistration: with specific test context and state.
	 *		.id : year-of-reg-label
	 * 		.value : Year of registration
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 0
	 */
	protected GuiTestObject label_yearOfRegistration(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_yearOfRegistration"), anchor, flags);
	}
	
	

	protected Your_TripHelper()
	{
		setScriptName("EBC_MK2.Your_Trip");
	}
	
}

