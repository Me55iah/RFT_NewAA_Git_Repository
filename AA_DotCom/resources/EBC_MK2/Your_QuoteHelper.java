// DO NOT EDIT: This file is automatically generated.
//
// Only the associated template file should be edited directly.
// Helper class files are automatically regenerated from the template
// files at various times, including record actions and test object
// insertion actions.  Any changes made directly to a helper class
// file will be lost when automatically updated.

package resources.EBC_MK2;
import Utilities.AA_SuperHelper;
import com.rational.test.ft.object.interfaces.*;
import com.rational.test.ft.object.interfaces.SAP.*;
import com.rational.test.ft.object.interfaces.WPF.*;
import com.rational.test.ft.object.interfaces.siebel.*;
import com.rational.test.ft.object.interfaces.flex.*;
import com.rational.test.ft.object.interfaces.dojo.*;
import com.rational.test.ft.object.interfaces.generichtmlsubdomain.*;
import com.rational.test.ft.script.*;
import com.rational.test.ft.vp.IFtVerificationPoint;
import com.ibm.rational.test.ft.object.interfaces.sapwebportal.*;
/**
 * Script Name   : <b>Your_Quote</b><br>
 * Generated     : <b>2015/01/05 09:52:12</b><br>
 * Description   : Helper class for script<br>
 * Original Host : Windows 7 x86 6.1 <br>
 * 
 * @since  January 05, 2015
 * @author horned
 */
public abstract class Your_QuoteHelper extends Utilities.AA_SuperHelper
{
	/**
	 * No: with default state.
	 *		.id : member-no-label
	 * 		.value : No 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : RegularExpression(\d)
	 */
	protected GuiTestObject AA_Member_No() 
	{
		return new GuiTestObject(
                        getMappedTestObject("AA_Member_No"));
	}
	/**
	 * No: with specific test context and state.
	 *		.id : member-no-label
	 * 		.value : No 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : RegularExpression(\d)
	 */
	protected GuiTestObject AA_Member_No(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("AA_Member_No"), anchor, flags);
	}
	
	/**
	 * Yes: with default state.
	 *		.id : member-yes-label
	 * 		.value : Yes 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : RegularExpression(\d)
	 */
	protected GuiTestObject AA_Member_Yes() 
	{
		return new GuiTestObject(
                        getMappedTestObject("AA_Member_Yes"));
	}
	/**
	 * Yes: with specific test context and state.
	 *		.id : member-yes-label
	 * 		.value : Yes 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : RegularExpression(\d)
	 */
	protected GuiTestObject AA_Member_Yes(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("AA_Member_Yes"), anchor, flags);
	}
	
	/**
	 * Continuesubmit: with default state.
	 *		.id : continue
	 * 		.type : submit
	 * 		.value : Continue
	 * 		.title : 
	 * 		.class : Html.BUTTON
	 * 		.name : 
	 * 		.classIndex : RegularExpression(\d)
	 */
	protected GuiTestObject Continue() 
	{
		return new GuiTestObject(
                        getMappedTestObject("Continue"));
	}
	/**
	 * Continuesubmit: with specific test context and state.
	 *		.id : continue
	 * 		.type : submit
	 * 		.value : Continue
	 * 		.title : 
	 * 		.class : Html.BUTTON
	 * 		.name : 
	 * 		.classIndex : RegularExpression(\d)
	 */
	protected GuiTestObject Continue(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("Continue"), anchor, flags);
	}
	
	/**
	 * Selectedsubmit: with default state.
	 *		.id : cover-full-button
	 * 		.type : submit
	 * 		.value : Selected
	 * 		.title : 
	 * 		.class : Html.BUTTON
	 * 		.name : 
	 * 		.classIndex : RegularExpression(\d)
	 */
	protected GuiTestObject Full_Cover() 
	{
		return new GuiTestObject(
                        getMappedTestObject("Full_Cover"));
	}
	/**
	 * Selectedsubmit: with specific test context and state.
	 *		.id : cover-full-button
	 * 		.type : submit
	 * 		.value : Selected
	 * 		.title : 
	 * 		.class : Html.BUTTON
	 * 		.name : 
	 * 		.classIndex : RegularExpression(\d)
	 */
	protected GuiTestObject Full_Cover(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("Full_Cover"), anchor, flags);
	}
	
	/**
	 * Selectsubmit: with default state.
	 *		.id : cover-lite-button
	 * 		.type : submit
	 * 		.value : Select
	 * 		.title : 
	 * 		.class : Html.BUTTON
	 * 		.name : 
	 * 		.classIndex : RegularExpression(\d)
	 */
	protected GuiTestObject Lite_Cover() 
	{
		return new GuiTestObject(
                        getMappedTestObject("Lite_Cover"));
	}
	/**
	 * Selectsubmit: with specific test context and state.
	 *		.id : cover-lite-button
	 * 		.type : submit
	 * 		.value : Select
	 * 		.title : 
	 * 		.class : Html.BUTTON
	 * 		.name : 
	 * 		.classIndex : RegularExpression(\d)
	 */
	protected GuiTestObject Lite_Cover(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("Lite_Cover"), anchor, flags);
	}
	
	/**
	 * Selectsubmit: with default state.
	 *		.id : cover-lite-button
	 * 		.type : submit
	 * 		.value : Select  
	 * 		.title : 
	 * 		.class : Html.BUTTON
	 * 		.name : 
	 * 		.classIndex : RegularExpression(\d)
	 */
	protected GuiTestObject Lite_Cover_Selected() 
	{
		return new GuiTestObject(
                        getMappedTestObject("Lite_Cover_Selected"));
	}
	/**
	 * Selectsubmit: with specific test context and state.
	 *		.id : cover-lite-button
	 * 		.type : submit
	 * 		.value : Select  
	 * 		.title : 
	 * 		.class : Html.BUTTON
	 * 		.name : 
	 * 		.classIndex : RegularExpression(\d)
	 */
	protected GuiTestObject Lite_Cover_Selected(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("Lite_Cover_Selected"), anchor, flags);
	}
	
	/**
	 * Selectedsubmit: with default state.
	 *		.id : cover-lite-button
	 * 		.type : submit
	 * 		.value : Selected  
	 * 		.title : 
	 * 		.class : Html.BUTTON
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_selectedsubmit() 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_selectedsubmit"));
	}
	/**
	 * Selectedsubmit: with specific test context and state.
	 *		.id : cover-lite-button
	 * 		.type : submit
	 * 		.value : Selected  
	 * 		.title : 
	 * 		.class : Html.BUTTON
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_selectedsubmit(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_selectedsubmit"), anchor, flags);
	}
	
	/**
	 * Selectedsubmit: with default state.
	 *		.id : cover-full-button
	 * 		.type : submit
	 * 		.value : Selected  
	 * 		.title : 
	 * 		.class : Html.BUTTON
	 * 		.name : 
	 * 		.classIndex : 1
	 */
	protected GuiTestObject button_selectedsubmit2() 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_selectedsubmit2"));
	}
	/**
	 * Selectedsubmit: with specific test context and state.
	 *		.id : cover-full-button
	 * 		.type : submit
	 * 		.value : Selected  
	 * 		.title : 
	 * 		.class : Html.BUTTON
	 * 		.name : 
	 * 		.classIndex : 1
	 */
	protected GuiTestObject button_selectedsubmit2(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_selectedsubmit2"), anchor, flags);
	}
	
	/**
	 * Selectsubmit: with default state.
	 *		.id : cover-full-button
	 * 		.type : submit
	 * 		.value : Select  
	 * 		.title : 
	 * 		.class : Html.BUTTON
	 * 		.name : 
	 * 		.classIndex : 1
	 */
	protected GuiTestObject button_selectsubmit2() 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_selectsubmit2"));
	}
	/**
	 * Selectsubmit: with specific test context and state.
	 *		.id : cover-full-button
	 * 		.type : submit
	 * 		.value : Select  
	 * 		.title : 
	 * 		.class : Html.BUTTON
	 * 		.name : 
	 * 		.classIndex : 1
	 */
	protected GuiTestObject button_selectsubmit2(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_selectsubmit2"), anchor, flags);
	}
	
	/**
	 * htmlBrowser: with default state.
	 *		.class : Html.HtmlBrowser
	 * 		.browserName : MS Internet Explorer
	 * 		.processName : iexplore.exe
	 */
	protected BrowserTestObject iE() 
	{
		return new BrowserTestObject(
                        getMappedTestObject("iE"));
	}
	/**
	 * htmlBrowser: with specific test context and state.
	 *		.class : Html.HtmlBrowser
	 * 		.browserName : MS Internet Explorer
	 * 		.processName : iexplore.exe
	 */
	protected BrowserTestObject iE(TestObject anchor, long flags) 
	{
		return new BrowserTestObject(
                        getMappedTestObject("iE"), anchor, flags);
	}
	
	/**
	 * lightQuoteTotal: with default state.
	 *		.id : light-quote-total
	 * 		.title : 
	 * 		.class : Html.SPAN
	 * 		.classIndex : RegularExpression(\d)
	 */
	protected GuiTestObject liteQuoteTotal() 
	{
		return new GuiTestObject(
                        getMappedTestObject("liteQuoteTotal"));
	}
	/**
	 * lightQuoteTotal: with specific test context and state.
	 *		.id : light-quote-total
	 * 		.title : 
	 * 		.class : Html.SPAN
	 * 		.classIndex : RegularExpression(\d)
	 */
	protected GuiTestObject liteQuoteTotal(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("liteQuoteTotal"), anchor, flags);
	}
	
	/**
	 * AddPartsAndLabour£1177WeLlHelpWithRepairBillsAfterA: with default state.
	 *		.id : parts-labour-label
	 * 		.value : RegularExpression(Add parts and labour £.*)
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : RegularExpression(\d)
	 */
	protected GuiTestObject parts_Labour() 
	{
		return new GuiTestObject(
                        getMappedTestObject("parts_Labour"));
	}
	/**
	 * AddPartsAndLabour£1177WeLlHelpWithRepairBillsAfterA: with specific test context and state.
	 *		.id : parts-labour-label
	 * 		.value : RegularExpression(Add parts and labour £.*)
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : RegularExpression(\d)
	 */
	protected GuiTestObject parts_Labour(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("parts_Labour"), anchor, flags);
	}
	
	/**
	 * standardQuoteTotal: with default state.
	 *		.id : standard-quote-total
	 * 		.title : 
	 * 		.class : Html.SPAN
	 * 		.classIndex : RegularExpression(\d)
	 */
	protected GuiTestObject standardQuoteTotal() 
	{
		return new GuiTestObject(
                        getMappedTestObject("standardQuoteTotal"));
	}
	/**
	 * standardQuoteTotal: with specific test context and state.
	 *		.id : standard-quote-total
	 * 		.title : 
	 * 		.class : Html.SPAN
	 * 		.classIndex : RegularExpression(\d)
	 */
	protected GuiTestObject standardQuoteTotal(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("standardQuoteTotal"), anchor, flags);
	}
	
	/**
	 * totalPrice: with default state.
	 *		.id : total-price
	 * 		.title : 
	 * 		.class : Html.SPAN
	 * 		.classIndex : 2
	 */
	protected GuiTestObject totalPrice() 
	{
		return new GuiTestObject(
                        getMappedTestObject("totalPrice"));
	}
	/**
	 * totalPrice: with specific test context and state.
	 *		.id : total-price
	 * 		.title : 
	 * 		.class : Html.SPAN
	 * 		.classIndex : 2
	 */
	protected GuiTestObject totalPrice(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("totalPrice"), anchor, flags);
	}
	
	

	protected Your_QuoteHelper()
	{
		setScriptName("EBC_MK2.Your_Quote");
	}
	
}

