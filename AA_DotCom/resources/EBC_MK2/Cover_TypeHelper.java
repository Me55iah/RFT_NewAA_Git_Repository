// DO NOT EDIT: This file is automatically generated.
//
// Only the associated template file should be edited directly.
// Helper class files are automatically regenerated from the template
// files at various times, including record actions and test object
// insertion actions.  Any changes made directly to a helper class
// file will be lost when automatically updated.

package resources.EBC_MK2;
import Utilities.AA_SuperHelper;
import com.rational.test.ft.object.interfaces.*;
import com.rational.test.ft.object.interfaces.SAP.*;
import com.rational.test.ft.object.interfaces.WPF.*;
import com.rational.test.ft.object.interfaces.siebel.*;
import com.rational.test.ft.object.interfaces.flex.*;
import com.rational.test.ft.object.interfaces.dojo.*;
import com.rational.test.ft.object.interfaces.generichtmlsubdomain.*;
import com.rational.test.ft.script.*;
import com.rational.test.ft.vp.IFtVerificationPoint;
import com.ibm.rational.test.ft.object.interfaces.sapwebportal.*;
/**
 * Script Name   : <b>Cover_Type</b><br>
 * Generated     : <b>2014/12/29 14:50:16</b><br>
 * Description   : Helper class for script<br>
 * Original Host : Windows 7 x86 6.1 <br>
 * 
 * @since  December 29, 2014
 * @author horned
 */
public abstract class Cover_TypeHelper extends Utilities.AA_SuperHelper
{
	/**
	 * WhenDoYouWantYourCoverToStart: with default state.
	 *		.id : 
	 * 		.value :  When do you want your cover to start? 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : RegularExpression(\d)
	 */
	protected GuiTestObject Cover_Start_Date() 
	{
		return new GuiTestObject(
                        getMappedTestObject("Cover_Start_Date"));
	}
	/**
	 * WhenDoYouWantYourCoverToStart: with specific test context and state.
	 *		.id : 
	 * 		.value :  When do you want your cover to start? 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : RegularExpression(\d)
	 */
	protected GuiTestObject Cover_Start_Date(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("Cover_Start_Date"), anchor, flags);
	}
	
	/**
	 * reg: with default state.
	 *		.id : reg
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : reg
	 * 		.classIndex : RegularExpression(\d)
	 */
	protected TextGuiTestObject Registration_Number() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("Registration_Number"));
	}
	/**
	 * reg: with specific test context and state.
	 *		.id : reg
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : reg
	 * 		.classIndex : RegularExpression(\d)
	 */
	protected TextGuiTestObject Registration_Number(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("Registration_Number"), anchor, flags);
	}
	
	/**
	 * next: with default state.
	 *		.text : next
	 * 		.id : 
	 * 		.href : RegularExpression(.*uropean-breakdown.*)
	 * 		.title : 
	 * 		.class : Html.A
	 * 		.name : 
	 * 		.classIndex : 1
	 */
	protected GuiTestObject cal_Leaving_Next_Button() 
	{
		return new GuiTestObject(
                        getMappedTestObject("cal_Leaving_Next_Button"));
	}
	/**
	 * next: with specific test context and state.
	 *		.text : next
	 * 		.id : 
	 * 		.href : RegularExpression(.*uropean-breakdown.*)
	 * 		.title : 
	 * 		.class : Html.A
	 * 		.name : 
	 * 		.classIndex : 1
	 */
	protected GuiTestObject cal_Leaving_Next_Button(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("cal_Leaving_Next_Button"), anchor, flags);
	}
	
	/**
	 * Other: with default state.
	 *		.id : other-nights-stay-start
	 * 		.value : Other  
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : RegularExpression(\d)
	 */
	protected GuiTestObject cal_Other_Button_Leaving() 
	{
		return new GuiTestObject(
                        getMappedTestObject("cal_Other_Button_Leaving"));
	}
	/**
	 * Other: with specific test context and state.
	 *		.id : other-nights-stay-start
	 * 		.value : Other  
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : RegularExpression(\d)
	 */
	protected GuiTestObject cal_Other_Button_Leaving(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("cal_Other_Button_Leaving"), anchor, flags);
	}
	
	/**
	 * Other: with default state.
	 *		.id : other-nights-stay-end
	 * 		.value : Other  
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : RegularExpression(\d)
	 */
	protected GuiTestObject cal_Other_Button_Returning() 
	{
		return new GuiTestObject(
                        getMappedTestObject("cal_Other_Button_Returning"));
	}
	/**
	 * Other: with specific test context and state.
	 *		.id : other-nights-stay-end
	 * 		.value : Other  
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : RegularExpression(\d)
	 */
	protected GuiTestObject cal_Other_Button_Returning(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("cal_Other_Button_Returning"), anchor, flags);
	}
	
	/**
	 * next: with default state.
	 *		.text : next
	 * 		.id : 
	 * 		.href : RegularExpression(.*uropean-breakdown.*)
	 * 		.title : 
	 * 		.class : Html.A
	 * 		.name : 
	 * 		.classIndex : 3
	 */
	protected GuiTestObject cal_Returning_Next_Button() 
	{
		return new GuiTestObject(
                        getMappedTestObject("cal_Returning_Next_Button"));
	}
	/**
	 * next: with specific test context and state.
	 *		.text : next
	 * 		.id : 
	 * 		.href : RegularExpression(.*uropean-breakdown.*)
	 * 		.title : 
	 * 		.class : Html.A
	 * 		.name : 
	 * 		.classIndex : 3
	 */
	protected GuiTestObject cal_Returning_Next_Button(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("cal_Returning_Next_Button"), anchor, flags);
	}
	
	/**
	 * Annual: with default state.
	 *		.id : annual-label
	 * 		.value : Annual
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : RegularExpression(\d)
	 */
	protected GuiTestObject chkBx_Annual_Selection() 
	{
		return new GuiTestObject(
                        getMappedTestObject("chkBx_Annual_Selection"));
	}
	/**
	 * Annual: with specific test context and state.
	 *		.id : annual-label
	 * 		.value : Annual
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : RegularExpression(\d)
	 */
	protected GuiTestObject chkBx_Annual_Selection(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("chkBx_Annual_Selection"), anchor, flags);
	}
	
	/**
	 * SingleTrip: with default state.
	 *		.id : single-label
	 * 		.value : Single trip
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : RegularExpression(\d)
	 */
	protected GuiTestObject chkBx_SingleTrip_Selection() 
	{
		return new GuiTestObject(
                        getMappedTestObject("chkBx_SingleTrip_Selection"));
	}
	/**
	 * SingleTrip: with specific test context and state.
	 *		.id : single-label
	 * 		.value : Single trip
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : RegularExpression(\d)
	 */
	protected GuiTestObject chkBx_SingleTrip_Selection(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("chkBx_SingleTrip_Selection"), anchor, flags);
	}
	
	/**
	 * Continuesubmit: with default state.
	 *		.id : continue
	 * 		.type : submit
	 * 		.value : Continue
	 * 		.title : 
	 * 		.class : Html.BUTTON
	 * 		.name : 
	 * 		.classIndex : RegularExpression(\d)
	 */
	protected GuiTestObject continue_Submit() 
	{
		return new GuiTestObject(
                        getMappedTestObject("continue_Submit"));
	}
	/**
	 * Continuesubmit: with specific test context and state.
	 *		.id : continue
	 * 		.type : submit
	 * 		.value : Continue
	 * 		.title : 
	 * 		.class : Html.BUTTON
	 * 		.name : 
	 * 		.classIndex : RegularExpression(\d)
	 */
	protected GuiTestObject continue_Submit(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("continue_Submit"), anchor, flags);
	}
	
	/**
	 * coverDetails: with default state.
	 *		.id : 
	 * 		.title : 
	 * 		.class : Html.FORM
	 * 		.name : coverDetails
	 * 		.classIndex : RegularExpression(\d)
	 */
	protected GuiTestObject form_coverDetails() 
	{
		return new GuiTestObject(
                        getMappedTestObject("form_coverDetails"));
	}
	/**
	 * coverDetails: with specific test context and state.
	 *		.id : 
	 * 		.title : 
	 * 		.class : Html.FORM
	 * 		.name : coverDetails
	 * 		.classIndex : RegularExpression(\d)
	 */
	protected GuiTestObject form_coverDetails(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("form_coverDetails"), anchor, flags);
	}
	
	/**
	 * Other: with default state.
	 *		.id : other-nights-stay-start
	 * 		.value : Other   
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : RegularExpression(\d)
	 */
	protected GuiTestObject label_other() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_other"));
	}
	/**
	 * Other: with specific test context and state.
	 *		.id : other-nights-stay-start
	 * 		.value : Other   
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : RegularExpression(\d)
	 */
	protected GuiTestObject label_other(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_other"), anchor, flags);
	}
	
	/**
	 * WhenWillYouLeaveHome: with default state.
	 *		.id : 
	 * 		.value : When will you leave home?  
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : RegularExpression(\d)
	 */
	protected GuiTestObject whenWillYouLeaveHome() 
	{
		return new GuiTestObject(
                        getMappedTestObject("whenWillYouLeaveHome"));
	}
	/**
	 * WhenWillYouLeaveHome: with specific test context and state.
	 *		.id : 
	 * 		.value : When will you leave home?  
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : RegularExpression(\d)
	 */
	protected GuiTestObject whenWillYouLeaveHome(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("whenWillYouLeaveHome"), anchor, flags);
	}
	
	/**
	 * WhenWillYouReturnHome: with default state.
	 *		.id : 
	 * 		.value : When will you return home?
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : RegularExpression(\d)
	 */
	protected GuiTestObject whenWillYouReturnHome() 
	{
		return new GuiTestObject(
                        getMappedTestObject("whenWillYouReturnHome"));
	}
	/**
	 * WhenWillYouReturnHome: with specific test context and state.
	 *		.id : 
	 * 		.value : When will you return home?
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : RegularExpression(\d)
	 */
	protected GuiTestObject whenWillYouReturnHome(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("whenWillYouReturnHome"), anchor, flags);
	}
	
	

	protected Cover_TypeHelper()
	{
		setScriptName("EBC_MK2.Cover_Type");
	}
	
}

