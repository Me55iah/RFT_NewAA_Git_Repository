// DO NOT EDIT: This file is automatically generated.
//
// Only the associated template file should be edited directly.
// Helper class files are automatically regenerated from the template
// files at various times, including record actions and test object
// insertion actions.  Any changes made directly to a helper class
// file will be lost when automatically updated.

package resources.EBC;

import com.rational.test.ft.object.interfaces.*;
import com.rational.test.ft.object.interfaces.SAP.*;
import com.rational.test.ft.object.interfaces.WPF.*;
import com.rational.test.ft.object.interfaces.siebel.*;
import com.rational.test.ft.object.interfaces.flex.*;
import com.rational.test.ft.object.interfaces.dojo.*;
import com.rational.test.ft.object.interfaces.generichtmlsubdomain.*;
import com.rational.test.ft.script.*;
import com.rational.test.ft.vp.IFtVerificationPoint;
import com.ibm.rational.test.ft.object.interfaces.sapwebportal.*;
/**
 * Script Name   : <b>Your_Quote</b><br>
 * Generated     : <b>2013/04/16 13:44:05</b><br>
 * Description   : Helper class for script<br>
 * Original Host : Windows XP x86 5.1 <br>
 * 
 * @since  April 16, 2013
 * @author courtl
 */
public abstract class Your_QuoteHelper extends RationalTestScript
{
	/**
	 * Continue: with default state.
	 *		.id : 
	 * 		.type : image
	 * 		.value : 
	 * 		.title : 
	 * 		.class : Html.INPUT.image
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_continue() 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_continue"));
	}
	/**
	 * Continue: with specific test context and state.
	 *		.id : 
	 * 		.type : image
	 * 		.value : 
	 * 		.title : 
	 * 		.class : Html.INPUT.image
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_continue(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_continue"), anchor, flags);
	}
	
	/**
	 * infoBox: with default state.
	 *		.id : infoBox
	 * 		.title : 
	 * 		.class : Html.DIV
	 * 		.classIndex : 0
	 */
	protected GuiTestObject html_infoBox() 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_infoBox"));
	}
	/**
	 * infoBox: with specific test context and state.
	 *		.id : infoBox
	 * 		.title : 
	 * 		.class : Html.DIV
	 * 		.classIndex : 0
	 */
	protected GuiTestObject html_infoBox(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_infoBox"), anchor, flags);
	}
	
	/**
	 * title: with default state.
	 *		.text : Please select Mr Ms Miss Mrs Doctor
	 * 		.id : title
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : title
	 * 		.classIndex : 0
	 */
	protected SelectGuiSubitemTestObject list_title() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_title"));
	}
	/**
	 * title: with specific test context and state.
	 *		.text : Please select Mr Ms Miss Mrs Doctor
	 * 		.id : title
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : title
	 * 		.classIndex : 0
	 */
	protected SelectGuiSubitemTestObject list_title(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_title"), anchor, flags);
	}
	
	/**
	 * productSelected1: with default state.
	 *		.id : 
	 * 		.type : radio
	 * 		.value : 1
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : productSelected
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_productSelected1() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_productSelected1"));
	}
	/**
	 * productSelected1: with specific test context and state.
	 *		.id : 
	 * 		.type : radio
	 * 		.value : 1
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : productSelected
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_productSelected1(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_productSelected1"), anchor, flags);
	}
	
	/**
	 * productSelected2: with default state.
	 *		.id : 
	 * 		.type : radio
	 * 		.value : 2
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : productSelected
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_productSelected2() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_productSelected2"));
	}
	/**
	 * productSelected2: with specific test context and state.
	 *		.id : 
	 * 		.type : radio
	 * 		.value : 2
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : productSelected
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_productSelected2(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_productSelected2"), anchor, flags);
	}
	
	

	protected Your_QuoteHelper()
	{
		setScriptName("EBC.Your_Quote");
	}
	
}

