// DO NOT EDIT: This file is automatically generated.
//
// Only the associated template file should be edited directly.
// Helper class files are automatically regenerated from the template
// files at various times, including record actions and test object
// insertion actions.  Any changes made directly to a helper class
// file will be lost when automatically updated.

package resources.EBC;

import com.rational.test.ft.object.interfaces.*;
import com.rational.test.ft.object.interfaces.SAP.*;
import com.rational.test.ft.object.interfaces.WPF.*;
import com.rational.test.ft.object.interfaces.siebel.*;
import com.rational.test.ft.object.interfaces.flex.*;
import com.rational.test.ft.object.interfaces.dojo.*;
import com.rational.test.ft.object.interfaces.generichtmlsubdomain.*;
import com.rational.test.ft.script.*;
import com.rational.test.ft.vp.IFtVerificationPoint;
import com.ibm.rational.test.ft.object.interfaces.sapwebportal.*;
/**
 * Script Name   : <b>Your_Trip</b><br>
 * Generated     : <b>2014/12/22 12:02:12</b><br>
 * Description   : Helper class for script<br>
 * Original Host : Windows 7 x86 6.1 <br>
 * 
 * @since  December 22, 2014
 * @author horned
 */
public abstract class Your_TripHelper extends RationalTestScript
{
	/**
	 * GetAQuote: with default state.
	 *		.id : 
	 * 		.type : image
	 * 		.value : 
	 * 		.title : 
	 * 		.class : Html.INPUT.image
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_getAQuote() 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_getAQuote"));
	}
	/**
	 * GetAQuote: with specific test context and state.
	 *		.id : 
	 * 		.type : image
	 * 		.value : 
	 * 		.title : 
	 * 		.class : Html.INPUT.image
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_getAQuote(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_getAQuote"), anchor, flags);
	}
	
	/**
	 * EuropeanBreakdownCoverGetAQuoteTheAA: with default state.
	 *		.title : European Breakdown Cover : Get a quote - The AA
	 * 		.class : Html.HtmlDocument
	 * 		.url : RegularExpression(https://.*theaa\.com/european-breakdown-cover/viewBreakdownCov ...
	 */
	protected DocumentTestObject document_europeanBreakdownCove() 
	{
		return new DocumentTestObject(
                        getMappedTestObject("document_europeanBreakdownCove"));
	}
	/**
	 * EuropeanBreakdownCoverGetAQuoteTheAA: with specific test context and state.
	 *		.title : European Breakdown Cover : Get a quote - The AA
	 * 		.class : Html.HtmlDocument
	 * 		.url : RegularExpression(https://.*theaa\.com/european-breakdown-cover/viewBreakdownCov ...
	 */
	protected DocumentTestObject document_europeanBreakdownCove(TestObject anchor, long flags) 
	{
		return new DocumentTestObject(
                        getMappedTestObject("document_europeanBreakdownCove"), anchor, flags);
	}
	
	/**
	 * htmlBrowser: with default state.
	 *		.class : Html.HtmlBrowser
	 * 		.browserName : MS Internet Explorer
	 * 		.processName : iexplore.exe
	 */
	protected BrowserTestObject iE() 
	{
		return new BrowserTestObject(
                        getMappedTestObject("iE"));
	}
	/**
	 * htmlBrowser: with specific test context and state.
	 *		.class : Html.HtmlBrowser
	 * 		.browserName : MS Internet Explorer
	 * 		.processName : iexplore.exe
	 */
	protected BrowserTestObject iE(TestObject anchor, long flags) 
	{
		return new BrowserTestObject(
                        getMappedTestObject("iE"), anchor, flags);
	}
	
	/**
	 * AmendTripDetails: with default state.
	 *		.text : Amend trip details
	 * 		.id : 
	 * 		.href : https://prelive5.theaa.com/european-breakdown-cover/viewBreakdownCoverDetails.do
	 * 		.title : 
	 * 		.class : Html.A
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject link_amendTripDetails() 
	{
		return new GuiTestObject(
                        getMappedTestObject("link_amendTripDetails"));
	}
	/**
	 * AmendTripDetails: with specific test context and state.
	 *		.text : Amend trip details
	 * 		.id : 
	 * 		.href : https://prelive5.theaa.com/european-breakdown-cover/viewBreakdownCoverDetails.do
	 * 		.title : 
	 * 		.class : Html.A
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject link_amendTripDetails(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("link_amendTripDetails"), anchor, flags);
	}
	
	/**
	 * Zone1: with default state.
	 *		.text : Zone 1
	 * 		.href : RegularExpression(https://.*\.theaa\.com/european-breakdown-cover/viewBreakdownM ...
	 * 		.id : 
	 * 		.title : 
	 * 		.class : Html.A
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject link_zone1() 
	{
		return new GuiTestObject(
                        getMappedTestObject("link_zone1"));
	}
	/**
	 * Zone1: with specific test context and state.
	 *		.text : Zone 1
	 * 		.href : RegularExpression(https://.*\.theaa\.com/european-breakdown-cover/viewBreakdownM ...
	 * 		.id : 
	 * 		.title : 
	 * 		.class : Html.A
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject link_zone1(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("link_zone1"), anchor, flags);
	}
	
	/**
	 * Zone1: with default state.
	 *		.text : Zone 1
	 * 		.id : 
	 * 		.href : https://www.theaa.com/european-breakdown-cover/viewBreakdownMaps.do#fragment-1
	 * 		.title : 
	 * 		.class : Html.A
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject link_zone1_2() 
	{
		return new GuiTestObject(
                        getMappedTestObject("link_zone1_2"));
	}
	/**
	 * Zone1: with specific test context and state.
	 *		.text : Zone 1
	 * 		.id : 
	 * 		.href : https://www.theaa.com/european-breakdown-cover/viewBreakdownMaps.do#fragment-1
	 * 		.title : 
	 * 		.class : Html.A
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject link_zone1_2(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("link_zone1_2"), anchor, flags);
	}
	
	/**
	 * coverType: with default state.
	 *		.text : Single trip Annual cover
	 * 		.id : coverType
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : coverType
	 * 		.classIndex : 0
	 */
	protected SelectGuiSubitemTestObject list_coverType() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_coverType"));
	}
	/**
	 * coverType: with specific test context and state.
	 *		.text : Single trip Annual cover
	 * 		.id : coverType
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : coverType
	 * 		.classIndex : 0
	 */
	protected SelectGuiSubitemTestObject list_coverType(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_coverType"), anchor, flags);
	}
	
	/**
	 * departDay: with default state.
	 *		.text : 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 ...
	 * 		.id : departDay
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : departDay
	 * 		.classIndex : 0
	 */
	protected SelectGuiSubitemTestObject list_departDay() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_departDay"));
	}
	/**
	 * departDay: with specific test context and state.
	 *		.text : 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 ...
	 * 		.id : departDay
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : departDay
	 * 		.classIndex : 0
	 */
	protected SelectGuiSubitemTestObject list_departDay(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_departDay"), anchor, flags);
	}
	
	/**
	 * departMonth: with default state.
	 *		.text : January February March April May June July August September October November Dec ...
	 * 		.id : departMonth
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : departMonth
	 * 		.classIndex : 1
	 */
	protected SelectGuiSubitemTestObject list_departMonth() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_departMonth"));
	}
	/**
	 * departMonth: with specific test context and state.
	 *		.text : January February March April May June July August September October November Dec ...
	 * 		.id : departMonth
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : departMonth
	 * 		.classIndex : 1
	 */
	protected SelectGuiSubitemTestObject list_departMonth(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_departMonth"), anchor, flags);
	}
	
	/**
	 * departYear: with default state.
	 *		.text : 2013 2014
	 * 		.id : departYear
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : departYear
	 * 		.classIndex : 2
	 */
	protected SelectGuiSubitemTestObject list_departYear() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_departYear"));
	}
	/**
	 * departYear: with specific test context and state.
	 *		.text : 2013 2014
	 * 		.id : departYear
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : departYear
	 * 		.classIndex : 2
	 */
	protected SelectGuiSubitemTestObject list_departYear(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_departYear"), anchor, flags);
	}
	
	/**
	 * destination: with default state.
	 *		.text : France Multiple Destinations Germany Spain --------------------------- Albania A ...
	 * 		.id : destination
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : destination
	 * 		.classIndex : 0
	 */
	protected SelectGuiSubitemTestObject list_destination() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_destination"));
	}
	/**
	 * destination: with specific test context and state.
	 *		.text : France Multiple Destinations Germany Spain --------------------------- Albania A ...
	 * 		.id : destination
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : destination
	 * 		.classIndex : 0
	 */
	protected SelectGuiSubitemTestObject list_destination(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_destination"), anchor, flags);
	}
	
	/**
	 * passengers: with default state.
	 *		.text : Please select 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
	 * 		.id : passengers
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : passengers
	 * 		.classIndex : 0
	 */
	protected SelectGuiSubitemTestObject list_passengers() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_passengers"));
	}
	/**
	 * passengers: with specific test context and state.
	 *		.text : Please select 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
	 * 		.id : passengers
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : passengers
	 * 		.classIndex : 0
	 */
	protected SelectGuiSubitemTestObject list_passengers(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_passengers"), anchor, flags);
	}
	
	/**
	 * returnDay: with default state.
	 *		.text : 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 ...
	 * 		.id : returnDay
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : returnDay
	 * 		.classIndex : 0
	 */
	protected SelectGuiSubitemTestObject list_returnDay() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_returnDay"));
	}
	/**
	 * returnDay: with specific test context and state.
	 *		.text : 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 ...
	 * 		.id : returnDay
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : returnDay
	 * 		.classIndex : 0
	 */
	protected SelectGuiSubitemTestObject list_returnDay(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_returnDay"), anchor, flags);
	}
	
	/**
	 * returnMonth: with default state.
	 *		.text : January February March April May June July August September October November Dec ...
	 * 		.id : returnMonth
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : returnMonth
	 * 		.classIndex : 1
	 */
	protected SelectGuiSubitemTestObject list_returnMonth() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_returnMonth"));
	}
	/**
	 * returnMonth: with specific test context and state.
	 *		.text : January February March April May June July August September October November Dec ...
	 * 		.id : returnMonth
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : returnMonth
	 * 		.classIndex : 1
	 */
	protected SelectGuiSubitemTestObject list_returnMonth(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_returnMonth"), anchor, flags);
	}
	
	/**
	 * returnYear: with default state.
	 *		.text : 2013 2014
	 * 		.id : returnYear
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : returnYear
	 * 		.classIndex : 2
	 */
	protected SelectGuiSubitemTestObject list_returnYear() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_returnYear"));
	}
	/**
	 * returnYear: with specific test context and state.
	 *		.text : 2013 2014
	 * 		.id : returnYear
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : returnYear
	 * 		.classIndex : 2
	 */
	protected SelectGuiSubitemTestObject list_returnYear(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_returnYear"), anchor, flags);
	}
	
	/**
	 * towType: with default state.
	 *		.text : No, I'm not towing Bike Trailer Boat Trailer Camping Trailer Car Trailer Caravan ...
	 * 		.id : towType
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : towType
	 * 		.classIndex : 0
	 */
	protected SelectGuiSubitemTestObject list_towType() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_towType"));
	}
	/**
	 * towType: with specific test context and state.
	 *		.text : No, I'm not towing Bike Trailer Boat Trailer Camping Trailer Car Trailer Caravan ...
	 * 		.id : towType
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : towType
	 * 		.classIndex : 0
	 */
	protected SelectGuiSubitemTestObject list_towType(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_towType"), anchor, flags);
	}
	
	/**
	 * partsN: with default state.
	 *		.id : partsNo
	 * 		.type : radio
	 * 		.value : N
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : parts
	 * 		.classIndex : 1
	 */
	protected ToggleGUITestObject radioButton_partsN() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_partsN"));
	}
	/**
	 * partsN: with specific test context and state.
	 *		.id : partsNo
	 * 		.type : radio
	 * 		.value : N
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : parts
	 * 		.classIndex : 1
	 */
	protected ToggleGUITestObject radioButton_partsN(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_partsN"), anchor, flags);
	}
	
	/**
	 * partsN: with default state.
	 *		.id : partsNo
	 * 		.type : radio
	 * 		.value : N
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : parts
	 * 		.classIndex : 1
	 */
	protected ToggleGUITestObject radioButton_partsN2() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_partsN2"));
	}
	/**
	 * partsN: with specific test context and state.
	 *		.id : partsNo
	 * 		.type : radio
	 * 		.value : N
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : parts
	 * 		.classIndex : 1
	 */
	protected ToggleGUITestObject radioButton_partsN2(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_partsN2"), anchor, flags);
	}
	
	/**
	 * partsY: with default state.
	 *		.id : partsYes
	 * 		.type : radio
	 * 		.value : Y
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : parts
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_partsY() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_partsY"));
	}
	/**
	 * partsY: with specific test context and state.
	 *		.id : partsYes
	 * 		.type : radio
	 * 		.value : Y
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : parts
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_partsY(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_partsY"), anchor, flags);
	}
	
	/**
	 * partsY: with default state.
	 *		.id : partsYes
	 * 		.type : radio
	 * 		.value : Y
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : parts
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_partsY2() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_partsY2"));
	}
	/**
	 * partsY: with specific test context and state.
	 *		.id : partsYes
	 * 		.type : radio
	 * 		.value : Y
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : parts
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_partsY2(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_partsY2"), anchor, flags);
	}
	
	/**
	 * registration: with default state.
	 *		.id : registration
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : registration
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject text_registration() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_registration"));
	}
	/**
	 * registration: with specific test context and state.
	 *		.id : registration
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : registration
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject text_registration(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_registration"), anchor, flags);
	}
	
	

	protected Your_TripHelper()
	{
		setScriptName("EBC.Your_Trip");
	}
	
}

