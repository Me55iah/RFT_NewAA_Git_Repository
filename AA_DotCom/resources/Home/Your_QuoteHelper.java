// DO NOT EDIT: This file is automatically generated.
//
// Only the associated template file should be edited directly.
// Helper class files are automatically regenerated from the template
// files at various times, including record actions and test object
// insertion actions.  Any changes made directly to a helper class
// file will be lost when automatically updated.

package resources.Home;
import Utilities.AA_SuperHelper;
import com.rational.test.ft.object.interfaces.*;
import com.rational.test.ft.object.interfaces.SAP.*;
import com.rational.test.ft.object.interfaces.WPF.*;
import com.rational.test.ft.object.interfaces.siebel.*;
import com.rational.test.ft.object.interfaces.flex.*;
import com.rational.test.ft.object.interfaces.dojo.*;
import com.rational.test.ft.object.interfaces.generichtmlsubdomain.*;
import com.rational.test.ft.script.*;
import com.rational.test.ft.vp.IFtVerificationPoint;
import com.ibm.rational.test.ft.object.interfaces.sapwebportal.*;
/**
 * Script Name   : <b>Your_Quote</b><br>
 * Generated     : <b>2015/10/09 13:32:46</b><br>
 * Description   : Helper class for script<br>
 * Original Host : Windows 7 x86 6.1 <br>
 * 
 * @since  October 09, 2015
 * @author horned
 */
public abstract class Your_QuoteHelper extends Utilities.AA_SuperHelper
{
	/**
	 * SECTION2Y: with default state.
	 *		.id : SECTION2
	 * 		.type : checkbox
	 * 		.value : Y
	 * 		.title : 
	 * 		.class : Html.INPUT.checkbox
	 * 		.name : SECTION2
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject Contents_AD_YN() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("Contents_AD_YN"));
	}
	/**
	 * SECTION2Y: with specific test context and state.
	 *		.id : SECTION2
	 * 		.type : checkbox
	 * 		.value : Y
	 * 		.title : 
	 * 		.class : Html.INPUT.checkbox
	 * 		.name : SECTION2
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject Contents_AD_YN(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("Contents_AD_YN"), anchor, flags);
	}
	
	/**
	 * CONTENTSLEVEL: with default state.
	 *		.text : Up To £40000 Up To £50000 Up To £75000
	 * 		.id : CoverLevel
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : CONTENTSLEVEL
	 * 		.classIndex : 0
	 */
	protected SelectGuiSubitemTestObject Contents_SI() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("Contents_SI"));
	}
	/**
	 * CONTENTSLEVEL: with specific test context and state.
	 *		.text : Up To £40000 Up To £50000 Up To £75000
	 * 		.id : CoverLevel
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : CONTENTSLEVEL
	 * 		.classIndex : 0
	 */
	protected SelectGuiSubitemTestObject Contents_SI(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("Contents_SI"), anchor, flags);
	}
	
	/**
	 * PremiumSelectDiv: with default state.
	 *		.text : RegularExpression(Home Insurance Plus.*)
	 * 		.id : PremiumSelectDiv
	 * 		.title : 
	 * 		.class : Html.DIV
	 * 		.contentText : RegularExpression(Home Insurance Plus.*)
	 */
	protected GuiTestObject Home_Insurance_Premium() 
	{
		return new GuiTestObject(
                        getMappedTestObject("Home_Insurance_Premium"));
	}
	/**
	 * PremiumSelectDiv: with specific test context and state.
	 *		.text : RegularExpression(Home Insurance Plus.*)
	 * 		.id : PremiumSelectDiv
	 * 		.title : 
	 * 		.class : Html.DIV
	 * 		.contentText : RegularExpression(Home Insurance Plus.*)
	 */
	protected GuiTestObject Home_Insurance_Premium(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("Home_Insurance_Premium"), anchor, flags);
	}
	
	/**
	 * StandardSelectDiv: with default state.
	 *		.text : RegularExpression(Home Insurance An excellent level of cover with flexible extra ...
	 * 		.id : StandardSelectDiv
	 * 		.title : 
	 * 		.class : Html.DIV
	 * 		.bounds : java.awt.Rectangle[x=490,y=387,width=312,height=571]
	 */
	protected GuiTestObject Home_Insurance_Standard() 
	{
		return new GuiTestObject(
                        getMappedTestObject("Home_Insurance_Standard"));
	}
	/**
	 * StandardSelectDiv: with specific test context and state.
	 *		.text : RegularExpression(Home Insurance An excellent level of cover with flexible extra ...
	 * 		.id : StandardSelectDiv
	 * 		.title : 
	 * 		.class : Html.DIV
	 * 		.bounds : java.awt.Rectangle[x=490,y=387,width=312,height=571]
	 */
	protected GuiTestObject Home_Insurance_Standard(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("Home_Insurance_Standard"), anchor, flags);
	}
	
	/**
	 * htmlBrowser: with default state.
	 *		.class : Html.HtmlBrowser
	 * 		.browserName : MS Internet Explorer
	 * 		.processName : iexplore.exe
	 */
	protected BrowserTestObject browser_htmlBrowser() 
	{
		return new BrowserTestObject(
                        getMappedTestObject("browser_htmlBrowser"));
	}
	/**
	 * htmlBrowser: with specific test context and state.
	 *		.class : Html.HtmlBrowser
	 * 		.browserName : MS Internet Explorer
	 * 		.processName : iexplore.exe
	 */
	protected BrowserTestObject browser_htmlBrowser(TestObject anchor, long flags) 
	{
		return new BrowserTestObject(
                        getMappedTestObject("browser_htmlBrowser"), anchor, flags);
	}
	
	/**
	 * AddSingleItems: with default state.
	 *		.id : 
	 * 		.type : image
	 * 		.value : 
	 * 		.title : 
	 * 		.class : Html.INPUT.image
	 * 		.name : SUBMIT
	 * 		.classIndex : 2
	 */
	protected GuiTestObject button_addSingleItems() 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_addSingleItems"));
	}
	/**
	 * AddSingleItems: with specific test context and state.
	 *		.id : 
	 * 		.type : image
	 * 		.value : 
	 * 		.title : 
	 * 		.class : Html.INPUT.image
	 * 		.name : SUBMIT
	 * 		.classIndex : 2
	 */
	protected GuiTestObject button_addSingleItems(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_addSingleItems"), anchor, flags);
	}
	
	/**
	 * BuyNow: with default state.
	 *		.id : 
	 * 		.type : image
	 * 		.value : purchaseSinglePayment
	 * 		.title : 
	 * 		.class : Html.INPUT.image
	 * 		.name : quotePurchase
	 * 		.classIndex : 2
	 */
	protected GuiTestObject button_buyNow() 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_buyNow"));
	}
	/**
	 * BuyNow: with specific test context and state.
	 *		.id : 
	 * 		.type : image
	 * 		.value : purchaseSinglePayment
	 * 		.title : 
	 * 		.class : Html.INPUT.image
	 * 		.name : quotePurchase
	 * 		.classIndex : 2
	 */
	protected GuiTestObject button_buyNow(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_buyNow"), anchor, flags);
	}
	
	/**
	 * BuyNow: with default state.
	 *		.id : 
	 * 		.type : image
	 * 		.value : 
	 * 		.title : 
	 * 		.class : Html.INPUT.image
	 * 		.name : QUOTEPURCHASE
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_buyNow2() 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_buyNow2"));
	}
	/**
	 * BuyNow: with specific test context and state.
	 *		.id : 
	 * 		.type : image
	 * 		.value : 
	 * 		.title : 
	 * 		.class : Html.INPUT.image
	 * 		.name : QUOTEPURCHASE
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_buyNow2(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_buyNow2"), anchor, flags);
	}
	
	/**
	 * BuyNow: with default state.
	 *		.id : 
	 * 		.type : image
	 * 		.value : 
	 * 		.title : 
	 * 		.class : Html.INPUT.image
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_buyNow3() 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_buyNow3"));
	}
	/**
	 * BuyNow: with specific test context and state.
	 *		.id : 
	 * 		.type : image
	 * 		.value : 
	 * 		.title : 
	 * 		.class : Html.INPUT.image
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_buyNow3(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_buyNow3"), anchor, flags);
	}
	
	/**
	 * BuyNowsubmit: with default state.
	 *		.id : HomeInsQuoteBuyButton
	 * 		.type : submit
	 * 		.value : Buy now
	 * 		.title : 
	 * 		.class : Html.INPUT.submit
	 * 		.bounds : java.awt.Rectangle[x=997,y=553,width=118,height=41]
	 * 		.name : quotePurchase
	 * 		.classIndex : 1
	 */
	protected GuiTestObject button_buyNowsubmit() 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_buyNowsubmit"));
	}
	/**
	 * BuyNowsubmit: with specific test context and state.
	 *		.id : HomeInsQuoteBuyButton
	 * 		.type : submit
	 * 		.value : Buy now
	 * 		.title : 
	 * 		.class : Html.INPUT.submit
	 * 		.bounds : java.awt.Rectangle[x=997,y=553,width=118,height=41]
	 * 		.name : quotePurchase
	 * 		.classIndex : 1
	 */
	protected GuiTestObject button_buyNowsubmit(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_buyNowsubmit"), anchor, flags);
	}
	
	/**
	 * BuyNowsubmit: with default state.
	 *		.id : HomeInsAddonsBuyButton
	 * 		.type : submit
	 * 		.value : Buy now
	 * 		.title : 
	 * 		.class : Html.INPUT.submit
	 * 		.name : Submit
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_buyNowsubmit2() 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_buyNowsubmit2"));
	}
	/**
	 * BuyNowsubmit: with specific test context and state.
	 *		.id : HomeInsAddonsBuyButton
	 * 		.type : submit
	 * 		.value : Buy now
	 * 		.title : 
	 * 		.class : Html.INPUT.submit
	 * 		.name : Submit
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_buyNowsubmit2(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_buyNowsubmit2"), anchor, flags);
	}
	
	/**
	 * BuyNowsubmit: with default state.
	 *		.id : HomeInsQuoteBuyButton
	 * 		.type : submit
	 * 		.value : Buy now
	 * 		.title : 
	 * 		.class : Html.INPUT.submit
	 * 		.name : quotePurchase
	 * 		.classIndex : 1
	 */
	protected GuiTestObject button_buyNowsubmit3() 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_buyNowsubmit3"));
	}
	/**
	 * BuyNowsubmit: with specific test context and state.
	 *		.id : HomeInsQuoteBuyButton
	 * 		.type : submit
	 * 		.value : Buy now
	 * 		.title : 
	 * 		.class : Html.INPUT.submit
	 * 		.name : quotePurchase
	 * 		.classIndex : 1
	 */
	protected GuiTestObject button_buyNowsubmit3(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_buyNowsubmit3"), anchor, flags);
	}
	
	/**
	 * BuyNowsubmit: with default state.
	 *		.id : HomeInsAddonsBuyButton
	 * 		.type : submit
	 * 		.value : Buy now
	 * 		.title : 
	 * 		.class : Html.INPUT.submit
	 * 		.name : Submit
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_buyNowsubmit4() 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_buyNowsubmit4"));
	}
	/**
	 * BuyNowsubmit: with specific test context and state.
	 *		.id : HomeInsAddonsBuyButton
	 * 		.type : submit
	 * 		.value : Buy now
	 * 		.title : 
	 * 		.class : Html.INPUT.submit
	 * 		.name : Submit
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_buyNowsubmit4(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_buyNowsubmit4"), anchor, flags);
	}
	
	/**
	 * GetQuote: with default state.
	 *		.id : 
	 * 		.type : image
	 * 		.value : 
	 * 		.title : 
	 * 		.class : Html.INPUT.image
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_getQuote() 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_getQuote"));
	}
	/**
	 * GetQuote: with specific test context and state.
	 *		.id : 
	 * 		.type : image
	 * 		.value : 
	 * 		.title : 
	 * 		.class : Html.INPUT.image
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_getQuote(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_getQuote"), anchor, flags);
	}
	
	/**
	 * GetQuotesubmit: with default state.
	 *		.id : HomeInsQuoteRetrGetQuoteButt
	 * 		.type : submit
	 * 		.value : Get quote
	 * 		.title : 
	 * 		.class : Html.INPUT.submit
	 * 		.name : Submit
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_getQuotesubmit() 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_getQuotesubmit"));
	}
	/**
	 * GetQuotesubmit: with specific test context and state.
	 *		.id : HomeInsQuoteRetrGetQuoteButt
	 * 		.type : submit
	 * 		.value : Get quote
	 * 		.title : 
	 * 		.class : Html.INPUT.submit
	 * 		.name : Submit
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_getQuotesubmit(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_getQuotesubmit"), anchor, flags);
	}
	
	/**
	 * Recalculate: with default state.
	 *		.id : RECALCQUOTE3
	 * 		.type : image
	 * 		.value : recalculateQuote
	 * 		.title : 
	 * 		.class : Html.INPUT.image
	 * 		.name : recalculateQuote
	 * 		.classIndex : 1
	 */
	protected GuiTestObject button_recalculate() 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_recalculate"));
	}
	/**
	 * Recalculate: with specific test context and state.
	 *		.id : RECALCQUOTE3
	 * 		.type : image
	 * 		.value : recalculateQuote
	 * 		.title : 
	 * 		.class : Html.INPUT.image
	 * 		.name : recalculateQuote
	 * 		.classIndex : 1
	 */
	protected GuiTestObject button_recalculate(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_recalculate"), anchor, flags);
	}
	
	/**
	 * Recalculatesubmit: with default state.
	 *		.id : HomeInsQuoteRefreshButton
	 * 		.type : submit
	 * 		.value : Recalculate
	 * 		.title : 
	 * 		.class : Html.INPUT.submit
	 * 		.bounds : java.awt.Rectangle[x=975,y=980,width=140,height=41]
	 * 		.name : recalculateQuote
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_recalculatesubmit() 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_recalculatesubmit"));
	}
	/**
	 * Recalculatesubmit: with specific test context and state.
	 *		.id : HomeInsQuoteRefreshButton
	 * 		.type : submit
	 * 		.value : Recalculate
	 * 		.title : 
	 * 		.class : Html.INPUT.submit
	 * 		.bounds : java.awt.Rectangle[x=975,y=980,width=140,height=41]
	 * 		.name : recalculateQuote
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_recalculatesubmit(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_recalculatesubmit"), anchor, flags);
	}
	
	/**
	 * RetrieveMyQuotesubmit: with default state.
	 *		.id : 
	 * 		.type : submit
	 * 		.value : Retrieve my quote
	 * 		.title : 
	 * 		.class : Html.INPUT.submit
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_retrieveMyQuotesubmit() 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_retrieveMyQuotesubmit"));
	}
	/**
	 * RetrieveMyQuotesubmit: with specific test context and state.
	 *		.id : 
	 * 		.type : submit
	 * 		.value : Retrieve my quote
	 * 		.title : 
	 * 		.class : Html.INPUT.submit
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_retrieveMyQuotesubmit(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_retrieveMyQuotesubmit"), anchor, flags);
	}
	
	/**
	 * includeHomeEmergencyCoverY: with default state.
	 *		.id : HomeEmergencyCoverDefault
	 * 		.type : checkbox
	 * 		.value : Y
	 * 		.title : 
	 * 		.class : Html.INPUT.checkbox
	 * 		.name : includeHomeEmergencyCover
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject checkBox_includeHomeEmergencyC() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("checkBox_includeHomeEmergencyC"));
	}
	/**
	 * includeHomeEmergencyCoverY: with specific test context and state.
	 *		.id : HomeEmergencyCoverDefault
	 * 		.type : checkbox
	 * 		.value : Y
	 * 		.title : 
	 * 		.class : Html.INPUT.checkbox
	 * 		.name : includeHomeEmergencyCover
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject checkBox_includeHomeEmergencyC(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("checkBox_includeHomeEmergencyC"), anchor, flags);
	}
	
	/**
	 * includeRoadsideBreakdownCoverY: with default state.
	 *		.id : BreakdownCoverDefault
	 * 		.type : checkbox
	 * 		.value : Y
	 * 		.title : 
	 * 		.class : Html.INPUT.checkbox
	 * 		.name : includeRoadsideBreakdownCover
	 * 		.classIndex : 1
	 */
	protected ToggleGUITestObject checkBox_includeRoadsideBreakd() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("checkBox_includeRoadsideBreakd"));
	}
	/**
	 * includeRoadsideBreakdownCoverY: with specific test context and state.
	 *		.id : BreakdownCoverDefault
	 * 		.type : checkbox
	 * 		.value : Y
	 * 		.title : 
	 * 		.class : Html.INPUT.checkbox
	 * 		.name : includeRoadsideBreakdownCover
	 * 		.classIndex : 1
	 */
	protected ToggleGUITestObject checkBox_includeRoadsideBreakd(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("checkBox_includeRoadsideBreakd"), anchor, flags);
	}
	
	/**
	 * SECTION2Y: with default state.
	 *		.id : SECTION2
	 * 		.type : checkbox
	 * 		.value : Y
	 * 		.title : 
	 * 		.class : Html.INPUT.checkbox
	 * 		.name : SECTION2
	 * 		.classIndex : 2
	 */
	protected ToggleGUITestObject checkBox_sectioN2Y() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("checkBox_sectioN2Y"));
	}
	/**
	 * SECTION2Y: with specific test context and state.
	 *		.id : SECTION2
	 * 		.type : checkbox
	 * 		.value : Y
	 * 		.title : 
	 * 		.class : Html.INPUT.checkbox
	 * 		.name : SECTION2
	 * 		.classIndex : 2
	 */
	protected ToggleGUITestObject checkBox_sectioN2Y(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("checkBox_sectioN2Y"), anchor, flags);
	}
	
	/**
	 * SECTION3Y: with default state.
	 *		.id : SECTION3
	 * 		.type : checkbox
	 * 		.value : Y
	 * 		.title : 
	 * 		.class : Html.INPUT.checkbox
	 * 		.name : SECTION3
	 * 		.classIndex : 3
	 */
	protected ToggleGUITestObject checkBox_sectioN3Y() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("checkBox_sectioN3Y"));
	}
	/**
	 * SECTION3Y: with specific test context and state.
	 *		.id : SECTION3
	 * 		.type : checkbox
	 * 		.value : Y
	 * 		.title : 
	 * 		.class : Html.INPUT.checkbox
	 * 		.name : SECTION3
	 * 		.classIndex : 3
	 */
	protected ToggleGUITestObject checkBox_sectioN3Y(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("checkBox_sectioN3Y"), anchor, flags);
	}
	
	/**
	 * HomeInsuranceRetrieveYourQuoteTheAA: with default state.
	 *		.title : Home Insurance : Retrieve Your Quote - The AA
	 * 		.class : Html.HtmlDocument
	 * 		.url : RegularExpression(https://.*.theaa\.com/home-insurance/viewQuoteRetrieve\.do)
	 */
	protected DocumentTestObject document_homeInsuranceRetrieve() 
	{
		return new DocumentTestObject(
                        getMappedTestObject("document_homeInsuranceRetrieve"));
	}
	/**
	 * HomeInsuranceRetrieveYourQuoteTheAA: with specific test context and state.
	 *		.title : Home Insurance : Retrieve Your Quote - The AA
	 * 		.class : Html.HtmlDocument
	 * 		.url : RegularExpression(https://.*.theaa\.com/home-insurance/viewQuoteRetrieve\.do)
	 */
	protected DocumentTestObject document_homeInsuranceRetrieve(TestObject anchor, long flags) 
	{
		return new DocumentTestObject(
                        getMappedTestObject("document_homeInsuranceRetrieve"), anchor, flags);
	}
	
	/**
	 * HomeInsuranceRetrieveYourQuoteTheAA: with default state.
	 *		.title : Home Insurance : Retrieve your quote - The AA
	 * 		.class : Html.HtmlDocument
	 * 		.url : https://prelive1.theaa.com/home-insurance/viewQuoteRetrieve.do
	 */
	protected DocumentTestObject document_homeInsuranceRetrieve2() 
	{
		return new DocumentTestObject(
                        getMappedTestObject("document_homeInsuranceRetrieve2"));
	}
	/**
	 * HomeInsuranceRetrieveYourQuoteTheAA: with specific test context and state.
	 *		.title : Home Insurance : Retrieve your quote - The AA
	 * 		.class : Html.HtmlDocument
	 * 		.url : https://prelive1.theaa.com/home-insurance/viewQuoteRetrieve.do
	 */
	protected DocumentTestObject document_homeInsuranceRetrieve2(TestObject anchor, long flags) 
	{
		return new DocumentTestObject(
                        getMappedTestObject("document_homeInsuranceRetrieve2"), anchor, flags);
	}
	
	/**
	 * HomeInsuranceYourQuoteTheAA: with default state.
	 *		.title : RegularExpression(Home Insurance : Your [qQ]uote.* - The AA)
	 * 		.class : Html.HtmlDocument
	 * 		.url : RegularExpression(.*)
	 */
	protected DocumentTestObject document_homeInsuranceYourQuot() 
	{
		return new DocumentTestObject(
                        getMappedTestObject("document_homeInsuranceYourQuot"));
	}
	/**
	 * HomeInsuranceYourQuoteTheAA: with specific test context and state.
	 *		.title : RegularExpression(Home Insurance : Your [qQ]uote.* - The AA)
	 * 		.class : Html.HtmlDocument
	 * 		.url : RegularExpression(.*)
	 */
	protected DocumentTestObject document_homeInsuranceYourQuot(TestObject anchor, long flags) 
	{
		return new DocumentTestObject(
                        getMappedTestObject("document_homeInsuranceYourQuot"), anchor, flags);
	}
	
	/**
	 * actions: with default state.
	 *		.id : actions
	 * 		.title : 
	 * 		.class : Html.DIV
	 * 		.classIndex : 0
	 */
	protected GuiTestObject html_actions() 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_actions"));
	}
	/**
	 * actions: with specific test context and state.
	 *		.id : actions
	 * 		.title : 
	 * 		.class : Html.DIV
	 * 		.classIndex : 0
	 */
	protected GuiTestObject html_actions(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_actions"), anchor, flags);
	}
	
	/**
	 * aside: with default state.
	 *		.id : aside
	 * 		.title : 
	 * 		.class : Html.DIV
	 * 		.classIndex : 2
	 */
	protected GuiTestObject html_aside() 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_aside"));
	}
	/**
	 * aside: with specific test context and state.
	 *		.id : aside
	 * 		.title : 
	 * 		.class : Html.DIV
	 * 		.classIndex : 2
	 */
	protected GuiTestObject html_aside(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_aside"), anchor, flags);
	}
	
	/**
	 * aside: with default state.
	 *		.id : aside
	 * 		.title : 
	 * 		.class : Html.DIV
	 */
	protected GuiTestObject html_aside2() 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_aside2"));
	}
	/**
	 * aside: with specific test context and state.
	 *		.id : aside
	 * 		.title : 
	 * 		.class : Html.DIV
	 */
	protected GuiTestObject html_aside2(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_aside2"), anchor, flags);
	}
	
	/**
	 * BreakdownDiv: with default state.
	 *		.id : BreakdownDiv
	 * 		.title : 
	 * 		.class : Html.DIV
	 */
	protected GuiTestObject html_breakdownDiv() 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_breakdownDiv"));
	}
	/**
	 * BreakdownDiv: with specific test context and state.
	 *		.id : BreakdownDiv
	 * 		.title : 
	 * 		.class : Html.DIV
	 */
	protected GuiTestObject html_breakdownDiv(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_breakdownDiv"), anchor, flags);
	}
	
	/**
	 * endorsementsOverlay: with default state.
	 *		.text : RegularExpression(Important information about this policy.*)
	 * 		.id : RegularExpression(.*endorsements-overlay)
	 * 		.className : RegularExpression(overlaycontainer.*)
	 * 		.title : 
	 * 		.class : Html.DIV
	 * 		.contentText : RegularExpression( \r\nImportant information about this.*\r\n\r\n\r\nThis policy ...
	 * 		.bounds : java.awt.Rectangle[x=549,y=208,width=802,height=242]
	 * 		.disabled : false
	 * 		.classIndex : RegularExpression(.*)
	 */
	protected GuiTestObject html_endorsementsOverlay() 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_endorsementsOverlay"));
	}
	/**
	 * endorsementsOverlay: with specific test context and state.
	 *		.text : RegularExpression(Important information about this policy.*)
	 * 		.id : RegularExpression(.*endorsements-overlay)
	 * 		.className : RegularExpression(overlaycontainer.*)
	 * 		.title : 
	 * 		.class : Html.DIV
	 * 		.contentText : RegularExpression( \r\nImportant information about this.*\r\n\r\n\r\nThis policy ...
	 * 		.bounds : java.awt.Rectangle[x=549,y=208,width=802,height=242]
	 * 		.disabled : false
	 * 		.classIndex : RegularExpression(.*)
	 */
	protected GuiTestObject html_endorsementsOverlay(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_endorsementsOverlay"), anchor, flags);
	}
	
	/**
	 * lctaText: with default state.
	 *		.id : lcta-text
	 * 		.title : 
	 * 		.class : Html.DIV
	 */
	protected GuiTestObject html_lctaText() 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_lctaText"));
	}
	/**
	 * lctaText: with specific test context and state.
	 *		.id : lcta-text
	 * 		.title : 
	 * 		.class : Html.DIV
	 */
	protected GuiTestObject html_lctaText(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_lctaText"), anchor, flags);
	}
	
	/**
	 * main: with default state.
	 *		.id : main
	 * 		.title : 
	 * 		.class : Html.DIV
	 * 		.classIndex : 0
	 */
	protected GuiTestObject html_main() 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_main"));
	}
	/**
	 * main: with specific test context and state.
	 *		.id : main
	 * 		.title : 
	 * 		.class : Html.DIV
	 * 		.classIndex : 0
	 */
	protected GuiTestObject html_main(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_main"), anchor, flags);
	}
	
	/**
	 * premEndorsementsOverlay: with default state.
	 *		.id : prem-endorsements-overlay
	 * 		.title : 
	 * 		.class : Html.DIV
	 * 		.classIndex : 2
	 */
	protected GuiTestObject html_premEndorsementsOverlay() 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_premEndorsementsOverlay"));
	}
	/**
	 * premEndorsementsOverlay: with specific test context and state.
	 *		.id : prem-endorsements-overlay
	 * 		.title : 
	 * 		.class : Html.DIV
	 * 		.classIndex : 2
	 */
	protected GuiTestObject html_premEndorsementsOverlay(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_premEndorsementsOverlay"), anchor, flags);
	}
	
	/**
	 * priceSection: with default state.
	 *		.id : price-section
	 * 		.title : 
	 * 		.class : Html.P
	 * 		.classIndex : 0
	 */
	protected GuiTestObject html_priceSection() 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_priceSection"));
	}
	/**
	 * priceSection: with specific test context and state.
	 *		.id : price-section
	 * 		.title : 
	 * 		.class : Html.P
	 * 		.classIndex : 0
	 */
	protected GuiTestObject html_priceSection(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_priceSection"), anchor, flags);
	}
	
	/**
	 * rctaText: with default state.
	 *		.id : rcta-text
	 * 		.title : 
	 * 		.class : Html.DIV
	 */
	protected GuiTestObject html_rctaText() 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_rctaText"));
	}
	/**
	 * rctaText: with specific test context and state.
	 *		.id : rcta-text
	 * 		.title : 
	 * 		.class : Html.DIV
	 */
	protected GuiTestObject html_rctaText(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_rctaText"), anchor, flags);
	}
	
	/**
	 * SECTION2Div: with default state.
	 *		.id : SECTION2Div
	 * 		.title : 
	 * 		.class : Html.DIV
	 * 		.classIndex : 4
	 */
	protected GuiTestObject html_sectioN2Div() 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_sectioN2Div"));
	}
	/**
	 * SECTION2Div: with specific test context and state.
	 *		.id : SECTION2Div
	 * 		.title : 
	 * 		.class : Html.DIV
	 * 		.classIndex : 4
	 */
	protected GuiTestObject html_sectioN2Div(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_sectioN2Div"), anchor, flags);
	}
	
	/**
	 * Close: with default state.
	 *		.alt : Close
	 * 		.id : close-cross-con-img
	 * 		.src : https://prelive5.theaa.com/images/insurance-wa/close.png
	 * 		.title : 
	 * 		.class : Html.IMG
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected StatelessGuiSubitemTestObject image_close() 
	{
		return new StatelessGuiSubitemTestObject(
                        getMappedTestObject("image_close"));
	}
	/**
	 * Close: with specific test context and state.
	 *		.alt : Close
	 * 		.id : close-cross-con-img
	 * 		.src : https://prelive5.theaa.com/images/insurance-wa/close.png
	 * 		.title : 
	 * 		.class : Html.IMG
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected StatelessGuiSubitemTestObject image_close(TestObject anchor, long flags) 
	{
		return new StatelessGuiSubitemTestObject(
                        getMappedTestObject("image_close"), anchor, flags);
	}
	
	/**
	 * Close: with default state.
	 *		.alt : Close
	 * 		.id : close-cross-con-img
	 * 		.src : https://www.theaa.com/images/insurance-wa/close.png
	 * 		.title : 
	 * 		.class : Html.IMG
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected StatelessGuiSubitemTestObject image_close2() 
	{
		return new StatelessGuiSubitemTestObject(
                        getMappedTestObject("image_close2"));
	}
	/**
	 * Close: with specific test context and state.
	 *		.alt : Close
	 * 		.id : close-cross-con-img
	 * 		.src : https://www.theaa.com/images/insurance-wa/close.png
	 * 		.title : 
	 * 		.class : Html.IMG
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected StatelessGuiSubitemTestObject image_close2(TestObject anchor, long flags) 
	{
		return new StatelessGuiSubitemTestObject(
                        getMappedTestObject("image_close2"), anchor, flags);
	}
	
	/**
	 * Close: with default state.
	 *		.alt : Close
	 * 		.id : close-cross-con-img
	 * 		.src : https://prelive1.theaa.com/images/insurance-wa/close.png
	 * 		.title : 
	 * 		.class : Html.IMG
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected StatelessGuiSubitemTestObject image_close3() 
	{
		return new StatelessGuiSubitemTestObject(
                        getMappedTestObject("image_close3"));
	}
	/**
	 * Close: with specific test context and state.
	 *		.alt : Close
	 * 		.id : close-cross-con-img
	 * 		.src : https://prelive1.theaa.com/images/insurance-wa/close.png
	 * 		.title : 
	 * 		.class : Html.IMG
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected StatelessGuiSubitemTestObject image_close3(TestObject anchor, long flags) 
	{
		return new StatelessGuiSubitemTestObject(
                        getMappedTestObject("image_close3"), anchor, flags);
	}
	
	/**
	 * Close: with default state.
	 *		.alt : Close
	 * 		.id : 
	 * 		.src : https://prelive5.theaa.com/images/insurance-wa/close.png
	 * 		.title : 
	 * 		.class : Html.IMG
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected StatelessGuiSubitemTestObject image_close4() 
	{
		return new StatelessGuiSubitemTestObject(
                        getMappedTestObject("image_close4"));
	}
	/**
	 * Close: with specific test context and state.
	 *		.alt : Close
	 * 		.id : 
	 * 		.src : https://prelive5.theaa.com/images/insurance-wa/close.png
	 * 		.title : 
	 * 		.class : Html.IMG
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected StatelessGuiSubitemTestObject image_close4(TestObject anchor, long flags) 
	{
		return new StatelessGuiSubitemTestObject(
                        getMappedTestObject("image_close4"), anchor, flags);
	}
	
	/**
	 * AnnualPayment: with default state.
	 *		.id : PayOnePaymentLabel
	 * 		.value :  Annual payment 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 1
	 */
	protected GuiTestObject label_annualPayment() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_annualPayment"));
	}
	/**
	 * AnnualPayment: with specific test context and state.
	 *		.id : PayOnePaymentLabel
	 * 		.value :  Annual payment 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 1
	 */
	protected GuiTestObject label_annualPayment(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_annualPayment"), anchor, flags);
	}
	
	/**
	 * OneCardPayment£35919: with default state.
	 *		.id : 
	 * 		.value : RegularExpression(.*card payment.*)
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 1
	 */
	protected GuiTestObject label_oneCardPayment£35919() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_oneCardPayment£35919"));
	}
	/**
	 * OneCardPayment£35919: with specific test context and state.
	 *		.id : 
	 * 		.value : RegularExpression(.*card payment.*)
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 1
	 */
	protected GuiTestObject label_oneCardPayment£35919(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_oneCardPayment£35919"), anchor, flags);
	}
	
	/**
	 * PayByInstalments£3369AMonthInitialDepositOf£3592Car: with default state.
	 *		.id : 
	 * 		.value : RegularExpression(Pay by instalments \r\n\r\n£.* \r\na month \r\nInitial deposit ...
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 0
	 */
	protected GuiTestObject label_payByInstalments£3369AMo() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_payByInstalments£3369AMo"));
	}
	/**
	 * PayByInstalments£3369AMonthInitialDepositOf£3592Car: with specific test context and state.
	 *		.id : 
	 * 		.value : RegularExpression(Pay by instalments \r\n\r\n£.* \r\na month \r\nInitial deposit ...
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 0
	 */
	protected GuiTestObject label_payByInstalments£3369AMo(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_payByInstalments£3369AMo"), anchor, flags);
	}
	
	/**
	 * PayMonthly: with default state.
	 *		.id : PayInstalmentsLabel
	 * 		.value :  Pay monthly 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 0
	 */
	protected GuiTestObject label_payMonthly() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_payMonthly"));
	}
	/**
	 * PayMonthly: with specific test context and state.
	 *		.id : PayInstalmentsLabel
	 * 		.value :  Pay monthly 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 0
	 */
	protected GuiTestObject label_payMonthly(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_payMonthly"), anchor, flags);
	}
	
	/**
	 * tellUsAboutEachItemToEnsureItSCovered: with default state.
	 *		.text : tell us about each item to ensure it's covered
	 * 		.id : 
	 * 		.href : https://prelive5.theaa.com/home-insurance/submitQuote.do?addItems.x=true
	 * 		.title : 
	 * 		.class : Html.A
	 * 		.name : 
	 * 		.classIndex : 4
	 */
	protected GuiTestObject link_tellUsAboutEachItemToEnsu() 
	{
		return new GuiTestObject(
                        getMappedTestObject("link_tellUsAboutEachItemToEnsu"));
	}
	/**
	 * tellUsAboutEachItemToEnsureItSCovered: with specific test context and state.
	 *		.text : tell us about each item to ensure it's covered
	 * 		.id : 
	 * 		.href : https://prelive5.theaa.com/home-insurance/submitQuote.do?addItems.x=true
	 * 		.title : 
	 * 		.class : Html.A
	 * 		.name : 
	 * 		.classIndex : 4
	 */
	protected GuiTestObject link_tellUsAboutEachItemToEnsu(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("link_tellUsAboutEachItemToEnsu"), anchor, flags);
	}
	
	/**
	 * birthDay: with default state.
	 *		.text : 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 ...
	 * 		.id : birthDay
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : birthDay
	 * 		.classIndex : 0
	 */
	protected SelectGuiSubitemTestObject list_birthDay() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_birthDay"));
	}
	/**
	 * birthDay: with specific test context and state.
	 *		.text : 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 ...
	 * 		.id : birthDay
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : birthDay
	 * 		.classIndex : 0
	 */
	protected SelectGuiSubitemTestObject list_birthDay(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_birthDay"), anchor, flags);
	}
	
	/**
	 * birthDay: with default state.
	 *		.text : Day 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 2 ...
	 * 		.id : birthDay
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : birthDay
	 * 		.classIndex : 0
	 */
	protected SelectGuiSubitemTestObject list_birthDay2() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_birthDay2"));
	}
	/**
	 * birthDay: with specific test context and state.
	 *		.text : Day 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 2 ...
	 * 		.id : birthDay
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : birthDay
	 * 		.classIndex : 0
	 */
	protected SelectGuiSubitemTestObject list_birthDay2(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_birthDay2"), anchor, flags);
	}
	
	/**
	 * birthMonth: with default state.
	 *		.text : month January February March April May June July August September October Novemb ...
	 * 		.id : birthMonth
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : birthMonth
	 * 		.classIndex : 1
	 */
	protected SelectGuiSubitemTestObject list_birthMonth() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_birthMonth"));
	}
	/**
	 * birthMonth: with specific test context and state.
	 *		.text : month January February March April May June July August September October Novemb ...
	 * 		.id : birthMonth
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : birthMonth
	 * 		.classIndex : 1
	 */
	protected SelectGuiSubitemTestObject list_birthMonth(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_birthMonth"), anchor, flags);
	}
	
	/**
	 * birthMonth: with default state.
	 *		.text : Month January February March April May June July August September October Novemb ...
	 * 		.id : birthMonth
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : birthMonth
	 * 		.classIndex : 1
	 */
	protected SelectGuiSubitemTestObject list_birthMonth2() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_birthMonth2"));
	}
	/**
	 * birthMonth: with specific test context and state.
	 *		.text : Month January February March April May June July August September October Novemb ...
	 * 		.id : birthMonth
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : birthMonth
	 * 		.classIndex : 1
	 */
	protected SelectGuiSubitemTestObject list_birthMonth2(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_birthMonth2"), anchor, flags);
	}
	
	/**
	 * birthYear: with default state.
	 *		.text : year 1997 1996 1995 1994 1993 1992 1991 1990 1989 1988 1987 1986 1985 1984 1983  ...
	 * 		.id : birthYear
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : birthYear
	 * 		.classIndex : 2
	 */
	protected SelectGuiSubitemTestObject list_birthYear() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_birthYear"));
	}
	/**
	 * birthYear: with specific test context and state.
	 *		.text : year 1997 1996 1995 1994 1993 1992 1991 1990 1989 1988 1987 1986 1985 1984 1983  ...
	 * 		.id : birthYear
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : birthYear
	 * 		.classIndex : 2
	 */
	protected SelectGuiSubitemTestObject list_birthYear(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_birthYear"), anchor, flags);
	}
	
	/**
	 * birthYear: with default state.
	 *		.text : Year 1997 1996 1995 1994 1993 1992 1991 1990 1989 1988 1987 1986 1985 1984 1983  ...
	 * 		.id : birthYear
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : birthYear
	 * 		.classIndex : 2
	 */
	protected SelectGuiSubitemTestObject list_birthYear2() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_birthYear2"));
	}
	/**
	 * birthYear: with specific test context and state.
	 *		.text : Year 1997 1996 1995 1994 1993 1992 1991 1990 1989 1988 1987 1986 1985 1984 1983  ...
	 * 		.id : birthYear
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : birthYear
	 * 		.classIndex : 2
	 */
	protected SelectGuiSubitemTestObject list_birthYear2(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_birthYear2"), anchor, flags);
	}
	
	/**
	 * BUILDINGVOLEXCESS: with default state.
	 *		.text : Nil £50 £100 £250 £500
	 * 		.id : BuildingsVoluntaryExcess
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : BUILDINGVOLEXCESS
	 * 		.classIndex : 0
	 */
	protected SelectGuiSubitemTestObject list_buildingvolexcess() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_buildingvolexcess"));
	}
	/**
	 * BUILDINGVOLEXCESS: with specific test context and state.
	 *		.text : Nil £50 £100 £250 £500
	 * 		.id : BuildingsVoluntaryExcess
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : BUILDINGVOLEXCESS
	 * 		.classIndex : 0
	 */
	protected SelectGuiSubitemTestObject list_buildingvolexcess(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_buildingvolexcess"), anchor, flags);
	}
	
	/**
	 * BUILDINGVOLEXCESS: with default state.
	 *		.text : Nil £50 £100 £250 £500
	 * 		.id : BuildingsVoluntaryExcess
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : BUILDINGVOLEXCESS
	 * 		.classIndex : 0
	 */
	protected SelectGuiSubitemTestObject list_buildingvolexcess2() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_buildingvolexcess2"));
	}
	/**
	 * BUILDINGVOLEXCESS: with specific test context and state.
	 *		.text : Nil £50 £100 £250 £500
	 * 		.id : BuildingsVoluntaryExcess
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : BUILDINGVOLEXCESS
	 * 		.classIndex : 0
	 */
	protected SelectGuiSubitemTestObject list_buildingvolexcess2(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_buildingvolexcess2"), anchor, flags);
	}
	
	/**
	 * CONTENTSLEVEL: with default state.
	 *		.text : Up To £40000 Up To £50000 Up To £75000 Up To £100000 Over £100000
	 * 		.id : CoverLevel
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : CONTENTSLEVEL
	 * 		.classIndex : 1
	 */
	protected SelectGuiSubitemTestObject list_contentslevel() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_contentslevel"));
	}
	/**
	 * CONTENTSLEVEL: with specific test context and state.
	 *		.text : Up To £40000 Up To £50000 Up To £75000 Up To £100000 Over £100000
	 * 		.id : CoverLevel
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : CONTENTSLEVEL
	 * 		.classIndex : 1
	 */
	protected SelectGuiSubitemTestObject list_contentslevel(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_contentslevel"), anchor, flags);
	}
	
	/**
	 * CONTENTSVOLEXCESS: with default state.
	 *		.text : Nil £50 £100 £250 £500
	 * 		.id : ContentsVoluntaryExcess
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : CONTENTSVOLEXCESS
	 * 		.classIndex : 0
	 */
	protected SelectGuiSubitemTestObject list_contentsvolexcess() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_contentsvolexcess"));
	}
	/**
	 * CONTENTSVOLEXCESS: with specific test context and state.
	 *		.text : Nil £50 £100 £250 £500
	 * 		.id : ContentsVoluntaryExcess
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : CONTENTSVOLEXCESS
	 * 		.classIndex : 0
	 */
	protected SelectGuiSubitemTestObject list_contentsvolexcess(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_contentsvolexcess"), anchor, flags);
	}
	
	/**
	 * CONTENTSVOLEXCESS: with default state.
	 *		.text : Nil £50 £100 £250 £500
	 * 		.id : ContentsVoluntaryExcess
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : CONTENTSVOLEXCESS
	 * 		.classIndex : RegularExpression(.*)
	 */
	protected SelectGuiSubitemTestObject list_contentsvolexcess2() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_contentsvolexcess2"));
	}
	/**
	 * CONTENTSVOLEXCESS: with specific test context and state.
	 *		.text : Nil £50 £100 £250 £500
	 * 		.id : ContentsVoluntaryExcess
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : CONTENTSVOLEXCESS
	 * 		.classIndex : RegularExpression(.*)
	 */
	protected SelectGuiSubitemTestObject list_contentsvolexcess2(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_contentsvolexcess2"), anchor, flags);
	}
	
	/**
	 * worldwideCoverLimit: with default state.
	 *		.text : £2500 £5000 £7500 £10000 £12500 £15000
	 * 		.id : AccidentalDamageAwayHomeCoverLevel
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : worldwideCoverLimit
	 * 		.classIndex : 0
	 */
	protected SelectGuiSubitemTestObject list_worldwideCoverLimit() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_worldwideCoverLimit"));
	}
	/**
	 * worldwideCoverLimit: with specific test context and state.
	 *		.text : £2500 £5000 £7500 £10000 £12500 £15000
	 * 		.id : AccidentalDamageAwayHomeCoverLevel
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : worldwideCoverLimit
	 * 		.classIndex : 0
	 */
	protected SelectGuiSubitemTestObject list_worldwideCoverLimit(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_worldwideCoverLimit"), anchor, flags);
	}
	
	/**
	 * ADDCOVERREQ0Y: with default state.
	 *		.id : ADDCOVERREQ0yes
	 * 		.type : radio
	 * 		.value : Y
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : ADDCOVERREQ0
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_addcoverreQ0Y() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_addcoverreQ0Y"));
	}
	/**
	 * ADDCOVERREQ0Y: with specific test context and state.
	 *		.id : ADDCOVERREQ0yes
	 * 		.type : radio
	 * 		.value : Y
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : ADDCOVERREQ0
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_addcoverreQ0Y(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_addcoverreQ0Y"), anchor, flags);
	}
	
	/**
	 * BasicHomeEmergencyCoverHomeEmergencyResponseHomeEmergency: with default state.
	 *		.id : 
	 * 		.title : 
	 * 		.class : Html.TABLE
	 * 		.caption : 
	 * 		.classIndex : 0
	 */
	protected StatelessGuiSubitemTestObject table_basicHomeEmergencyCoverH() 
	{
		return new StatelessGuiSubitemTestObject(
                        getMappedTestObject("table_basicHomeEmergencyCoverH"));
	}
	/**
	 * BasicHomeEmergencyCoverHomeEmergencyResponseHomeEmergency: with specific test context and state.
	 *		.id : 
	 * 		.title : 
	 * 		.class : Html.TABLE
	 * 		.caption : 
	 * 		.classIndex : 0
	 */
	protected StatelessGuiSubitemTestObject table_basicHomeEmergencyCoverH(TestObject anchor, long flags) 
	{
		return new StatelessGuiSubitemTestObject(
                        getMappedTestObject("table_basicHomeEmergencyCoverH"), anchor, flags);
	}
	
	/**
	 * aaQuoteRetrieveSurname: with default state.
	 *		.id : last-name
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : aa.quoteRetrieve.surname
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject text_aaQuoteRetrieveSurname() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_aaQuoteRetrieveSurname"));
	}
	/**
	 * aaQuoteRetrieveSurname: with specific test context and state.
	 *		.id : last-name
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : aa.quoteRetrieve.surname
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject text_aaQuoteRetrieveSurname(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_aaQuoteRetrieveSurname"), anchor, flags);
	}
	
	/**
	 * ITEMDESC0: with default state.
	 *		.id : description1
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : ITEMDESC0
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject text_itemdesC0() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_itemdesC0"));
	}
	/**
	 * ITEMDESC0: with specific test context and state.
	 *		.id : description1
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : ITEMDESC0
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject text_itemdesC0(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_itemdesC0"), anchor, flags);
	}
	
	/**
	 * ITEMVAL0: with default state.
	 *		.id : value1
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : ITEMVAL0
	 * 		.classIndex : 1
	 */
	protected TextGuiTestObject text_itemvaL0() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_itemvaL0"));
	}
	/**
	 * ITEMVAL0: with specific test context and state.
	 *		.id : value1
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : ITEMVAL0
	 * 		.classIndex : 1
	 */
	protected TextGuiTestObject text_itemvaL0(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_itemvaL0"), anchor, flags);
	}
	
	/**
	 * postcode: with default state.
	 *		.id : postcode
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : postcode
	 * 		.classIndex : 1
	 */
	protected TextGuiTestObject text_postcode() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_postcode"));
	}
	/**
	 * postcode: with specific test context and state.
	 *		.id : postcode
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : postcode
	 * 		.classIndex : 1
	 */
	protected TextGuiTestObject text_postcode(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_postcode"), anchor, flags);
	}
	
	/**
	 * postcode: with default state.
	 *		.id : postcode
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : postcode
	 * 		.classIndex : 1
	 */
	protected TextGuiTestObject text_postcode2() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_postcode2"));
	}
	/**
	 * postcode: with specific test context and state.
	 *		.id : postcode
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : postcode
	 * 		.classIndex : 1
	 */
	protected TextGuiTestObject text_postcode2(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_postcode2"), anchor, flags);
	}
	
	/**
	 * QUOTEREF: with default state.
	 *		.id : quoteref
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : QUOTEREF
	 * 		.classIndex : 2
	 */
	protected TextGuiTestObject text_quoteref() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_quoteref"));
	}
	/**
	 * QUOTEREF: with specific test context and state.
	 *		.id : quoteref
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : QUOTEREF
	 * 		.classIndex : 2
	 */
	protected TextGuiTestObject text_quoteref(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_quoteref"), anchor, flags);
	}
	
	/**
	 * surname: with default state.
	 *		.id : surname
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : surname
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject text_surname() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_surname"));
	}
	/**
	 * surname: with specific test context and state.
	 *		.id : surname
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : surname
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject text_surname(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_surname"), anchor, flags);
	}
	
	/**
	 * surname: with default state.
	 *		.id : surname
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : surname
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject text_surname2() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_surname2"));
	}
	/**
	 * surname: with specific test context and state.
	 *		.id : surname
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : surname
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject text_surname2(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_surname2"), anchor, flags);
	}
	
	/**
	 * Locate and return the verification point Screen_image object in the SUT.
	 */
	protected IFtVerificationPoint Screen_imageVP() 
	{
		return vp("Screen_image");
	}
	protected IFtVerificationPoint Screen_imageVP(TestObject anchor)
	{
		return vp("Screen_image", anchor);
	}
	
	/**
	 * Locate and return the verification point Screen_image_2 object in the SUT.
	 */
	protected IFtVerificationPoint Screen_image_2VP() 
	{
		return vp("Screen_image_2");
	}
	protected IFtVerificationPoint Screen_image_2VP(TestObject anchor)
	{
		return vp("Screen_image_2", anchor);
	}
	
	

	protected Your_QuoteHelper()
	{
		setScriptName("Home.Your_Quote");
	}
	
}

