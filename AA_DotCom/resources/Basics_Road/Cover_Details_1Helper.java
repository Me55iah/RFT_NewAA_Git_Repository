// DO NOT EDIT: This file is automatically generated.
//
// Only the associated template file should be edited directly.
// Helper class files are automatically regenerated from the template
// files at various times, including record actions and test object
// insertion actions.  Any changes made directly to a helper class
// file will be lost when automatically updated.

package resources.Basics_Road;
import Utilities.AA_SuperHelper;
import com.rational.test.ft.object.interfaces.*;
import com.rational.test.ft.object.interfaces.SAP.*;
import com.rational.test.ft.object.interfaces.WPF.*;
import com.rational.test.ft.object.interfaces.siebel.*;
import com.rational.test.ft.object.interfaces.flex.*;
import com.rational.test.ft.object.interfaces.dojo.*;
import com.rational.test.ft.object.interfaces.generichtmlsubdomain.*;
import com.rational.test.ft.script.*;
import com.rational.test.ft.vp.IFtVerificationPoint;
import com.ibm.rational.test.ft.object.interfaces.sapwebportal.*;
/**
 * Script Name   : <b>Cover_Details_1</b><br>
 * Generated     : <b>2015/09/16 10:30:22</b><br>
 * Description   : Helper class for script<br>
 * Original Host : Windows x86 6.3 <br>
 * 
 * @since  September 16, 2015
 * @author horned
 */
public abstract class Cover_Details_1Helper extends Utilities.AA_SuperHelper
{
	/**
	 * Continuesubmit: with default state.
	 *		.id : continue
	 * 		.type : submit
	 * 		.value : Continue
	 * 		.title : 
	 * 		.class : Html.BUTTON
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_continuesubmit() 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_continuesubmit"));
	}
	/**
	 * Continuesubmit: with specific test context and state.
	 *		.id : continue
	 * 		.type : submit
	 * 		.value : Continue
	 * 		.title : 
	 * 		.class : Html.BUTTON
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_continuesubmit(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_continuesubmit"), anchor, flags);
	}
	
	/**
	 * Continuesubmit: with default state.
	 *		.id : 
	 * 		.type : submit
	 * 		.value : Continue
	 * 		.title : 
	 * 		.class : Html.BUTTON
	 * 		.name : nextPage
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_continuesubmit2() 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_continuesubmit2"));
	}
	/**
	 * Continuesubmit: with specific test context and state.
	 *		.id : 
	 * 		.type : submit
	 * 		.value : Continue
	 * 		.title : 
	 * 		.class : Html.BUTTON
	 * 		.name : nextPage
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_continuesubmit2(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_continuesubmit2"), anchor, flags);
	}
	
	/**
	 * FindYourFullAddresssubmit: with default state.
	 *		.id : addressSubmit
	 * 		.type : submit
	 * 		.value : Find your full address
	 * 		.title : 
	 * 		.class : Html.BUTTON
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_findAddress() 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_findAddress"));
	}
	/**
	 * FindYourFullAddresssubmit: with specific test context and state.
	 *		.id : addressSubmit
	 * 		.type : submit
	 * 		.value : Find your full address
	 * 		.title : 
	 * 		.class : Html.BUTTON
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_findAddress(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_findAddress"), anchor, flags);
	}
	
	/**
	 * UpdateCoversubmit: with default state.
	 *		.id : button-confirm-cover
	 * 		.type : submit
	 * 		.value : Update cover
	 * 		.title : 
	 * 		.class : Html.INPUT.submit
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_updateCoversubmit() 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_updateCoversubmit"));
	}
	/**
	 * UpdateCoversubmit: with specific test context and state.
	 *		.id : button-confirm-cover
	 * 		.type : submit
	 * 		.value : Update cover
	 * 		.title : 
	 * 		.class : Html.INPUT.submit
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_updateCoversubmit(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_updateCoversubmit"), anchor, flags);
	}
	
	/**
	 * BasicBreakdownInsuranceCoverForYourCarAA: with default state.
	 *		.title : Basic Breakdown Insurance | Cover for your car | AA
	 * 		.class : Html.HtmlDocument
	 * 		.url : RegularExpression(breakdown)
	 */
	protected DocumentTestObject document_basicBreakdown() 
	{
		return new DocumentTestObject(
                        getMappedTestObject("document_basicBreakdown"));
	}
	/**
	 * BasicBreakdownInsuranceCoverForYourCarAA: with specific test context and state.
	 *		.title : Basic Breakdown Insurance | Cover for your car | AA
	 * 		.class : Html.HtmlDocument
	 * 		.url : RegularExpression(breakdown)
	 */
	protected DocumentTestObject document_basicBreakdown(TestObject anchor, long flags) 
	{
		return new DocumentTestObject(
                        getMappedTestObject("document_basicBreakdown"), anchor, flags);
	}
	
	/**
	 * UKBreakdownCoverViewAndChooseYourCoverAA: with default state.
	 *		.title : UK Breakdown Cover | View and choose your cover | AA
	 * 		.class : Html.HtmlDocument
	 * 		.url : https://prelive1.theaa.com/breakdown-cover/uk-breakdown/view-options.do?optMshp= ...
	 */
	protected DocumentTestObject document_ukBreakdownCoverViewA() 
	{
		return new DocumentTestObject(
                        getMappedTestObject("document_ukBreakdownCoverViewA"));
	}
	/**
	 * UKBreakdownCoverViewAndChooseYourCoverAA: with specific test context and state.
	 *		.title : UK Breakdown Cover | View and choose your cover | AA
	 * 		.class : Html.HtmlDocument
	 * 		.url : https://prelive1.theaa.com/breakdown-cover/uk-breakdown/view-options.do?optMshp= ...
	 */
	protected DocumentTestObject document_ukBreakdownCoverViewA(TestObject anchor, long flags) 
	{
		return new DocumentTestObject(
                        getMappedTestObject("document_ukBreakdownCoverViewA"), anchor, flags);
	}
	
	/**
	 * dateOfBirthDay: with default state.
	 *		.id : dob-dd
	 * 		.title : 
	 * 		.class : Html.INPUT.tel
	 * 		.name : dateOfBirthDay
	 * 		.classIndex : 0
	 */
	protected GuiTestObject html_dateOfBirthDay() 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_dateOfBirthDay"));
	}
	/**
	 * dateOfBirthDay: with specific test context and state.
	 *		.id : dob-dd
	 * 		.title : 
	 * 		.class : Html.INPUT.tel
	 * 		.name : dateOfBirthDay
	 * 		.classIndex : 0
	 */
	protected GuiTestObject html_dateOfBirthDay(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_dateOfBirthDay"), anchor, flags);
	}
	
	/**
	 * dateOfBirthMonth: with default state.
	 *		.id : dob-mm
	 * 		.title : 
	 * 		.class : Html.INPUT.tel
	 * 		.name : dateOfBirthMonth
	 * 		.classIndex : 1
	 */
	protected GuiTestObject html_dateOfBirthMonth() 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_dateOfBirthMonth"));
	}
	/**
	 * dateOfBirthMonth: with specific test context and state.
	 *		.id : dob-mm
	 * 		.title : 
	 * 		.class : Html.INPUT.tel
	 * 		.name : dateOfBirthMonth
	 * 		.classIndex : 1
	 */
	protected GuiTestObject html_dateOfBirthMonth(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_dateOfBirthMonth"), anchor, flags);
	}
	
	/**
	 * dateOfBirthYear: with default state.
	 *		.id : dob-yyyy
	 * 		.title : 
	 * 		.class : Html.INPUT.tel
	 * 		.name : dateOfBirthYear
	 * 		.classIndex : 2
	 */
	protected GuiTestObject html_dateOfBirthYear() 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_dateOfBirthYear"));
	}
	/**
	 * dateOfBirthYear: with specific test context and state.
	 *		.id : dob-yyyy
	 * 		.title : 
	 * 		.class : Html.INPUT.tel
	 * 		.name : dateOfBirthYear
	 * 		.classIndex : 2
	 */
	protected GuiTestObject html_dateOfBirthYear(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_dateOfBirthYear"), anchor, flags);
	}
	
	/**
	 * telephone: with default state.
	 *		.id : telephone
	 * 		.title : 
	 * 		.class : Html.INPUT.tel
	 * 		.name : telephone
	 * 		.classIndex : 3
	 */
	protected GuiTestObject html_telephone() 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_telephone"));
	}
	/**
	 * telephone: with specific test context and state.
	 *		.id : telephone
	 * 		.title : 
	 * 		.class : Html.INPUT.tel
	 * 		.name : telephone
	 * 		.classIndex : 3
	 */
	protected GuiTestObject html_telephone(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_telephone"), anchor, flags);
	}
	
	/**
	 * htmlBrowser: with default state.
	 *		.class : Html.HtmlBrowser
	 * 		.browserName : MS Internet Explorer
	 * 		.processName : iexplore.exe
	 */
	protected BrowserTestObject iE() 
	{
		return new BrowserTestObject(
                        getMappedTestObject("iE"));
	}
	/**
	 * htmlBrowser: with specific test context and state.
	 *		.class : Html.HtmlBrowser
	 * 		.browserName : MS Internet Explorer
	 * 		.processName : iexplore.exe
	 */
	protected BrowserTestObject iE(TestObject anchor, long flags) 
	{
		return new BrowserTestObject(
                        getMappedTestObject("iE"), anchor, flags);
	}
	
	/**
	 * AnnuallyByCard: with default state.
	 *		.id : payment-cc-label
	 * 		.value : Annually by card*
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 2
	 */
	protected GuiTestObject label_annuallyByCard() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_annuallyByCard"));
	}
	/**
	 * AnnuallyByCard: with specific test context and state.
	 *		.id : payment-cc-label
	 * 		.value : Annually by card*
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 2
	 */
	protected GuiTestObject label_annuallyByCard(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_annuallyByCard"), anchor, flags);
	}
	
	/**
	 * AnnuallyByCard: with default state.
	 *		.id : payment-cc-label
	 * 		.value : Annually by card*
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 2
	 */
	protected GuiTestObject label_annuallyByCardOLD() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_annuallyByCardOLD"));
	}
	/**
	 * AnnuallyByCard: with specific test context and state.
	 *		.id : payment-cc-label
	 * 		.value : Annually by card*
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 2
	 */
	protected GuiTestObject label_annuallyByCardOLD(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_annuallyByCardOLD"), anchor, flags);
	}
	
	/**
	 * AnnuallyByDirectDebit: with default state.
	 *		.id : payment-dd-label
	 * 		.value : Annually by Direct Debit
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 3
	 */
	protected GuiTestObject label_annuallyByDirectDebit() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_annuallyByDirectDebit"));
	}
	/**
	 * AnnuallyByDirectDebit: with specific test context and state.
	 *		.id : payment-dd-label
	 * 		.value : Annually by Direct Debit
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 3
	 */
	protected GuiTestObject label_annuallyByDirectDebit(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_annuallyByDirectDebit"), anchor, flags);
	}
	
	/**
	 * AnnuallyByDirectDebit: with default state.
	 *		.id : payment-dd-label
	 * 		.value : Annually by Direct Debit
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 3
	 */
	protected GuiTestObject label_annuallyByDirectDebitOLD() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_annuallyByDirectDebitOLD"));
	}
	/**
	 * AnnuallyByDirectDebit: with specific test context and state.
	 *		.id : payment-dd-label
	 * 		.value : Annually by Direct Debit
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 3
	 */
	protected GuiTestObject label_annuallyByDirectDebitOLD(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_annuallyByDirectDebitOLD"), anchor, flags);
	}
	
	/**
	 * Miss: with default state.
	 *		.id : title-miss
	 * 		.value :  Miss 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 20
	 */
	protected GuiTestObject label_miss() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_miss"));
	}
	/**
	 * Miss: with specific test context and state.
	 *		.id : title-miss
	 * 		.value :  Miss 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 20
	 */
	protected GuiTestObject label_miss(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_miss"), anchor, flags);
	}
	
	/**
	 * Mr: with default state.
	 *		.id : title-mr
	 * 		.value :  Mr 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 18
	 */
	protected GuiTestObject label_mr() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_mr"));
	}
	/**
	 * Mr: with specific test context and state.
	 *		.id : title-mr
	 * 		.value :  Mr 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 18
	 */
	protected GuiTestObject label_mr(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_mr"), anchor, flags);
	}
	
	/**
	 * Mrs: with default state.
	 *		.id : title-mrs
	 * 		.value :  Mrs 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 19
	 */
	protected GuiTestObject label_mrs() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_mrs"));
	}
	/**
	 * Mrs: with specific test context and state.
	 *		.id : title-mrs
	 * 		.value :  Mrs 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 19
	 */
	protected GuiTestObject label_mrs(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_mrs"), anchor, flags);
	}
	
	/**
	 * Ms: with default state.
	 *		.id : title-ms
	 * 		.value :  Ms 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 21
	 */
	protected GuiTestObject label_ms() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_ms"));
	}
	/**
	 * Ms: with specific test context and state.
	 *		.id : title-ms
	 * 		.value :  Ms 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 21
	 */
	protected GuiTestObject label_ms(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_ms"), anchor, flags);
	}
	
	/**
	 * No: with default state.
	 *		.id : blue-badge-no-label
	 * 		.value : No
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 15
	 */
	protected GuiTestObject label_no() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_no"));
	}
	/**
	 * No: with specific test context and state.
	 *		.id : blue-badge-no-label
	 * 		.value : No
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 15
	 */
	protected GuiTestObject label_no(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_no"), anchor, flags);
	}
	
	/**
	 * Other: with default state.
	 *		.id : other-nights-stay-start
	 * 		.value : Other  
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 12
	 */
	protected GuiTestObject label_other() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_other"));
	}
	/**
	 * Other: with specific test context and state.
	 *		.id : other-nights-stay-start
	 * 		.value : Other  
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 12
	 */
	protected GuiTestObject label_other(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_other"), anchor, flags);
	}
	
	/**
	 * Today: with default state.
	 *		.id : Today
	 * 		.value : RegularExpression(Today)
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 5
	 */
	protected GuiTestObject label_today() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_today"));
	}
	/**
	 * Today: with specific test context and state.
	 *		.id : Today
	 * 		.value : RegularExpression(Today)
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 5
	 */
	protected GuiTestObject label_today(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_today"), anchor, flags);
	}
	
	/**
	 * Yes: with default state.
	 *		.id : blue-badge-yes-label
	 * 		.value : Yes
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 14
	 */
	protected GuiTestObject label_yes() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_yes"));
	}
	/**
	 * Yes: with specific test context and state.
	 *		.id : blue-badge-yes-label
	 * 		.value : Yes
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 14
	 */
	protected GuiTestObject label_yes(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_yes"), anchor, flags);
	}
	
	/**
	 * dateOfBirthDay: with default state.
	 *		.id : dob-dd
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : dateOfBirthDay
	 * 		.classIndex : 2
	 */
	protected TextGuiTestObject text_dateOfBirthDay() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_dateOfBirthDay"));
	}
	/**
	 * dateOfBirthDay: with specific test context and state.
	 *		.id : dob-dd
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : dateOfBirthDay
	 * 		.classIndex : 2
	 */
	protected TextGuiTestObject text_dateOfBirthDay(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_dateOfBirthDay"), anchor, flags);
	}
	
	/**
	 * dateOfBirthMonth: with default state.
	 *		.id : dob-mm
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : dateOfBirthMonth
	 * 		.classIndex : 3
	 */
	protected TextGuiTestObject text_dateOfBirthMonth() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_dateOfBirthMonth"));
	}
	/**
	 * dateOfBirthMonth: with specific test context and state.
	 *		.id : dob-mm
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : dateOfBirthMonth
	 * 		.classIndex : 3
	 */
	protected TextGuiTestObject text_dateOfBirthMonth(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_dateOfBirthMonth"), anchor, flags);
	}
	
	/**
	 * dateOfBirthYear: with default state.
	 *		.id : dob-yyyy
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : dateOfBirthYear
	 * 		.classIndex : 4
	 */
	protected TextGuiTestObject text_dateOfBirthYear() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_dateOfBirthYear"));
	}
	/**
	 * dateOfBirthYear: with specific test context and state.
	 *		.id : dob-yyyy
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : dateOfBirthYear
	 * 		.classIndex : 4
	 */
	protected TextGuiTestObject text_dateOfBirthYear(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_dateOfBirthYear"), anchor, flags);
	}
	
	/**
	 * email: with default state.
	 *		.id : email
	 * 		.title : 
	 * 		.class : Html.INPUT.email
	 * 		.name : email
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject text_email() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_email"));
	}
	/**
	 * email: with specific test context and state.
	 *		.id : email
	 * 		.title : 
	 * 		.class : Html.INPUT.email
	 * 		.name : email
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject text_email(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_email"), anchor, flags);
	}
	
	/**
	 * email: with default state.
	 *		.id : email
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : email
	 * 		.classIndex : 5
	 */
	protected TextGuiTestObject text_email_OLD() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_email_OLD"));
	}
	/**
	 * email: with specific test context and state.
	 *		.id : email
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : email
	 * 		.classIndex : 5
	 */
	protected TextGuiTestObject text_email_OLD(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_email_OLD"), anchor, flags);
	}
	
	/**
	 * firstname: with default state.
	 *		.id : firstname
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : firstname
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject text_firstname() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_firstname"));
	}
	/**
	 * firstname: with specific test context and state.
	 *		.id : firstname
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : firstname
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject text_firstname(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_firstname"), anchor, flags);
	}
	
	/**
	 * lineOne: with default state.
	 *		.id : addressLineOne
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : lineOne
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject text_lineOne() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_lineOne"));
	}
	/**
	 * lineOne: with specific test context and state.
	 *		.id : addressLineOne
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : lineOne
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject text_lineOne(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_lineOne"), anchor, flags);
	}
	
	/**
	 * postcode: with default state.
	 *		.id : addressPostcode
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : postcode
	 * 		.classIndex : 4
	 */
	protected TextGuiTestObject text_postcode() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_postcode"));
	}
	/**
	 * postcode: with specific test context and state.
	 *		.id : addressPostcode
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : postcode
	 * 		.classIndex : 4
	 */
	protected TextGuiTestObject text_postcode(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_postcode"), anchor, flags);
	}
	
	/**
	 * reg: with default state.
	 *		.id : reg
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : reg
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject text_reg() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_reg"));
	}
	/**
	 * reg: with specific test context and state.
	 *		.id : reg
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : reg
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject text_reg(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_reg"), anchor, flags);
	}
	
	/**
	 * surname: with default state.
	 *		.id : surname
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : surname
	 * 		.classIndex : 1
	 */
	protected TextGuiTestObject text_surname() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_surname"));
	}
	/**
	 * surname: with specific test context and state.
	 *		.id : surname
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : surname
	 * 		.classIndex : 1
	 */
	protected TextGuiTestObject text_surname(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_surname"), anchor, flags);
	}
	
	/**
	 * telephone: with default state.
	 *		.id : telephone
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : telephone
	 * 		.classIndex : 6
	 */
	protected TextGuiTestObject text_telephone() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_telephone"));
	}
	/**
	 * telephone: with specific test context and state.
	 *		.id : telephone
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : telephone
	 * 		.classIndex : 6
	 */
	protected TextGuiTestObject text_telephone(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_telephone"), anchor, flags);
	}
	
	

	protected Cover_Details_1Helper()
	{
		setScriptName("Basics_Road.Cover_Details_1");
	}
	
}

