// DO NOT EDIT: This file is automatically generated.
//
// Only the associated template file should be edited directly.
// Helper class files are automatically regenerated from the template
// files at various times, including record actions and test object
// insertion actions.  Any changes made directly to a helper class
// file will be lost when automatically updated.

package resources.Motor_MK2;

import com.rational.test.ft.object.interfaces.*;
import com.rational.test.ft.object.interfaces.SAP.*;
import com.rational.test.ft.object.interfaces.WPF.*;
import com.rational.test.ft.object.interfaces.siebel.*;
import com.rational.test.ft.object.interfaces.flex.*;
import com.rational.test.ft.object.interfaces.dojo.*;
import com.rational.test.ft.object.interfaces.generichtmlsubdomain.*;
import com.rational.test.ft.script.*;
import com.rational.test.ft.vp.IFtVerificationPoint;
import com.ibm.rational.test.ft.object.interfaces.sapwebportal.*;
/**
 * Script Name   : <b>Add_Claim</b><br>
 * Generated     : <b>2015/07/02 10:15:14</b><br>
 * Description   : Helper class for script<br>
 * Original Host : Windows 7 x86 6.1 <br>
 * 
 * @since  July 02, 2015
 * @author horned
 */
public abstract class Add_ClaimHelper extends RationalTestScript
{
	/**
	 * CarInsuranceYourDetailsTheAA: with default state.
	 *		.title : RegularExpression(Your details)
	 * 		.class : Html.HtmlDocument
	 * 		.url : RegularExpression(car-insurance)
	 */
	protected DocumentTestObject document_carInsuranceYourDetai() 
	{
		return new DocumentTestObject(
                        getMappedTestObject("document_carInsuranceYourDetai"));
	}
	/**
	 * CarInsuranceYourDetailsTheAA: with specific test context and state.
	 *		.title : RegularExpression(Your details)
	 * 		.class : Html.HtmlDocument
	 * 		.url : RegularExpression(car-insurance)
	 */
	protected DocumentTestObject document_carInsuranceYourDetai(TestObject anchor, long flags) 
	{
		return new DocumentTestObject(
                        getMappedTestObject("document_carInsuranceYourDetai"), anchor, flags);
	}
	
	/**
	 * htmlBrowser: with default state.
	 *		.class : Html.HtmlBrowser
	 * 		.browserName : MS Internet Explorer
	 * 		.processName : iexplore.exe
	 */
	protected BrowserTestObject iE() 
	{
		return new BrowserTestObject(
                        getMappedTestObject("iE"));
	}
	/**
	 * htmlBrowser: with specific test context and state.
	 *		.class : Html.HtmlBrowser
	 * 		.browserName : MS Internet Explorer
	 * 		.processName : iexplore.exe
	 */
	protected BrowserTestObject iE(TestObject anchor, long flags) 
	{
		return new BrowserTestObject(
                        getMappedTestObject("iE"), anchor, flags);
	}
	
	/**
	 * No: with default state.
	 *		.id : 
	 * 		.value : No
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 2
	 */
	protected GuiTestObject label_no() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_no"));
	}
	/**
	 * No: with specific test context and state.
	 *		.id : 
	 * 		.value : No
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 2
	 */
	protected GuiTestObject label_no(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_no"), anchor, flags);
	}
	
	/**
	 * No: with default state.
	 *		.id : 
	 * 		.value : No
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 2
	 */
	protected GuiTestObject label_no2() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_no2"));
	}
	/**
	 * No: with specific test context and state.
	 *		.id : 
	 * 		.value : No
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 2
	 */
	protected GuiTestObject label_no2(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_no2"), anchor, flags);
	}
	
	/**
	 * Yes: with default state.
	 *		.id : 
	 * 		.value : Yes
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 1
	 */
	protected GuiTestObject label_yes() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_yes"));
	}
	/**
	 * Yes: with specific test context and state.
	 *		.id : 
	 * 		.value : Yes
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 1
	 */
	protected GuiTestObject label_yes(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_yes"), anchor, flags);
	}
	
	/**
	 * Yes: with default state.
	 *		.id : 
	 * 		.value : Yes
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 1
	 */
	protected GuiTestObject label_yes2() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_yes2"));
	}
	/**
	 * Yes: with specific test context and state.
	 *		.id : 
	 * 		.value : Yes
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 1
	 */
	protected GuiTestObject label_yes2(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_yes2"), anchor, flags);
	}
	
	/**
	 * claimsConfirm: with default state.
	 *		.text : Next
	 * 		.id : claims-confirm
	 * 		.href : https://prelive9.theaa.com/car-insurance/buy/policyholder-details#
	 * 		.title : 
	 * 		.class : Html.A
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject link_claimsConfirm() 
	{
		return new GuiTestObject(
                        getMappedTestObject("link_claimsConfirm"));
	}
	/**
	 * claimsConfirm: with specific test context and state.
	 *		.text : Next
	 * 		.id : claims-confirm
	 * 		.href : https://prelive9.theaa.com/car-insurance/buy/policyholder-details#
	 * 		.title : 
	 * 		.class : Html.A
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject link_claimsConfirm(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("link_claimsConfirm"), anchor, flags);
	}
	
	/**
	 * aaMotorDrivers0Claims0Month: with default state.
	 *		.text : Month January February March April May June July August September October Novemb ...
	 * 		.id : claim-date-month
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : aa.motor.drivers[0].claims[0].month
	 * 		.classIndex : 0
	 */
	protected SelectGuiSubitemTestObject list_aaMotorDrivers0Claims0Mon() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_aaMotorDrivers0Claims0Mon"));
	}
	/**
	 * aaMotorDrivers0Claims0Month: with specific test context and state.
	 *		.text : Month January February March April May June July August September October Novemb ...
	 * 		.id : claim-date-month
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : aa.motor.drivers[0].claims[0].month
	 * 		.classIndex : 0
	 */
	protected SelectGuiSubitemTestObject list_aaMotorDrivers0Claims0Mon(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_aaMotorDrivers0Claims0Mon"), anchor, flags);
	}
	
	/**
	 * aaMotorDrivers0Claims0Year: with default state.
	 *		.text : Year 2015 2014 2013 2012 2011 2010 2009
	 * 		.id : claim-date-year
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : aa.motor.drivers[0].claims[0].year
	 * 		.classIndex : 1
	 */
	protected SelectGuiSubitemTestObject list_aaMotorDrivers0Claims0Yea() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_aaMotorDrivers0Claims0Yea"));
	}
	/**
	 * aaMotorDrivers0Claims0Year: with specific test context and state.
	 *		.text : Year 2015 2014 2013 2012 2011 2010 2009
	 * 		.id : claim-date-year
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : aa.motor.drivers[0].claims[0].year
	 * 		.classIndex : 1
	 */
	protected SelectGuiSubitemTestObject list_aaMotorDrivers0Claims0Yea(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_aaMotorDrivers0Claims0Yea"), anchor, flags);
	}
	
	/**
	 * aaMotorDrivers0Claims0Value: with default state.
	 *		.id : claim-cost
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : aa.motor.drivers[0].claims[0].value
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject text_aaMotorDrivers0Claims0Val() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_aaMotorDrivers0Claims0Val"));
	}
	/**
	 * aaMotorDrivers0Claims0Value: with specific test context and state.
	 *		.id : claim-cost
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : aa.motor.drivers[0].claims[0].value
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject text_aaMotorDrivers0Claims0Val(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_aaMotorDrivers0Claims0Val"), anchor, flags);
	}
	
	

	protected Add_ClaimHelper()
	{
		setScriptName("Motor_MK2.Add_Claim");
	}
	
}

