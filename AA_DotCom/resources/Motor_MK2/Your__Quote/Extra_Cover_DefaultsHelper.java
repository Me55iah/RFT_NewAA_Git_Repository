// DO NOT EDIT: This file is automatically generated.
//
// Only the associated template file should be edited directly.
// Helper class files are automatically regenerated from the template
// files at various times, including record actions and test object
// insertion actions.  Any changes made directly to a helper class
// file will be lost when automatically updated.

package resources.Motor_MK2.Your__Quote;
import Utilities.AA_SuperHelper;
import com.rational.test.ft.object.interfaces.*;
import com.rational.test.ft.object.interfaces.SAP.*;
import com.rational.test.ft.object.interfaces.WPF.*;
import com.rational.test.ft.object.interfaces.siebel.*;
import com.rational.test.ft.object.interfaces.flex.*;
import com.rational.test.ft.object.interfaces.dojo.*;
import com.rational.test.ft.object.interfaces.generichtmlsubdomain.*;
import com.rational.test.ft.script.*;
import com.rational.test.ft.vp.IFtVerificationPoint;
import com.ibm.rational.test.ft.object.interfaces.sapwebportal.*;
/**
 * Script Name   : <b>Extra_Cover_Defaults</b><br>
 * Generated     : <b>2015/10/01 10:10:52</b><br>
 * Description   : Helper class for script<br>
 * Original Host : Windows 7 x86 6.1 <br>
 * 
 * @since  October 01, 2015
 * @author horned
 */
public abstract class Extra_Cover_DefaultsHelper extends Utilities.AA_SuperHelper
{
	/**
	 * main: with default state.
	 *		.id : main
	 * 		.title : 
	 * 		.class : Html.DIV
	 * 		.classIndex : 0
	 */
	protected GuiTestObject html_main() 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_main"));
	}
	/**
	 * main: with specific test context and state.
	 *		.id : main
	 * 		.title : 
	 * 		.class : Html.DIV
	 * 		.classIndex : 0
	 */
	protected GuiTestObject html_main(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_main"), anchor, flags);
	}
	
	/**
	 * AddCourtesyCarUpgrade: with default state.
	 *		.id : 
	 * 		.value : Add courtesy car upgrade
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 5
	 */
	protected GuiTestObject label_addCourtesyCarUpgrade() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_addCourtesyCarUpgrade"));
	}
	/**
	 * AddCourtesyCarUpgrade: with specific test context and state.
	 *		.id : 
	 * 		.value : Add courtesy car upgrade
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 5
	 */
	protected GuiTestObject label_addCourtesyCarUpgrade(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_addCourtesyCarUpgrade"), anchor, flags);
	}
	
	/**
	 * AddFreeBreakdownCover: with default state.
	 *		.id : 
	 * 		.value : Add free breakdown cover
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 0
	 */
	protected GuiTestObject label_addFreeBreakdownCover() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_addFreeBreakdownCover"));
	}
	/**
	 * AddFreeBreakdownCover: with specific test context and state.
	 *		.id : 
	 * 		.value : Add free breakdown cover
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 0
	 */
	protected GuiTestObject label_addFreeBreakdownCover(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_addFreeBreakdownCover"), anchor, flags);
	}
	
	/**
	 * AddLegalAssistance: with default state.
	 *		.id : 
	 * 		.value : Add legal assistance
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 3
	 */
	protected GuiTestObject label_addLegalAssistance() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_addLegalAssistance"));
	}
	/**
	 * AddLegalAssistance: with specific test context and state.
	 *		.id : 
	 * 		.value : Add legal assistance
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 3
	 */
	protected GuiTestObject label_addLegalAssistance(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_addLegalAssistance"), anchor, flags);
	}
	
	/**
	 * AddPersonalAccidentCover: with default state.
	 *		.id : 
	 * 		.value : Add personal accident cover
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 4
	 */
	protected GuiTestObject label_addPersonalAccidentCover() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_addPersonalAccidentCover"));
	}
	/**
	 * AddPersonalAccidentCover: with specific test context and state.
	 *		.id : 
	 * 		.value : Add personal accident cover
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 4
	 */
	protected GuiTestObject label_addPersonalAccidentCover(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_addPersonalAccidentCover"), anchor, flags);
	}
	
	/**
	 * AddPolicyExcessProtection: with default state.
	 *		.id : 
	 * 		.value : Add policy excess protection
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 6
	 */
	protected GuiTestObject label_addPolicyExcessProtectio() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_addPolicyExcessProtectio"));
	}
	/**
	 * AddPolicyExcessProtection: with specific test context and state.
	 *		.id : 
	 * 		.value : Add policy excess protection
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 6
	 */
	protected GuiTestObject label_addPolicyExcessProtectio(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_addPolicyExcessProtectio"), anchor, flags);
	}
	
	/**
	 * IAmABlueBadgeHolderAndWouldLikeTheAAToBeAwareOfTh: with default state.
	 *		.id : special-needs-label
	 * 		.value : I am a blue badge holder and would like the AA to be aware of this. Learn more 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 2
	 */
	protected GuiTestObject label_iAmABlueBadgeHolderAndWo() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_iAmABlueBadgeHolderAndWo"));
	}
	/**
	 * IAmABlueBadgeHolderAndWouldLikeTheAAToBeAwareOfTh: with specific test context and state.
	 *		.id : special-needs-label
	 * 		.value : I am a blue badge holder and would like the AA to be aware of this. Learn more 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 2
	 */
	protected GuiTestObject label_iAmABlueBadgeHolderAndWo(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_iAmABlueBadgeHolderAndWo"), anchor, flags);
	}
	
	

	protected Extra_Cover_DefaultsHelper()
	{
		setScriptName("Motor_MK2.Your__Quote.Extra_Cover_Defaults");
	}
	
}

