// DO NOT EDIT: This file is automatically generated.
//
// Only the associated template file should be edited directly.
// Helper class files are automatically regenerated from the template
// files at various times, including record actions and test object
// insertion actions.  Any changes made directly to a helper class
// file will be lost when automatically updated.

package resources.Motor_MK2.Your__Details;
import Utilities.AA_SuperHelper;
import com.rational.test.ft.object.interfaces.*;
import com.rational.test.ft.object.interfaces.SAP.*;
import com.rational.test.ft.object.interfaces.WPF.*;
import com.rational.test.ft.object.interfaces.siebel.*;
import com.rational.test.ft.object.interfaces.flex.*;
import com.rational.test.ft.object.interfaces.dojo.*;
import com.rational.test.ft.object.interfaces.generichtmlsubdomain.*;
import com.rational.test.ft.script.*;
import com.rational.test.ft.vp.IFtVerificationPoint;
import com.ibm.rational.test.ft.object.interfaces.sapwebportal.*;
/**
 * Script Name   : <b>Add_Conviction</b><br>
 * Generated     : <b>2015/09/03 11:11:43</b><br>
 * Description   : Helper class for script<br>
 * Original Host : Windows 7 x86 6.1 <br>
 * 
 * @since  September 03, 2015
 * @author horned
 */
public abstract class Add_ConvictionHelper extends Utilities.AA_SuperHelper
{
	/**
	 * CarInsuranceYourDetailsTheAA: with default state.
	 *		.title : RegularExpression(Your details)
	 * 		.class : Html.HtmlDocument
	 * 		.url : RegularExpression(car-insurance)
	 */
	protected DocumentTestObject document_carInsuranceYourDetai() 
	{
		return new DocumentTestObject(
                        getMappedTestObject("document_carInsuranceYourDetai"));
	}
	/**
	 * CarInsuranceYourDetailsTheAA: with specific test context and state.
	 *		.title : RegularExpression(Your details)
	 * 		.class : Html.HtmlDocument
	 * 		.url : RegularExpression(car-insurance)
	 */
	protected DocumentTestObject document_carInsuranceYourDetai(TestObject anchor, long flags) 
	{
		return new DocumentTestObject(
                        getMappedTestObject("document_carInsuranceYourDetai"), anchor, flags);
	}
	
	/**
	 * convictionForm: with default state.
	 *		.id : conviction-form
	 * 		.title : 
	 * 		.class : Html.FORM
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject form_convictionForm() 
	{
		return new GuiTestObject(
                        getMappedTestObject("form_convictionForm"));
	}
	/**
	 * convictionForm: with specific test context and state.
	 *		.id : conviction-form
	 * 		.title : 
	 * 		.class : Html.FORM
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject form_convictionForm(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("form_convictionForm"), anchor, flags);
	}
	
	/**
	 * convictionDateDiv: with default state.
	 *		.id : conviction-date-div
	 * 		.title : 
	 * 		.class : Html.DIV
	 * 		.classIndex : 1
	 */
	protected GuiTestObject html_convictionDateDiv() 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_convictionDateDiv"));
	}
	/**
	 * convictionDateDiv: with specific test context and state.
	 *		.id : conviction-date-div
	 * 		.title : 
	 * 		.class : Html.DIV
	 * 		.classIndex : 1
	 */
	protected GuiTestObject html_convictionDateDiv(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_convictionDateDiv"), anchor, flags);
	}
	
	/**
	 * htmlBrowser: with default state.
	 *		.class : Html.HtmlBrowser
	 * 		.browserName : MS Internet Explorer
	 * 		.processName : iexplore.exe
	 */
	protected BrowserTestObject iE() 
	{
		return new BrowserTestObject(
                        getMappedTestObject("iE"));
	}
	/**
	 * htmlBrowser: with specific test context and state.
	 *		.class : Html.HtmlBrowser
	 * 		.browserName : MS Internet Explorer
	 * 		.processName : iexplore.exe
	 */
	protected BrowserTestObject iE(TestObject anchor, long flags) 
	{
		return new BrowserTestObject(
                        getMappedTestObject("iE"), anchor, flags);
	}
	
	/**
	 * No: with default state.
	 *		.id : 
	 * 		.value : No
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 2
	 */
	protected GuiTestObject label_Driving_Ban_No() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_Driving_Ban_No"));
	}
	/**
	 * No: with specific test context and state.
	 *		.id : 
	 * 		.value : No
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 2
	 */
	protected GuiTestObject label_Driving_Ban_No(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_Driving_Ban_No"), anchor, flags);
	}
	
	/**
	 * Yes: with default state.
	 *		.id : 
	 * 		.value : Yes
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 1
	 */
	protected GuiTestObject label_Driving_Ban_Yes() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_Driving_Ban_Yes"));
	}
	/**
	 * Yes: with specific test context and state.
	 *		.id : 
	 * 		.value : Yes
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 1
	 */
	protected GuiTestObject label_Driving_Ban_Yes(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_Driving_Ban_Yes"), anchor, flags);
	}
	
	/**
	 * convictionConfirm: with default state.
	 *		.text : Next
	 * 		.id : conviction-confirm
	 * 		.href : RegularExpression(car-insurance)
	 * 		.title : 
	 * 		.class : Html.A
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject link_convictionConfirm() 
	{
		return new GuiTestObject(
                        getMappedTestObject("link_convictionConfirm"));
	}
	/**
	 * convictionConfirm: with specific test context and state.
	 *		.text : Next
	 * 		.id : conviction-confirm
	 * 		.href : RegularExpression(car-insurance)
	 * 		.title : 
	 * 		.class : Html.A
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject link_convictionConfirm(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("link_convictionConfirm"), anchor, flags);
	}
	
	/**
	 * aaMotorDrivers0Convictions0DateMonth: with default state.
	 *		.text : Month January February March April May June July August September October Novemb ...
	 * 		.id : conviction-date-month
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : aa.motor.drivers[0].convictions[0].date.month
	 * 		.classIndex : 0
	 */
	protected SelectGuiSubitemTestObject list_aaDriversConvictionDate_Month() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_aaDriversConvictionDate_Month"));
	}
	/**
	 * aaMotorDrivers0Convictions0DateMonth: with specific test context and state.
	 *		.text : Month January February March April May June July August September October Novemb ...
	 * 		.id : conviction-date-month
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : aa.motor.drivers[0].convictions[0].date.month
	 * 		.classIndex : 0
	 */
	protected SelectGuiSubitemTestObject list_aaDriversConvictionDate_Month(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_aaDriversConvictionDate_Month"), anchor, flags);
	}
	
	/**
	 * aaMotorDrivers0Convictions0DateYear: with default state.
	 *		.text : Year 2010 2011 2012 2013 2014 2015
	 * 		.id : conviction-date-year
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : aa.motor.drivers[0].convictions[0].date.year
	 * 		.classIndex : 1
	 */
	protected SelectGuiSubitemTestObject list_aaDriversConvictionDate_Year() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_aaDriversConvictionDate_Year"));
	}
	/**
	 * aaMotorDrivers0Convictions0DateYear: with specific test context and state.
	 *		.text : Year 2010 2011 2012 2013 2014 2015
	 * 		.id : conviction-date-year
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : aa.motor.drivers[0].convictions[0].date.year
	 * 		.classIndex : 1
	 */
	protected SelectGuiSubitemTestObject list_aaDriversConvictionDate_Year(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_aaDriversConvictionDate_Year"), anchor, flags);
	}
	
	/**
	 * aaMotorDrivers0Convictions0FineIncurred: with default state.
	 *		.id : fine-incurred
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : aa.motor.drivers[0].convictions[0].fineIncurred
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject list_aaDriversConvictionFine_Amount() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("list_aaDriversConvictionFine_Amount"));
	}
	/**
	 * aaMotorDrivers0Convictions0FineIncurred: with specific test context and state.
	 *		.id : fine-incurred
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : aa.motor.drivers[0].convictions[0].fineIncurred
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject list_aaDriversConvictionFine_Amount(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("list_aaDriversConvictionFine_Amount"), anchor, flags);
	}
	
	/**
	 * aaMotorDrivers0Convictions0PointsIncurred: with default state.
	 *		.text : 0 1 2 3 4 5 6 7 8 9 10 11 12
	 * 		.id : points-incurred
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : aa.motor.drivers[0].convictions[0].pointsIncurred
	 * 		.classIndex : 0
	 */
	protected SelectGuiSubitemTestObject list_aaDriversConvictionPenaltyPoints_Received() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_aaDriversConvictionPenaltyPoints_Received"));
	}
	/**
	 * aaMotorDrivers0Convictions0PointsIncurred: with specific test context and state.
	 *		.text : 0 1 2 3 4 5 6 7 8 9 10 11 12
	 * 		.id : points-incurred
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : aa.motor.drivers[0].convictions[0].pointsIncurred
	 * 		.classIndex : 0
	 */
	protected SelectGuiSubitemTestObject list_aaDriversConvictionPenaltyPoints_Received(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_aaDriversConvictionPenaltyPoints_Received"), anchor, flags);
	}
	
	/**
	 * aaMotorDrivers0Convictions0ConvictionType: with default state.
	 *		.text : RegularExpression(Please select offence)
	 * 		.id : convictions-list
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : RegularExpression(convictions)
	 * 		.classIndex : 0
	 */
	protected SelectGuiSubitemTestObject list_aaMotorDriver_Offence() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_aaMotorDriver_Offence"));
	}
	/**
	 * aaMotorDrivers0Convictions0ConvictionType: with specific test context and state.
	 *		.text : RegularExpression(Please select offence)
	 * 		.id : convictions-list
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : RegularExpression(convictions)
	 * 		.classIndex : 0
	 */
	protected SelectGuiSubitemTestObject list_aaMotorDriver_Offence(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_aaMotorDriver_Offence"), anchor, flags);
	}
	
	/**
	 * aaMotorDrivers0Convictions0MonthsBanned: with default state.
	 *		.id : ban-incurred
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : aa.motor.drivers[0].convictions[0].monthsBanned
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject text_aaConviction_Ban_Months() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_aaConviction_Ban_Months"));
	}
	/**
	 * aaMotorDrivers0Convictions0MonthsBanned: with specific test context and state.
	 *		.id : ban-incurred
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : aa.motor.drivers[0].convictions[0].monthsBanned
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject text_aaConviction_Ban_Months(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_aaConviction_Ban_Months"), anchor, flags);
	}
	
	

	protected Add_ConvictionHelper()
	{
		setScriptName("Motor_MK2.Your__Details.Add_Conviction");
	}
	
}

