// DO NOT EDIT: This file is automatically generated.
//
// Only the associated template file should be edited directly.
// Helper class files are automatically regenerated from the template
// files at various times, including record actions and test object
// insertion actions.  Any changes made directly to a helper class
// file will be lost when automatically updated.

package resources.Motor_MK2.Your__Details;
import Utilities.AA_SuperHelper;
import com.rational.test.ft.object.interfaces.*;
import com.rational.test.ft.object.interfaces.SAP.*;
import com.rational.test.ft.object.interfaces.WPF.*;
import com.rational.test.ft.object.interfaces.siebel.*;
import com.rational.test.ft.object.interfaces.flex.*;
import com.rational.test.ft.object.interfaces.dojo.*;
import com.rational.test.ft.object.interfaces.generichtmlsubdomain.*;
import com.rational.test.ft.script.*;
import com.rational.test.ft.vp.IFtVerificationPoint;
import com.ibm.rational.test.ft.object.interfaces.sapwebportal.*;
/**
 * Script Name   : <b>Your_Details</b><br>
 * Generated     : <b>2015/07/16 14:42:37</b><br>
 * Description   : Helper class for script<br>
 * Original Host : Windows 7 x86 6.1 <br>
 * 
 * @since  July 16, 2015
 * @author horned
 */
public abstract class Your_DetailsHelper extends Utilities.AA_SuperHelper
{
	/**
	 * AddAnotherDriversubmit: with default state.
	 *		.id : add-another-driver
	 * 		.type : submit
	 * 		.value : Add another driver
	 * 		.title : 
	 * 		.class : Html.INPUT.submit
	 * 		.name : AddDriver
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_addAnotherDriversubmit() 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_addAnotherDriversubmit"));
	}
	/**
	 * AddAnotherDriversubmit: with specific test context and state.
	 *		.id : add-another-driver
	 * 		.type : submit
	 * 		.value : Add another driver
	 * 		.title : 
	 * 		.class : Html.INPUT.submit
	 * 		.name : AddDriver
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_addAnotherDriversubmit(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_addAnotherDriversubmit"), anchor, flags);
	}
	
	/**
	 * Nextsubmit: with default state.
	 *		.id : next_button
	 * 		.type : submit
	 * 		.value : Next
	 * 		.title : 
	 * 		.class : Html.INPUT.submit
	 * 		.name : 
	 * 		.classIndex : 1
	 */
	protected GuiTestObject button_nextsubmit() 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_nextsubmit"));
	}
	/**
	 * Nextsubmit: with specific test context and state.
	 *		.id : next_button
	 * 		.type : submit
	 * 		.value : Next
	 * 		.title : 
	 * 		.class : Html.INPUT.submit
	 * 		.name : 
	 * 		.classIndex : 1
	 */
	protected GuiTestObject button_nextsubmit(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_nextsubmit"), anchor, flags);
	}
	
	/**
	 * CarInsuranceYourDetailsTheAA: with default state.
	 *		.title : RegularExpression(Your details)
	 * 		.class : Html.HtmlDocument
	 * 		.url : RegularExpression(policyholder-details)
	 */
	protected DocumentTestObject document_carInsuranceYourDetai() 
	{
		return new DocumentTestObject(
                        getMappedTestObject("document_carInsuranceYourDetai"));
	}
	/**
	 * CarInsuranceYourDetailsTheAA: with specific test context and state.
	 *		.title : RegularExpression(Your details)
	 * 		.class : Html.HtmlDocument
	 * 		.url : RegularExpression(policyholder-details)
	 */
	protected DocumentTestObject document_carInsuranceYourDetai(TestObject anchor, long flags) 
	{
		return new DocumentTestObject(
                        getMappedTestObject("document_carInsuranceYourDetai"), anchor, flags);
	}
	
	/**
	 * aaMobileNumber: with default state.
	 *		.id : mobile
	 * 		.title : 
	 * 		.class : Html.INPUT.tel
	 * 		.name : aa.mobileNumber
	 * 		.classIndex : 1
	 */
	protected GuiTestObject html_aaMobileNumber() 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_aaMobileNumber"));
	}
	/**
	 * aaMobileNumber: with specific test context and state.
	 *		.id : mobile
	 * 		.title : 
	 * 		.class : Html.INPUT.tel
	 * 		.name : aa.mobileNumber
	 * 		.classIndex : 1
	 */
	protected GuiTestObject html_aaMobileNumber(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_aaMobileNumber"), anchor, flags);
	}
	
	/**
	 * aaTelephoneNumber: with default state.
	 *		.id : telephone
	 * 		.title : 
	 * 		.class : Html.INPUT.tel
	 * 		.name : aa.telephoneNumber
	 * 		.classIndex : 0
	 */
	protected GuiTestObject html_aaTelephoneNumber() 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_aaTelephoneNumber"));
	}
	/**
	 * aaTelephoneNumber: with specific test context and state.
	 *		.id : telephone
	 * 		.title : 
	 * 		.class : Html.INPUT.tel
	 * 		.name : aa.telephoneNumber
	 * 		.classIndex : 0
	 */
	protected GuiTestObject html_aaTelephoneNumber(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_aaTelephoneNumber"), anchor, flags);
	}
	
	/**
	 * addressLookup: with default state.
	 *		.id : address-lookup
	 * 		.title : 
	 * 		.class : Html.DIV
	 * 		.classIndex : 3
	 */
	protected GuiTestObject html_addressLookup() 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_addressLookup"));
	}
	/**
	 * addressLookup: with specific test context and state.
	 *		.id : address-lookup
	 * 		.title : 
	 * 		.class : Html.DIV
	 * 		.classIndex : 3
	 */
	protected GuiTestObject html_addressLookup(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_addressLookup"), anchor, flags);
	}
	
	/**
	 * addressLookupSubmit: with default state.
	 *		.id : address-lookup-submit
	 * 		.title : 
	 * 		.class : Html.SPAN
	 * 		.classIndex : 0
	 */
	protected GuiTestObject html_addressLookupSubmit() 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_addressLookupSubmit"));
	}
	/**
	 * addressLookupSubmit: with specific test context and state.
	 *		.id : address-lookup-submit
	 * 		.title : 
	 * 		.class : Html.SPAN
	 * 		.classIndex : 0
	 */
	protected GuiTestObject html_addressLookupSubmit(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_addressLookupSubmit"), anchor, flags);
	}
	
	/**
	 * businessType_suggest_item1: with default state.
	 *		.id : business-type_suggest_item1
	 * 		.title : 
	 * 		.class : Html.DIV
	 * 		.classIndex : 1
	 */
	protected GuiTestObject html_businessType_suggest_item() 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_businessType_suggest_item"));
	}
	/**
	 * businessType_suggest_item1: with specific test context and state.
	 *		.id : business-type_suggest_item1
	 * 		.title : 
	 * 		.class : Html.DIV
	 * 		.classIndex : 1
	 */
	protected GuiTestObject html_businessType_suggest_item(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_businessType_suggest_item"), anchor, flags);
	}
	
	/**
	 * main: with default state.
	 *		.id : main
	 * 		.title : 
	 * 		.class : Html.DIV
	 * 		.classIndex : 0
	 */
	protected GuiTestObject html_main() 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_main"));
	}
	/**
	 * main: with specific test context and state.
	 *		.id : main
	 * 		.title : 
	 * 		.class : Html.DIV
	 * 		.classIndex : 0
	 */
	protected GuiTestObject html_main(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_main"), anchor, flags);
	}
	
	/**
	 * mainOccupation_suggest_item1: with default state.
	 *		.id : main-occupation_suggest_item1
	 * 		.title : 
	 * 		.class : Html.DIV
	 * 		.classIndex : 1
	 */
	protected GuiTestObject html_mainOccupation_suggest_it() 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_mainOccupation_suggest_it"));
	}
	/**
	 * mainOccupation_suggest_item1: with specific test context and state.
	 *		.id : main-occupation_suggest_item1
	 * 		.title : 
	 * 		.class : Html.DIV
	 * 		.classIndex : 1
	 */
	protected GuiTestObject html_mainOccupation_suggest_it(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_mainOccupation_suggest_it"), anchor, flags);
	}
	
	/**
	 * otherOccupationType_suggest_item0: with default state.
	 *		.id : other-occupation-type_suggest_item0
	 * 		.title : 
	 * 		.class : Html.DIV
	 * 		.classIndex : 0
	 */
	protected GuiTestObject html_otherOccupationType_sugge() 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_otherOccupationType_sugge"));
	}
	/**
	 * otherOccupationType_suggest_item0: with specific test context and state.
	 *		.id : other-occupation-type_suggest_item0
	 * 		.title : 
	 * 		.class : Html.DIV
	 * 		.classIndex : 0
	 */
	protected GuiTestObject html_otherOccupationType_sugge(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_otherOccupationType_sugge"), anchor, flags);
	}
	
	/**
	 * otherOccupation_suggest_item0: with default state.
	 *		.id : other-occupation_suggest_item0
	 * 		.title : 
	 * 		.class : Html.DIV
	 * 		.classIndex : 0
	 */
	protected GuiTestObject html_otherOccupation_suggest_i() 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_otherOccupation_suggest_i"));
	}
	/**
	 * otherOccupation_suggest_item0: with specific test context and state.
	 *		.id : other-occupation_suggest_item0
	 * 		.title : 
	 * 		.class : Html.DIV
	 * 		.classIndex : 0
	 */
	protected GuiTestObject html_otherOccupation_suggest_i(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_otherOccupation_suggest_i"), anchor, flags);
	}
	
	/**
	 * postcodeLookup: with default state.
	 *		.id : postcode-lookup
	 * 		.title : 
	 * 		.class : Html.DIV
	 * 		.classIndex : 0
	 */
	protected GuiTestObject html_postcodeLookup() 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_postcodeLookup"));
	}
	/**
	 * postcodeLookup: with specific test context and state.
	 *		.id : postcode-lookup
	 * 		.title : 
	 * 		.class : Html.DIV
	 * 		.classIndex : 0
	 */
	protected GuiTestObject html_postcodeLookup(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_postcodeLookup"), anchor, flags);
	}
	
	/**
	 * htmlBrowser: with default state.
	 *		.class : Html.HtmlBrowser
	 * 		.browserName : MS Internet Explorer
	 * 		.processName : iexplore.exe
	 */
	protected BrowserTestObject iE() 
	{
		return new BrowserTestObject(
                        getMappedTestObject("iE"));
	}
	/**
	 * htmlBrowser: with specific test context and state.
	 *		.class : Html.HtmlBrowser
	 * 		.browserName : MS Internet Explorer
	 * 		.processName : iexplore.exe
	 */
	protected BrowserTestObject iE(TestObject anchor, long flags) 
	{
		return new BrowserTestObject(
                        getMappedTestObject("iE"), anchor, flags);
	}
	
	/**
	 * LoginToChat: with default state.
	 *		.alt : Login to Chat
	 * 		.id : 
	 * 		.src : https://chat.acromas.com/netagent/client/invites/chatimage.aspx?style=style0&que ...
	 * 		.title : 
	 * 		.class : Html.IMG
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected StatelessGuiSubitemTestObject image_loginToChat() 
	{
		return new StatelessGuiSubitemTestObject(
                        getMappedTestObject("image_loginToChat"));
	}
	/**
	 * LoginToChat: with specific test context and state.
	 *		.alt : Login to Chat
	 * 		.id : 
	 * 		.src : https://chat.acromas.com/netagent/client/invites/chatimage.aspx?style=style0&que ...
	 * 		.title : 
	 * 		.class : Html.IMG
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected StatelessGuiSubitemTestObject image_loginToChat(TestObject anchor, long flags) 
	{
		return new StatelessGuiSubitemTestObject(
                        getMappedTestObject("image_loginToChat"), anchor, flags);
	}
	
	/**
	 * No: with default state.
	 *		.id : 
	 * 		.value : No
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 16
	 */
	protected GuiTestObject label_AAMember_no() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_AAMember_no"));
	}
	/**
	 * No: with specific test context and state.
	 *		.id : 
	 * 		.value : No
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 16
	 */
	protected GuiTestObject label_AAMember_no(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_AAMember_no"), anchor, flags);
	}
	
	/**
	 * Yes: with default state.
	 *		.id : 
	 * 		.value : Yes
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 15
	 */
	protected GuiTestObject label_AAMember_yes() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_AAMember_yes"));
	}
	/**
	 * Yes: with specific test context and state.
	 *		.id : 
	 * 		.value : Yes
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 15
	 */
	protected GuiTestObject label_AAMember_yes(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_AAMember_yes"), anchor, flags);
	}
	
	/**
	 * No: with default state.
	 *		.id : 
	 * 		.value : No
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 42
	 */
	protected GuiTestObject label_Claims_no() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_Claims_no"));
	}
	/**
	 * No: with specific test context and state.
	 *		.id : 
	 * 		.value : No
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 42
	 */
	protected GuiTestObject label_Claims_no(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_Claims_no"), anchor, flags);
	}
	
	/**
	 * Yes: with default state.
	 *		.id : 
	 * 		.value : Yes
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 41
	 */
	protected GuiTestObject label_Claims_yes() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_Claims_yes"));
	}
	/**
	 * Yes: with specific test context and state.
	 *		.id : 
	 * 		.value : Yes
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 41
	 */
	protected GuiTestObject label_Claims_yes(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_Claims_yes"), anchor, flags);
	}
	
	/**
	 * No: with default state.
	 *		.id : 
	 * 		.value : No
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 45
	 */
	protected GuiTestObject label_Convictions_no() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_Convictions_no"));
	}
	/**
	 * No: with specific test context and state.
	 *		.id : 
	 * 		.value : No
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 45
	 */
	protected GuiTestObject label_Convictions_no(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_Convictions_no"), anchor, flags);
	}
	
	/**
	 * Yes: with default state.
	 *		.id : 
	 * 		.value : Yes
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 44
	 */
	protected GuiTestObject label_Convictions_yes() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_Convictions_yes"));
	}
	/**
	 * Yes: with specific test context and state.
	 *		.id : 
	 * 		.value : Yes
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 44
	 */
	protected GuiTestObject label_Convictions_yes(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_Convictions_yes"), anchor, flags);
	}
	
	/**
	 * No: with default state.
	 *		.id : 
	 * 		.value : No
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 34
	 */
	protected GuiTestObject label_DrivingLicence_no() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_DrivingLicence_no"));
	}
	/**
	 * No: with specific test context and state.
	 *		.id : 
	 * 		.value : No
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 34
	 */
	protected GuiTestObject label_DrivingLicence_no(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_DrivingLicence_no"), anchor, flags);
	}
	
	/**
	 * Yes: with default state.
	 *		.id : 
	 * 		.value : Yes
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 33
	 */
	protected GuiTestObject label_DrivingLicence_yes() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_DrivingLicence_yes"));
	}
	/**
	 * Yes: with specific test context and state.
	 *		.id : 
	 * 		.value : Yes
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 33
	 */
	protected GuiTestObject label_DrivingLicence_yes(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_DrivingLicence_yes"), anchor, flags);
	}
	
	/**
	 * Comprehensive: with default state.
	 *		.id : 
	 * 		.value : Comprehensive
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 51
	 */
	protected GuiTestObject label_comprehensive() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_comprehensive"));
	}
	/**
	 * Comprehensive: with specific test context and state.
	 *		.id : 
	 * 		.value : Comprehensive
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 51
	 */
	protected GuiTestObject label_comprehensive(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_comprehensive"), anchor, flags);
	}
	
	/**
	 * EmployedOrSelfEmployed: with default state.
	 *		.id : 
	 * 		.value : Employed or self-employed
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 22
	 */
	protected GuiTestObject label_employedOrSelfEmployed() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_employedOrSelfEmployed"));
	}
	/**
	 * EmployedOrSelfEmployed: with specific test context and state.
	 *		.id : 
	 * 		.value : Employed or self-employed
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 22
	 */
	protected GuiTestObject label_employedOrSelfEmployed(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_employedOrSelfEmployed"), anchor, flags);
	}
	
	/**
	 * EULicence: with default state.
	 *		.id : 
	 * 		.value : EU licence
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 37
	 */
	protected GuiTestObject label_euLicence() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_euLicence"));
	}
	/**
	 * EULicence: with specific test context and state.
	 *		.id : 
	 * 		.value : EU licence
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 37
	 */
	protected GuiTestObject label_euLicence(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_euLicence"), anchor, flags);
	}
	
	/**
	 * FromBirth: with default state.
	 *		.id : uk-resident-label
	 * 		.value : From birth
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 9
	 */
	protected GuiTestObject label_fromBirth() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_fromBirth"));
	}
	/**
	 * FromBirth: with specific test context and state.
	 *		.id : uk-resident-label
	 * 		.value : From birth
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 9
	 */
	protected GuiTestObject label_fromBirth(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_fromBirth"), anchor, flags);
	}
	
	/**
	 * HousewifeOrHusband: with default state.
	 *		.id : 
	 * 		.value : Housewife or husband
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 23
	 */
	protected GuiTestObject label_housewifeOrHusband() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_housewifeOrHusband"));
	}
	/**
	 * HousewifeOrHusband: with specific test context and state.
	 *		.id : 
	 * 		.value : Housewife or husband
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 23
	 */
	protected GuiTestObject label_housewifeOrHusband(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_housewifeOrHusband"), anchor, flags);
	}
	
	/**
	 * MarriedCivilPartnerWidowed: with default state.
	 *		.id : 
	 * 		.value : Married / civil partner / widowed
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 12
	 */
	protected GuiTestObject label_marriedCivilPartnerWidow() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_marriedCivilPartnerWidow"));
	}
	/**
	 * MarriedCivilPartnerWidowed: with specific test context and state.
	 *		.id : 
	 * 		.value : Married / civil partner / widowed
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 12
	 */
	protected GuiTestObject label_marriedCivilPartnerWidow(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_marriedCivilPartnerWidow"), anchor, flags);
	}
	
	/**
	 * Miss: with default state.
	 *		.id : 
	 * 		.value : Miss
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 3
	 */
	protected GuiTestObject label_miss() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_miss"));
	}
	/**
	 * Miss: with specific test context and state.
	 *		.id : 
	 * 		.value : Miss
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 3
	 */
	protected GuiTestObject label_miss(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_miss"), anchor, flags);
	}
	
	/**
	 * Mr: with default state.
	 *		.id : 
	 * 		.value : Mr
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 1
	 */
	protected GuiTestObject label_mr() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_mr"));
	}
	/**
	 * Mr: with specific test context and state.
	 *		.id : 
	 * 		.value : Mr
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 1
	 */
	protected GuiTestObject label_mr(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_mr"), anchor, flags);
	}
	
	/**
	 * Mrs: with default state.
	 *		.id : 
	 * 		.value : Mrs
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 2
	 */
	protected GuiTestObject label_mrs() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_mrs"));
	}
	/**
	 * Mrs: with specific test context and state.
	 *		.id : 
	 * 		.value : Mrs
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 2
	 */
	protected GuiTestObject label_mrs(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_mrs"), anchor, flags);
	}
	
	/**
	 * Ms: with default state.
	 *		.id : 
	 * 		.value : Ms
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 4
	 */
	protected GuiTestObject label_ms() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_ms"));
	}
	/**
	 * Ms: with specific test context and state.
	 *		.id : 
	 * 		.value : Ms
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 4
	 */
	protected GuiTestObject label_ms(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_ms"), anchor, flags);
	}
	
	/**
	 * NonEULicence: with default state.
	 *		.id : 
	 * 		.value : Non EU licence
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 38
	 */
	protected GuiTestObject label_nonEULicence() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_nonEULicence"));
	}
	/**
	 * NonEULicence: with specific test context and state.
	 *		.id : 
	 * 		.value : Non EU licence
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 38
	 */
	protected GuiTestObject label_nonEULicence(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_nonEULicence"), anchor, flags);
	}
	
	/**
	 * ProvisionalUKLicence: with default state.
	 *		.id : 
	 * 		.value : Provisional UK licence
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 36
	 */
	protected GuiTestObject label_provisionalUKLicence() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_provisionalUKLicence"));
	}
	/**
	 * ProvisionalUKLicence: with specific test context and state.
	 *		.id : 
	 * 		.value : Provisional UK licence
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 36
	 */
	protected GuiTestObject label_provisionalUKLicence(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_provisionalUKLicence"), anchor, flags);
	}
	
	/**
	 * RegisteredDisabledNotEmployed: with default state.
	 *		.id : 
	 * 		.value : Registered Disabled (not employed)
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 27
	 */
	protected GuiTestObject label_registeredDisabledNotEmp() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_registeredDisabledNotEmp"));
	}
	/**
	 * RegisteredDisabledNotEmployed: with specific test context and state.
	 *		.id : 
	 * 		.value : Registered Disabled (not employed)
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 27
	 */
	protected GuiTestObject label_registeredDisabledNotEmp(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_registeredDisabledNotEmp"), anchor, flags);
	}
	
	/**
	 * Retired: with default state.
	 *		.id : 
	 * 		.value : Retired
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 25
	 */
	protected GuiTestObject label_retired() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_retired"));
	}
	/**
	 * Retired: with specific test context and state.
	 *		.id : 
	 * 		.value : Retired
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 25
	 */
	protected GuiTestObject label_retired(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_retired"), anchor, flags);
	}
	
	/**
	 * SingleLivingWithPartner: with default state.
	 *		.id : 
	 * 		.value : Single / living with partner 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 13
	 */
	protected GuiTestObject label_singleLivingWithPartner() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_singleLivingWithPartner"));
	}
	/**
	 * SingleLivingWithPartner: with specific test context and state.
	 *		.id : 
	 * 		.value : Single / living with partner 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 13
	 */
	protected GuiTestObject label_singleLivingWithPartner(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_singleLivingWithPartner"), anchor, flags);
	}
	
	/**
	 * Student: with default state.
	 *		.id : 
	 * 		.value : Student
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 24
	 */
	protected GuiTestObject label_student() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_student"));
	}
	/**
	 * Student: with specific test context and state.
	 *		.id : 
	 * 		.value : Student
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 24
	 */
	protected GuiTestObject label_student(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_student"), anchor, flags);
	}
	
	/**
	 * ThirdPartyFireAndTheft: with default state.
	 *		.id : 
	 * 		.value : Third Party, Fire and Theft
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 52
	 */
	protected GuiTestObject label_thirdPartyFireAndTheft() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_thirdPartyFireAndTheft"));
	}
	/**
	 * ThirdPartyFireAndTheft: with specific test context and state.
	 *		.id : 
	 * 		.value : Third Party, Fire and Theft
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 52
	 */
	protected GuiTestObject label_thirdPartyFireAndTheft(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_thirdPartyFireAndTheft"), anchor, flags);
	}
	
	/**
	 * ThirdPartyOnly: with default state.
	 *		.id : 
	 * 		.value : Third Party Only
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 53
	 */
	protected GuiTestObject label_thirdPartyOnly() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_thirdPartyOnly"));
	}
	/**
	 * ThirdPartyOnly: with specific test context and state.
	 *		.id : 
	 * 		.value : Third Party Only
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 53
	 */
	protected GuiTestObject label_thirdPartyOnly(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_thirdPartyOnly"), anchor, flags);
	}
	
	/**
	 * Title: with default state.
	 *		.id : 
	 * 		.value : Title 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 0
	 */
	protected GuiTestObject label_title() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_title"));
	}
	/**
	 * Title: with specific test context and state.
	 *		.id : 
	 * 		.value : Title 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 0
	 */
	protected GuiTestObject label_title(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_title"), anchor, flags);
	}
	
	/**
	 * Unemployed: with default state.
	 *		.id : 
	 * 		.value : Unemployed
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 26
	 */
	protected GuiTestObject label_unemployed() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_unemployed"));
	}
	/**
	 * Unemployed: with specific test context and state.
	 *		.id : 
	 * 		.value : Unemployed
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 26
	 */
	protected GuiTestObject label_unemployed(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_unemployed"), anchor, flags);
	}
	
	/**
	 * AddAConviction: with default state.
	 *		.text : Add a conviction
	 * 		.id : 
	 * 		.href : RegularExpression(car-insurance)
	 * 		.title : 
	 * 		.class : Html.A
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject link_addAConviction() 
	{
		return new GuiTestObject(
                        getMappedTestObject("link_addAConviction"));
	}
	/**
	 * AddAConviction: with specific test context and state.
	 *		.text : Add a conviction
	 * 		.id : 
	 * 		.href : RegularExpression(car-insurance)
	 * 		.title : 
	 * 		.class : Html.A
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject link_addAConviction(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("link_addAConviction"), anchor, flags);
	}
	
	/**
	 * AddDetails: with default state.
	 *		.text : Add details
	 * 		.id : 
	 * 		.href : RegularExpression(car-insurance)
	 * 		.title : 
	 * 		.class : Html.A
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject link_addDetails() 
	{
		return new GuiTestObject(
                        getMappedTestObject("link_addDetails"));
	}
	/**
	 * AddDetails: with specific test context and state.
	 *		.text : Add details
	 * 		.id : 
	 * 		.href : RegularExpression(car-insurance)
	 * 		.title : 
	 * 		.class : Html.A
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject link_addDetails(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("link_addDetails"), anchor, flags);
	}
	
	/**
	 * Back: with default state.
	 *		.text : Back
	 * 		.id : 
	 * 		.href : RegularExpression(car-insurance/buy)
	 * 		.title : 
	 * 		.class : Html.A
	 * 		.name : 
	 * 		.classIndex : 24
	 */
	protected GuiTestObject link_back() 
	{
		return new GuiTestObject(
                        getMappedTestObject("link_back"));
	}
	/**
	 * Back: with specific test context and state.
	 *		.text : Back
	 * 		.id : 
	 * 		.href : RegularExpression(car-insurance/buy)
	 * 		.title : 
	 * 		.class : Html.A
	 * 		.name : 
	 * 		.classIndex : 24
	 */
	protected GuiTestObject link_back(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("link_back"), anchor, flags);
	}
	
	/**
	 * EmailMyQuote: with default state.
	 *		.text : Email my quote
	 * 		.id : 
	 * 		.href : RegularExpression(car-insurance)
	 * 		.class : Html.A
	 * 		.title : 
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject link_emailMyQuote() 
	{
		return new GuiTestObject(
                        getMappedTestObject("link_emailMyQuote"));
	}
	/**
	 * EmailMyQuote: with specific test context and state.
	 *		.text : Email my quote
	 * 		.id : 
	 * 		.href : RegularExpression(car-insurance)
	 * 		.class : Html.A
	 * 		.title : 
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject link_emailMyQuote(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("link_emailMyQuote"), anchor, flags);
	}
	
	/**
	 * FindYourAddress: with default state.
	 *		.text : Find your address
	 * 		.href : https://prelive9.theaa.com/car-insurance/buy/policyholder-details#
	 * 		.id : 
	 * 		.title : 
	 * 		.class : Html.A
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject link_findYourAddress() 
	{
		return new GuiTestObject(
                        getMappedTestObject("link_findYourAddress"));
	}
	/**
	 * FindYourAddress: with specific test context and state.
	 *		.text : Find your address
	 * 		.href : https://prelive9.theaa.com/car-insurance/buy/policyholder-details#
	 * 		.id : 
	 * 		.title : 
	 * 		.class : Html.A
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject link_findYourAddress(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("link_findYourAddress"), anchor, flags);
	}
	
	/**
	 * aaMotorDrivers0UkResidentMonth: with default state.
	 *		.text : Month January February March April May June July August September October Novemb ...
	 * 		.id : when-uk-resident-month
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : aa.motor.drivers[0].ukResidentMonth
	 * 		.classIndex : 0
	 */
	protected SelectGuiSubitemTestObject list_aaMotorDriverResidentMonth() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_aaMotorDriverResidentMonth"));
	}
	/**
	 * aaMotorDrivers0UkResidentMonth: with specific test context and state.
	 *		.text : Month January February March April May June July August September October Novemb ...
	 * 		.id : when-uk-resident-month
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : aa.motor.drivers[0].ukResidentMonth
	 * 		.classIndex : 0
	 */
	protected SelectGuiSubitemTestObject list_aaMotorDriverResidentMonth(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_aaMotorDriverResidentMonth"), anchor, flags);
	}
	
	/**
	 * aaMotorDrivers0LicenceHeldFromYear: with default state.
	 *		.text : Year 2015 2014 2013 2012 2011 2010 2009 2008 2007 2006 2005 2004 2003 2002 2001  ...
	 * 		.id : license-held-year
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : aa.motor.drivers[0].licenceHeldFrom.year
	 * 		.classIndex : 2
	 */
	protected SelectGuiSubitemTestObject list_aaMotorDrivers0LicenceHel() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_aaMotorDrivers0LicenceHel"));
	}
	/**
	 * aaMotorDrivers0LicenceHeldFromYear: with specific test context and state.
	 *		.text : Year 2015 2014 2013 2012 2011 2010 2009 2008 2007 2006 2005 2004 2003 2002 2001  ...
	 * 		.id : license-held-year
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : aa.motor.drivers[0].licenceHeldFrom.year
	 * 		.classIndex : 2
	 */
	protected SelectGuiSubitemTestObject list_aaMotorDrivers0LicenceHel(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_aaMotorDrivers0LicenceHel"), anchor, flags);
	}
	
	/**
	 * aaMotorDrivers0LicenceHeldFromMonth: with default state.
	 *		.text : Month January February March April May June July August September October Novemb ...
	 * 		.id : license-held-month
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : aa.motor.drivers[0].licenceHeldFrom.month
	 * 		.classIndex : 3
	 */
	protected SelectGuiSubitemTestObject list_aaMotorDrivers0LicenceHel2() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_aaMotorDrivers0LicenceHel2"));
	}
	/**
	 * aaMotorDrivers0LicenceHeldFromMonth: with specific test context and state.
	 *		.text : Month January February March April May June July August September October Novemb ...
	 * 		.id : license-held-month
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : aa.motor.drivers[0].licenceHeldFrom.month
	 * 		.classIndex : 3
	 */
	protected SelectGuiSubitemTestObject list_aaMotorDrivers0LicenceHel2(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_aaMotorDrivers0LicenceHel2"), anchor, flags);
	}
	
	/**
	 * aaMotorDrivers0UkResidentYear: with default state.
	 *		.text : Year 2015 2014 2013 2012 2011 2010 2009 2008 2007 2006 2005 2004 2003 2002 2001  ...
	 * 		.id : when-uk-resident-year
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : aa.motor.drivers[0].ukResidentYear
	 * 		.classIndex : 1
	 */
	protected SelectGuiSubitemTestObject list_aaMotorDriversResidentYear() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_aaMotorDriversResidentYear"));
	}
	/**
	 * aaMotorDrivers0UkResidentYear: with specific test context and state.
	 *		.text : Year 2015 2014 2013 2012 2011 2010 2009 2008 2007 2006 2005 2004 2003 2002 2001  ...
	 * 		.id : when-uk-resident-year
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : aa.motor.drivers[0].ukResidentYear
	 * 		.classIndex : 1
	 */
	protected SelectGuiSubitemTestObject list_aaMotorDriversResidentYear(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_aaMotorDriversResidentYear"), anchor, flags);
	}
	
	/**
	 * aaMotorPreviousPolicyInsurer: with default state.
	 *		.text : Please select No previous insurance A-Plan A.A.Star (AA) A.G.F. (AA) A.G.F. A.L. ...
	 * 		.id : previous-insurer
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : aa.motor.previousPolicy.insurer
	 * 		.classIndex : 4
	 */
	protected SelectGuiSubitemTestObject list_aaMotorPreviousPolicyInsu() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_aaMotorPreviousPolicyInsu"));
	}
	/**
	 * aaMotorPreviousPolicyInsurer: with specific test context and state.
	 *		.text : Please select No previous insurance A-Plan A.A.Star (AA) A.G.F. (AA) A.G.F. A.L. ...
	 * 		.id : previous-insurer
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : aa.motor.previousPolicy.insurer
	 * 		.classIndex : 4
	 */
	protected SelectGuiSubitemTestObject list_aaMotorPreviousPolicyInsu(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_aaMotorPreviousPolicyInsu"), anchor, flags);
	}
	
	/**
	 * aaMotorPreviousPolicyNcd: with default state.
	 *		.text : Please select None 1 2 3 4 5 6 7 8 9 or more
	 * 		.id : no-claims-discount
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : aa.motor.previousPolicy.ncd
	 * 		.classIndex : 5
	 */
	protected SelectGuiSubitemTestObject list_aaMotorPreviousPolicyNcd() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_aaMotorPreviousPolicyNcd"));
	}
	/**
	 * aaMotorPreviousPolicyNcd: with specific test context and state.
	 *		.text : Please select None 1 2 3 4 5 6 7 8 9 or more
	 * 		.id : no-claims-discount
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : aa.motor.previousPolicy.ncd
	 * 		.classIndex : 5
	 */
	protected SelectGuiSubitemTestObject list_aaMotorPreviousPolicyNcd(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_aaMotorPreviousPolicyNcd"), anchor, flags);
	}
	
	/**
	 * aaMotorCoverStart: with default state.
	 *		.id : policy-start-date
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : aa.motor.cover.start
	 * 		.classIndex : 9
	 */
	protected TextGuiTestObject text_aaMotorCoverStart() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_aaMotorCoverStart"));
	}
	/**
	 * aaMotorCoverStart: with specific test context and state.
	 *		.id : policy-start-date
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : aa.motor.cover.start
	 * 		.classIndex : 9
	 */
	protected TextGuiTestObject text_aaMotorCoverStart(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_aaMotorCoverStart"), anchor, flags);
	}
	
	/**
	 * aaMotorDrivers0AddressHousePostcode: with default state.
	 *		.id : lookup-postcode
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : aa.motor.drivers[0].address.house.postcode
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject text_aaMotorDrivers0AddressHou() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_aaMotorDrivers0AddressHou"));
	}
	/**
	 * aaMotorDrivers0AddressHousePostcode: with specific test context and state.
	 *		.id : lookup-postcode
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : aa.motor.drivers[0].address.house.postcode
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject text_aaMotorDrivers0AddressHou(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_aaMotorDrivers0AddressHou"), anchor, flags);
	}
	
	/**
	 * aaMotorDrivers0AddressHouseNumber: with default state.
	 *		.id : house-name
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : aa.motor.drivers[0].address.house.number
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject text_aaMotorDrivers0AddressHou2() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_aaMotorDrivers0AddressHou2"));
	}
	/**
	 * aaMotorDrivers0AddressHouseNumber: with specific test context and state.
	 *		.id : house-name
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : aa.motor.drivers[0].address.house.number
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject text_aaMotorDrivers0AddressHou2(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_aaMotorDrivers0AddressHou2"), anchor, flags);
	}
	
	/**
	 * aaMotorDrivers0Email0: with default state.
	 *		.id : email
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : aa.motor.drivers[0].email[0]
	 * 		.classIndex : 3
	 */
	protected TextGuiTestObject text_aaMotorDrivers0Email0() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_aaMotorDrivers0Email0"));
	}
	/**
	 * aaMotorDrivers0Email0: with specific test context and state.
	 *		.id : email
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : aa.motor.drivers[0].email[0]
	 * 		.classIndex : 3
	 */
	protected TextGuiTestObject text_aaMotorDrivers0Email0(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_aaMotorDrivers0Email0"), anchor, flags);
	}
	
	/**
	 * aaMotorDrivers0FirstName: with default state.
	 *		.id : first-name
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : aa.motor.drivers[0].firstName
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject text_aaMotorDrivers0FirstName() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_aaMotorDrivers0FirstName"));
	}
	/**
	 * aaMotorDrivers0FirstName: with specific test context and state.
	 *		.id : first-name
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : aa.motor.drivers[0].firstName
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject text_aaMotorDrivers0FirstName(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_aaMotorDrivers0FirstName"), anchor, flags);
	}
	
	/**
	 * aaMotorDrivers0Fulltimebusiness: with default state.
	 *		.id : business-type
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : aa.motor.drivers[0].fulltimebusiness
	 * 		.classIndex : 5
	 */
	protected TextGuiTestObject text_aaMotorDrivers0Fulltimebu() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_aaMotorDrivers0Fulltimebu"));
	}
	/**
	 * aaMotorDrivers0Fulltimebusiness: with specific test context and state.
	 *		.id : business-type
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : aa.motor.drivers[0].fulltimebusiness
	 * 		.classIndex : 5
	 */
	protected TextGuiTestObject text_aaMotorDrivers0Fulltimebu(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_aaMotorDrivers0Fulltimebu"), anchor, flags);
	}
	
	/**
	 * aaMotorDrivers0LastName: with default state.
	 *		.id : surname
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : aa.motor.drivers[0].lastName
	 * 		.classIndex : 1
	 */
	protected TextGuiTestObject text_aaMotorDrivers0LastName() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_aaMotorDrivers0LastName"));
	}
	/**
	 * aaMotorDrivers0LastName: with specific test context and state.
	 *		.id : surname
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : aa.motor.drivers[0].lastName
	 * 		.classIndex : 1
	 */
	protected TextGuiTestObject text_aaMotorDrivers0LastName(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_aaMotorDrivers0LastName"), anchor, flags);
	}
	
	/**
	 * aaMotorDrivers0Occupationinformation: with default state.
	 *		.id : main-occupation
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : aa.motor.drivers[0].occupationinformation
	 * 		.classIndex : 4
	 */
	protected TextGuiTestObject text_aaMotorDrivers0Occupation() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_aaMotorDrivers0Occupation"));
	}
	/**
	 * aaMotorDrivers0Occupationinformation: with specific test context and state.
	 *		.id : main-occupation
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : aa.motor.drivers[0].occupationinformation
	 * 		.classIndex : 4
	 */
	protected TextGuiTestObject text_aaMotorDrivers0Occupation(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_aaMotorDrivers0Occupation"), anchor, flags);
	}
	
	/**
	 * aaMotorDrivers0Parttimebusiness: with default state.
	 *		.id : other-occupation-type
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : aa.motor.drivers[0].parttimebusiness
	 * 		.classIndex : 7
	 */
	protected TextGuiTestObject text_aaMotorDrivers0Parttimebu() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_aaMotorDrivers0Parttimebu"));
	}
	/**
	 * aaMotorDrivers0Parttimebusiness: with specific test context and state.
	 *		.id : other-occupation-type
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : aa.motor.drivers[0].parttimebusiness
	 * 		.classIndex : 7
	 */
	protected TextGuiTestObject text_aaMotorDrivers0Parttimebu(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_aaMotorDrivers0Parttimebu"), anchor, flags);
	}
	
	/**
	 * aaMotorDrivers0Parttimeoccupation: with default state.
	 *		.id : other-occupation
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : aa.motor.drivers[0].parttimeoccupation
	 * 		.classIndex : 6
	 */
	protected TextGuiTestObject text_aaMotorDrivers0Parttimeoc() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_aaMotorDrivers0Parttimeoc"));
	}
	/**
	 * aaMotorDrivers0Parttimeoccupation: with specific test context and state.
	 *		.id : other-occupation
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : aa.motor.drivers[0].parttimeoccupation
	 * 		.classIndex : 6
	 */
	protected TextGuiTestObject text_aaMotorDrivers0Parttimeoc(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_aaMotorDrivers0Parttimeoc"), anchor, flags);
	}
	
	/**
	 * aaMotorPreviousPolicyExpiryDate: with default state.
	 *		.id : policy-end-date
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : aa.motor.previousPolicyExpiryDate
	 * 		.classIndex : 8
	 */
	protected TextGuiTestObject text_aaMotorPreviousPolicyExpi() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_aaMotorPreviousPolicyExpi"));
	}
	/**
	 * aaMotorPreviousPolicyExpiryDate: with specific test context and state.
	 *		.id : policy-end-date
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : aa.motor.previousPolicyExpiryDate
	 * 		.classIndex : 8
	 */
	protected TextGuiTestObject text_aaMotorPreviousPolicyExpi(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_aaMotorPreviousPolicyExpi"), anchor, flags);
	}
	
	/**
	 * dateOfBirth: with default state.
	 *		.id : birth-date
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : date-of-birth
	 * 		.classIndex : 2
	 */
	protected TextGuiTestObject text_dateOfBirth() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_dateOfBirth"));
	}
	/**
	 * dateOfBirth: with specific test context and state.
	 *		.id : birth-date
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : date-of-birth
	 * 		.classIndex : 2
	 */
	protected TextGuiTestObject text_dateOfBirth(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_dateOfBirth"), anchor, flags);
	}
	
	

	protected Your_DetailsHelper()
	{
		setScriptName("Motor_MK2.Your__Details.Your_Details");
	}
	
}

