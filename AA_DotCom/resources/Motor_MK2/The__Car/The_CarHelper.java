// DO NOT EDIT: This file is automatically generated.
//
// Only the associated template file should be edited directly.
// Helper class files are automatically regenerated from the template
// files at various times, including record actions and test object
// insertion actions.  Any changes made directly to a helper class
// file will be lost when automatically updated.

package resources.Motor_MK2.The__Car;
import Utilities.AA_SuperHelper;
import com.rational.test.ft.object.interfaces.*;
import com.rational.test.ft.object.interfaces.SAP.*;
import com.rational.test.ft.object.interfaces.WPF.*;
import com.rational.test.ft.object.interfaces.siebel.*;
import com.rational.test.ft.object.interfaces.flex.*;
import com.rational.test.ft.object.interfaces.dojo.*;
import com.rational.test.ft.object.interfaces.generichtmlsubdomain.*;
import com.rational.test.ft.script.*;
import com.rational.test.ft.vp.IFtVerificationPoint;
import com.ibm.rational.test.ft.object.interfaces.sapwebportal.*;
/**
 * Script Name   : <b>The_Car</b><br>
 * Generated     : <b>2015/06/25 16:04:08</b><br>
 * Description   : Helper class for script<br>
 * Original Host : Windows 7 x86 6.1 <br>
 * 
 * @since  June 25, 2015
 * @author horned
 */
public abstract class The_CarHelper extends Utilities.AA_SuperHelper
{
	/**
	 * Nextsubmit: with default state.
	 *		.id : 
	 * 		.type : submit
	 * 		.value : Next
	 * 		.title : 
	 * 		.class : Html.INPUT.submit
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_nextsubmit() 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_nextsubmit"));
	}
	/**
	 * Nextsubmit: with specific test context and state.
	 *		.id : 
	 * 		.type : submit
	 * 		.value : Next
	 * 		.title : 
	 * 		.class : Html.INPUT.submit
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_nextsubmit(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_nextsubmit"), anchor, flags);
	}
	
	/**
	 * CarInsuranceTheCarTheAA: with default state.
	 *		.title : RegularExpression(The car)
	 * 		.class : Html.HtmlDocument
	 * 		.url : RegularExpression(car-insurance/buy/car-details)
	 */
	protected DocumentTestObject document_carInsuranceTheCarThe() 
	{
		return new DocumentTestObject(
                        getMappedTestObject("document_carInsuranceTheCarThe"));
	}
	/**
	 * CarInsuranceTheCarTheAA: with specific test context and state.
	 *		.title : RegularExpression(The car)
	 * 		.class : Html.HtmlDocument
	 * 		.url : RegularExpression(car-insurance/buy/car-details)
	 */
	protected DocumentTestObject document_carInsuranceTheCarThe(TestObject anchor, long flags) 
	{
		return new DocumentTestObject(
                        getMappedTestObject("document_carInsuranceTheCarThe"), anchor, flags);
	}
	
	/**
	 * TheCarTheCarPleaseTakeReasonableCareToAnswerAllOfThe: with default state.
	 *		.id : 
	 * 		.title : 
	 * 		.class : Html.FORM
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject form_theCarTheCarPleaseTakeRea() 
	{
		return new GuiTestObject(
                        getMappedTestObject("form_theCarTheCarPleaseTakeRea"));
	}
	/**
	 * TheCarTheCarPleaseTakeReasonableCareToAnswerAllOfThe: with specific test context and state.
	 *		.id : 
	 * 		.title : 
	 * 		.class : Html.FORM
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject form_theCarTheCarPleaseTakeRea(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("form_theCarTheCarPleaseTakeRea"), anchor, flags);
	}
	
	/**
	 * aaMotorVehicleRegyear: with default state.
	 *		.id : reg-year
	 * 		.title : 
	 * 		.class : Html.INPUT.number
	 * 		.name : aa.motor.vehicle.regyear
	 * 		.classIndex : 0
	 */
	protected GuiTestObject html_aaMotorVehicleRegyear() 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_aaMotorVehicleRegyear"));
	}
	/**
	 * aaMotorVehicleRegyear: with specific test context and state.
	 *		.id : reg-year
	 * 		.title : 
	 * 		.class : Html.INPUT.number
	 * 		.name : aa.motor.vehicle.regyear
	 * 		.classIndex : 0
	 */
	protected GuiTestObject html_aaMotorVehicleRegyear(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_aaMotorVehicleRegyear"), anchor, flags);
	}
	
	/**
	 * aaVehicleValue: with default state.
	 *		.id : worth
	 * 		.title : 
	 * 		.class : Html.INPUT.number
	 * 		.name : aa.vehicle.value
	 * 		.classIndex : 0
	 */
	protected GuiTestObject html_aaVehicleValue() 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_aaVehicleValue"));
	}
	/**
	 * aaVehicleValue: with specific test context and state.
	 *		.id : worth
	 * 		.title : 
	 * 		.class : Html.INPUT.number
	 * 		.name : aa.vehicle.value
	 * 		.classIndex : 0
	 */
	protected GuiTestObject html_aaVehicleValue(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_aaVehicleValue"), anchor, flags);
	}
	
	/**
	 * AboutYourCar0: with default state.
	 *		.id : mileage
	 * 		.title : 
	 * 		.class : Html.INPUT.number
	 * 		.name : RegularExpression(AboutYourCar)
	 * 		.classIndex : 1
	 */
	protected GuiTestObject html_aboutYourCar0() 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_aboutYourCar0"));
	}
	/**
	 * AboutYourCar0: with specific test context and state.
	 *		.id : mileage
	 * 		.title : 
	 * 		.class : Html.INPUT.number
	 * 		.name : RegularExpression(AboutYourCar)
	 * 		.classIndex : 1
	 */
	protected GuiTestObject html_aboutYourCar0(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_aboutYourCar0"), anchor, flags);
	}
	
	/**
	 * AboutYourCar1: with default state.
	 *		.id : mileage
	 * 		.title : 
	 * 		.class : Html.INPUT.number
	 * 		.name : AboutYourCar1
	 * 		.classIndex : 1
	 */
	protected GuiTestObject html_aboutYourCar1() 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_aboutYourCar1"));
	}
	/**
	 * AboutYourCar1: with specific test context and state.
	 *		.id : mileage
	 * 		.title : 
	 * 		.class : Html.INPUT.number
	 * 		.name : AboutYourCar1
	 * 		.classIndex : 1
	 */
	protected GuiTestObject html_aboutYourCar1(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_aboutYourCar1"), anchor, flags);
	}
	
	/**
	 * AboutYourCar2: with default state.
	 *		.id : mileage
	 * 		.title : 
	 * 		.class : Html.INPUT.number
	 * 		.name : AboutYourCar2
	 * 		.classIndex : 1
	 */
	protected GuiTestObject html_aboutYourCar2() 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_aboutYourCar2"));
	}
	/**
	 * AboutYourCar2: with specific test context and state.
	 *		.id : mileage
	 * 		.title : 
	 * 		.class : Html.INPUT.number
	 * 		.name : AboutYourCar2
	 * 		.classIndex : 1
	 */
	protected GuiTestObject html_aboutYourCar2(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_aboutYourCar2"), anchor, flags);
	}
	
	/**
	 * main: with default state.
	 *		.id : main
	 * 		.title : 
	 * 		.class : Html.DIV
	 * 		.classIndex : 0
	 */
	protected GuiTestObject html_main() 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_main"));
	}
	/**
	 * main: with specific test context and state.
	 *		.id : main
	 * 		.title : 
	 * 		.class : Html.DIV
	 * 		.classIndex : 0
	 */
	protected GuiTestObject html_main(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_main"), anchor, flags);
	}
	
	/**
	 * main: with default state.
	 *		.id : main
	 * 		.title : 
	 * 		.class : Html.DIV
	 * 		.classIndex : 0
	 */
	protected GuiTestObject html_main2() 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_main2"));
	}
	/**
	 * main: with specific test context and state.
	 *		.id : main
	 * 		.title : 
	 * 		.class : Html.DIV
	 * 		.classIndex : 0
	 */
	protected GuiTestObject html_main2(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_main2"), anchor, flags);
	}
	
	/**
	 * regQuestion: with default state.
	 *		.id : reg-question
	 * 		.title : 
	 * 		.class : Html.DIV
	 * 		.classIndex : 0
	 */
	protected GuiTestObject html_regQuestion() 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_regQuestion"));
	}
	/**
	 * regQuestion: with specific test context and state.
	 *		.id : reg-question
	 * 		.title : 
	 * 		.class : Html.DIV
	 * 		.classIndex : 0
	 */
	protected GuiTestObject html_regQuestion(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_regQuestion"), anchor, flags);
	}
	
	/**
	 * htmlBrowser: with default state.
	 *		.class : Html.HtmlBrowser
	 * 		.browserName : MS Internet Explorer
	 * 		.processName : iexplore.exe
	 */
	protected BrowserTestObject iE() 
	{
		return new BrowserTestObject(
                        getMappedTestObject("iE"));
	}
	/**
	 * htmlBrowser: with specific test context and state.
	 *		.class : Html.HtmlBrowser
	 * 		.browserName : MS Internet Explorer
	 * 		.processName : iexplore.exe
	 */
	protected BrowserTestObject iE(TestObject anchor, long flags) 
	{
		return new BrowserTestObject(
                        getMappedTestObject("iE"), anchor, flags);
	}
	
	/**
	 * No: with default state.
	 *		.id : 
	 * 		.value : No 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 8
	 */
	protected GuiTestObject label_CarModified_no() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_CarModified_no"));
	}
	/**
	 * No: with specific test context and state.
	 *		.id : 
	 * 		.value : No 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 8
	 */
	protected GuiTestObject label_CarModified_no(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_CarModified_no"), anchor, flags);
	}
	
	/**
	 * Yes: with default state.
	 *		.id : 
	 * 		.value : Yes 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 7
	 */
	protected GuiTestObject label_CarModified_yes() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_CarModified_yes"));
	}
	/**
	 * Yes: with specific test context and state.
	 *		.id : 
	 * 		.value : Yes 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 7
	 */
	protected GuiTestObject label_CarModified_yes(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_CarModified_yes"), anchor, flags);
	}
	
	/**
	 * No: with default state.
	 *		.id : 
	 * 		.value : No 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 27
	 */
	protected GuiTestObject label_FittersCertificate_no() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_FittersCertificate_no"));
	}
	/**
	 * No: with specific test context and state.
	 *		.id : 
	 * 		.value : No 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 27
	 */
	protected GuiTestObject label_FittersCertificate_no(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_FittersCertificate_no"), anchor, flags);
	}
	
	/**
	 * Yes: with default state.
	 *		.id : 
	 * 		.value : Yes 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 26
	 */
	protected GuiTestObject label_FittersCertificate_yes() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_FittersCertificate_yes"));
	}
	/**
	 * Yes: with specific test context and state.
	 *		.id : 
	 * 		.value : Yes 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 26
	 */
	protected GuiTestObject label_FittersCertificate_yes(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_FittersCertificate_yes"), anchor, flags);
	}
	
	/**
	 * No: with default state.
	 *		.id : 
	 * 		.value : No 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 40
	 */
	protected GuiTestObject label_KeptHomeAddress_no() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_KeptHomeAddress_no"));
	}
	/**
	 * No: with specific test context and state.
	 *		.id : 
	 * 		.value : No 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 40
	 */
	protected GuiTestObject label_KeptHomeAddress_no(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_KeptHomeAddress_no"), anchor, flags);
	}
	
	/**
	 * Yes: with default state.
	 *		.id : 
	 * 		.value : Yes 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 39
	 */
	protected GuiTestObject label_KeptHomeAddress_yes() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_KeptHomeAddress_yes"));
	}
	/**
	 * Yes: with specific test context and state.
	 *		.id : 
	 * 		.value : Yes 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 39
	 */
	protected GuiTestObject label_KeptHomeAddress_yes(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_KeptHomeAddress_yes"), anchor, flags);
	}
	
	/**
	 * No: with default state.
	 *		.id : 
	 * 		.value : No 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 45
	 */
	protected GuiTestObject label_OtherVehicle_no() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_OtherVehicle_no"));
	}
	/**
	 * No: with specific test context and state.
	 *		.id : 
	 * 		.value : No 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 45
	 */
	protected GuiTestObject label_OtherVehicle_no(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_OtherVehicle_no"), anchor, flags);
	}
	
	/**
	 * Yes: with default state.
	 *		.id : 
	 * 		.value : Yes 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 44
	 */
	protected GuiTestObject label_OtherVehicle_yes() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_OtherVehicle_yes"));
	}
	/**
	 * Yes: with specific test context and state.
	 *		.id : 
	 * 		.value : Yes 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 44
	 */
	protected GuiTestObject label_OtherVehicle_yes(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_OtherVehicle_yes"), anchor, flags);
	}
	
	/**
	 * No: with default state.
	 *		.id : 
	 * 		.value : No 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 61
	 */
	protected GuiTestObject label_OwnCaravan_no() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_OwnCaravan_no"));
	}
	/**
	 * No: with specific test context and state.
	 *		.id : 
	 * 		.value : No 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 61
	 */
	protected GuiTestObject label_OwnCaravan_no(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_OwnCaravan_no"), anchor, flags);
	}
	
	/**
	 * Yes: with default state.
	 *		.id : 
	 * 		.value : Yes 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 60
	 */
	protected GuiTestObject label_OwnCaravan_yes() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_OwnCaravan_yes"));
	}
	/**
	 * Yes: with specific test context and state.
	 *		.id : 
	 * 		.value : Yes 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 60
	 */
	protected GuiTestObject label_OwnCaravan_yes(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_OwnCaravan_yes"), anchor, flags);
	}
	
	/**
	 * No: with default state.
	 *		.id : 
	 * 		.value : No 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 5
	 */
	protected GuiTestObject label_RHDrive_no() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_RHDrive_no"));
	}
	/**
	 * No: with specific test context and state.
	 *		.id : 
	 * 		.value : No 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 5
	 */
	protected GuiTestObject label_RHDrive_no(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_RHDrive_no"), anchor, flags);
	}
	
	/**
	 * Yes: with default state.
	 *		.id : 
	 * 		.value : Yes 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 4
	 */
	protected GuiTestObject label_RHDrive_yes() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_RHDrive_yes"));
	}
	/**
	 * Yes: with specific test context and state.
	 *		.id : 
	 * 		.value : Yes 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 4
	 */
	protected GuiTestObject label_RHDrive_yes(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_RHDrive_yes"), anchor, flags);
	}
	
	/**
	 * Yes: with default state.
	 *		.id : 
	 * 		.value : Yes
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 1
	 */
	protected GuiTestObject label_RegKnown_yes() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_RegKnown_yes"));
	}
	/**
	 * Yes: with specific test context and state.
	 *		.id : 
	 * 		.value : Yes
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 1
	 */
	protected GuiTestObject label_RegKnown_yes(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_RegKnown_yes"), anchor, flags);
	}
	
	/**
	 * No: with default state.
	 *		.id : 
	 * 		.value : No 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 19
	 */
	protected GuiTestObject label_SecurityDevice_no() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_SecurityDevice_no"));
	}
	/**
	 * No: with specific test context and state.
	 *		.id : 
	 * 		.value : No 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 19
	 */
	protected GuiTestObject label_SecurityDevice_no(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_SecurityDevice_no"), anchor, flags);
	}
	
	/**
	 * AdditionalDevice: with default state.
	 *		.id : 
	 * 		.value : Additional device 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 22
	 */
	protected GuiTestObject label_additionalDevice() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_additionalDevice"));
	}
	/**
	 * AdditionalDevice: with specific test context and state.
	 *		.id : 
	 * 		.value : Additional device 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 22
	 */
	protected GuiTestObject label_additionalDevice(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_additionalDevice"), anchor, flags);
	}
	
	/**
	 * AlloyWheels: with default state.
	 *		.id : 
	 * 		.value : Alloy Wheels
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 10
	 */
	protected GuiTestObject label_alloyWheels() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_alloyWheels"));
	}
	/**
	 * AlloyWheels: with specific test context and state.
	 *		.id : 
	 * 		.value : Alloy Wheels
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 10
	 */
	protected GuiTestObject label_alloyWheels(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_alloyWheels"), anchor, flags);
	}
	
	/**
	 * Automatic: with default state.
	 *		.id : 
	 * 		.value : Automatic 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 11
	 */
	protected GuiTestObject label_automatic() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_automatic"));
	}
	/**
	 * Automatic: with specific test context and state.
	 *		.id : 
	 * 		.value : Automatic 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 11
	 */
	protected GuiTestObject label_automatic(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_automatic"), anchor, flags);
	}
	
	/**
	 * BullBars: with default state.
	 *		.id : 
	 * 		.value : Bull Bars
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 15
	 */
	protected GuiTestObject label_bullBars() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_bullBars"));
	}
	/**
	 * BullBars: with specific test context and state.
	 *		.id : 
	 * 		.value : Bull Bars
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 15
	 */
	protected GuiTestObject label_bullBars(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_bullBars"), anchor, flags);
	}
	
	/**
	 * Diesel: with default state.
	 *		.id : 
	 * 		.value : Diesel 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 6
	 */
	protected GuiTestObject label_diesel() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_diesel"));
	}
	/**
	 * Diesel: with specific test context and state.
	 *		.id : 
	 * 		.value : Diesel 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 6
	 */
	protected GuiTestObject label_diesel(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_diesel"), anchor, flags);
	}
	
	/**
	 * DualControl: with default state.
	 *		.id : 
	 * 		.value : Dual Control
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 16
	 */
	protected GuiTestObject label_dualControl() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_dualControl"));
	}
	/**
	 * DualControl: with specific test context and state.
	 *		.id : 
	 * 		.value : Dual Control
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 16
	 */
	protected GuiTestObject label_dualControl(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_dualControl"), anchor, flags);
	}
	
	/**
	 * Electric: with default state.
	 *		.id : 
	 * 		.value : Electric 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 7
	 */
	protected GuiTestObject label_electric() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_electric"));
	}
	/**
	 * Electric: with specific test context and state.
	 *		.id : 
	 * 		.value : Electric 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 7
	 */
	protected GuiTestObject label_electric(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_electric"), anchor, flags);
	}
	
	/**
	 * FrontSpoilerAirDam: with default state.
	 *		.id : 
	 * 		.value : Front Spoiler / Air Dam 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 11
	 */
	protected GuiTestObject label_frontSpoilerAirDam() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_frontSpoilerAirDam"));
	}
	/**
	 * FrontSpoilerAirDam: with specific test context and state.
	 *		.id : 
	 * 		.value : Front Spoiler / Air Dam 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 11
	 */
	protected GuiTestObject label_frontSpoilerAirDam(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_frontSpoilerAirDam"), anchor, flags);
	}
	
	/**
	 * HandControls: with default state.
	 *		.id : 
	 * 		.value : Hand Controls
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 17
	 */
	protected GuiTestObject label_handControls() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_handControls"));
	}
	/**
	 * HandControls: with specific test context and state.
	 *		.id : 
	 * 		.value : Hand Controls
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 17
	 */
	protected GuiTestObject label_handControls(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_handControls"), anchor, flags);
	}
	
	/**
	 * HybridOther: with default state.
	 *		.id : 
	 * 		.value : Hybrid/Other 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 8
	 */
	protected GuiTestObject label_hybridOther() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_hybridOther"));
	}
	/**
	 * HybridOther: with specific test context and state.
	 *		.id : 
	 * 		.value : Hybrid/Other 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 8
	 */
	protected GuiTestObject label_hybridOther(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_hybridOther"), anchor, flags);
	}
	
	/**
	 * IDonTHaveTheCarYet: with default state.
	 *		.id : bought-it-label
	 * 		.value : I don't have the car yet
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 32
	 */
	protected GuiTestObject label_iDonTHaveTheCarYet() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_iDonTHaveTheCarYet"));
	}
	/**
	 * IDonTHaveTheCarYet: with specific test context and state.
	 *		.id : bought-it-label
	 * 		.value : I don't have the car yet
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 32
	 */
	protected GuiTestObject label_iDonTHaveTheCarYet(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_iDonTHaveTheCarYet"), anchor, flags);
	}
	
	/**
	 * LockingWheelNuts: with default state.
	 *		.id : 
	 * 		.value : Locking Wheel Nuts 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 12
	 */
	protected GuiTestObject label_lockingWheelNuts() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_lockingWheelNuts"));
	}
	/**
	 * LockingWheelNuts: with specific test context and state.
	 *		.id : 
	 * 		.value : Locking Wheel Nuts 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 12
	 */
	protected GuiTestObject label_lockingWheelNuts(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_lockingWheelNuts"), anchor, flags);
	}
	
	/**
	 * Manual: with default state.
	 *		.id : 
	 * 		.value : Manual 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 10
	 */
	protected GuiTestObject label_manual() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_manual"));
	}
	/**
	 * Manual: with specific test context and state.
	 *		.id : 
	 * 		.value : Manual 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 10
	 */
	protected GuiTestObject label_manual(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_manual"), anchor, flags);
	}
	
	/**
	 * ManufacturerOptionalExtra: with default state.
	 *		.id : 
	 * 		.value : Manufacturer optional extra 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 21
	 */
	protected GuiTestObject label_manufacturerOptionalExtr() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_manufacturerOptionalExtr"));
	}
	/**
	 * ManufacturerOptionalExtra: with specific test context and state.
	 *		.id : 
	 * 		.value : Manufacturer optional extra 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 21
	 */
	protected GuiTestObject label_manufacturerOptionalExtr(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_manufacturerOptionalExtr"), anchor, flags);
	}
	
	/**
	 * ManufacturerStandardFit: with default state.
	 *		.id : 
	 * 		.value : Manufacturer standard-fit 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 20
	 */
	protected GuiTestObject label_manufacturerStandardFit() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_manufacturerStandardFit"));
	}
	/**
	 * ManufacturerStandardFit: with specific test context and state.
	 *		.id : 
	 * 		.value : Manufacturer standard-fit 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 20
	 */
	protected GuiTestObject label_manufacturerStandardFit(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_manufacturerStandardFit"), anchor, flags);
	}
	
	/**
	 * NoFindTheCarByMakeAndModel: with default state.
	 *		.id : 
	 * 		.value : No, find the car by make and model 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 2
	 */
	protected GuiTestObject label_noFindTheCarByMakeAndMod() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_noFindTheCarByMakeAndMod"));
	}
	/**
	 * NoFindTheCarByMakeAndModel: with specific test context and state.
	 *		.id : 
	 * 		.value : No, find the car by make and model 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 2
	 */
	protected GuiTestObject label_noFindTheCarByMakeAndMod(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_noFindTheCarByMakeAndMod"), anchor, flags);
	}
	
	/**
	 * Petrol: with default state.
	 *		.id : 
	 * 		.value : Petrol 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 5
	 */
	protected GuiTestObject label_petrol() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_petrol"));
	}
	/**
	 * Petrol: with specific test context and state.
	 *		.id : 
	 * 		.value : Petrol 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 5
	 */
	protected GuiTestObject label_petrol(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_petrol"), anchor, flags);
	}
	
	/**
	 * RearRoofSpoiler: with default state.
	 *		.id : 
	 * 		.value : Rear Roof Spoiler 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 13
	 */
	protected GuiTestObject label_rearRoofSpoiler() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_rearRoofSpoiler"));
	}
	/**
	 * RearRoofSpoiler: with specific test context and state.
	 *		.id : 
	 * 		.value : Rear Roof Spoiler 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 13
	 */
	protected GuiTestObject label_rearRoofSpoiler(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_rearRoofSpoiler"), anchor, flags);
	}
	
	/**
	 * RearSpoilerAerofoil: with default state.
	 *		.id : 
	 * 		.value : Rear Spoiler / Aerofoil 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 14
	 */
	protected GuiTestObject label_rearSpoilerAerofoil() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_rearSpoilerAerofoil"));
	}
	/**
	 * RearSpoilerAerofoil: with specific test context and state.
	 *		.id : 
	 * 		.value : Rear Spoiler / Aerofoil 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 14
	 */
	protected GuiTestObject label_rearSpoilerAerofoil(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_rearSpoilerAerofoil"), anchor, flags);
	}
	
	/**
	 * Back: with default state.
	 *		.text : Back
	 * 		.id : 
	 * 		.href : https://prelive9.theaa.com/insurance/car-insurance.jsp
	 * 		.title : 
	 * 		.class : Html.A
	 * 		.name : 
	 * 		.classIndex : 14
	 */
	protected GuiTestObject link_back() 
	{
		return new GuiTestObject(
                        getMappedTestObject("link_back"));
	}
	/**
	 * Back: with specific test context and state.
	 *		.text : Back
	 * 		.id : 
	 * 		.href : https://prelive9.theaa.com/insurance/car-insurance.jsp
	 * 		.title : 
	 * 		.class : Html.A
	 * 		.name : 
	 * 		.classIndex : 14
	 */
	protected GuiTestObject link_back(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("link_back"), anchor, flags);
	}
	
	/**
	 * ChangeCar: with default state.
	 *		.text : Change car
	 * 		.href : RegularExpression(car-insurance/)
	 * 		.id : 
	 * 		.title : 
	 * 		.class : Html.A
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject link_changeCar() 
	{
		return new GuiTestObject(
                        getMappedTestObject("link_changeCar"));
	}
	/**
	 * ChangeCar: with specific test context and state.
	 *		.text : Change car
	 * 		.href : RegularExpression(car-insurance/)
	 * 		.id : 
	 * 		.title : 
	 * 		.class : Html.A
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject link_changeCar(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("link_changeCar"), anchor, flags);
	}
	
	/**
	 * CheckTheAssumptions: with default state.
	 *		.text : Check the assumptions
	 * 		.id : 
	 * 		.href : RegularExpression(car-insurance/buy/)
	 * 		.title : 
	 * 		.class : Html.A
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject link_checkTheAssumptions() 
	{
		return new GuiTestObject(
                        getMappedTestObject("link_checkTheAssumptions"));
	}
	/**
	 * CheckTheAssumptions: with specific test context and state.
	 *		.text : Check the assumptions
	 * 		.id : 
	 * 		.href : RegularExpression(car-insurance/buy/)
	 * 		.title : 
	 * 		.class : Html.A
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject link_checkTheAssumptions(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("link_checkTheAssumptions"), anchor, flags);
	}
	
	/**
	 * ClickHereToChooseTheExactModel: with default state.
	 *		.text : Click here to choose the exact model
	 * 		.href : RegularExpression(car-insurance)
	 * 		.id : 
	 * 		.title : 
	 * 		.class : Html.A
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject link_clickHereToChooseTheExact() 
	{
		return new GuiTestObject(
                        getMappedTestObject("link_clickHereToChooseTheExact"));
	}
	/**
	 * ClickHereToChooseTheExactModel: with specific test context and state.
	 *		.text : Click here to choose the exact model
	 * 		.href : RegularExpression(car-insurance)
	 * 		.id : 
	 * 		.title : 
	 * 		.class : Html.A
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject link_clickHereToChooseTheExact(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("link_clickHereToChooseTheExact"), anchor, flags);
	}
	
	/**
	 * makeModelSelect: with default state.
	 *		.text : Continue
	 * 		.href : RegularExpression(car-insurance)
	 * 		.id : make-model-select
	 * 		.title : 
	 * 		.class : Html.A
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject link_makeModelSelect() 
	{
		return new GuiTestObject(
                        getMappedTestObject("link_makeModelSelect"));
	}
	/**
	 * makeModelSelect: with specific test context and state.
	 *		.text : Continue
	 * 		.href : RegularExpression(car-insurance)
	 * 		.id : make-model-select
	 * 		.title : 
	 * 		.class : Html.A
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject link_makeModelSelect(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("link_makeModelSelect"), anchor, flags);
	}
	
	/**
	 * registrationConfirm: with default state.
	 *		.text : Find the car
	 * 		.id : registration-confirm
	 * 		.href : RegularExpression(car-insurance/buy/car)
	 * 		.title : 
	 * 		.class : Html.A
	 * 		.name : 
	 * 		.classIndex : 1
	 */
	protected GuiTestObject link_registrationConfirm() 
	{
		return new GuiTestObject(
                        getMappedTestObject("link_registrationConfirm"));
	}
	/**
	 * registrationConfirm: with specific test context and state.
	 *		.text : Find the car
	 * 		.id : registration-confirm
	 * 		.href : RegularExpression(car-insurance/buy/car)
	 * 		.title : 
	 * 		.class : Html.A
	 * 		.name : 
	 * 		.classIndex : 1
	 */
	protected GuiTestObject link_registrationConfirm(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("link_registrationConfirm"), anchor, flags);
	}
	
	/**
	 * aaMotorVehicleMake: with default state.
	 *		.text : Please select AC AIXAM ALFA ROMEO ALLARD ALPINA ALVIS AMC ANT ARM SIDDELEY ARO A ...
	 * 		.id : make
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : aa.motor.vehicle.make
	 * 		.classIndex : 0
	 */
	protected SelectGuiSubitemTestObject list_aaMotorVehicleMake() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_aaMotorVehicleMake"));
	}
	/**
	 * aaMotorVehicleMake: with specific test context and state.
	 *		.text : Please select AC AIXAM ALFA ROMEO ALLARD ALPINA ALVIS AMC ANT ARM SIDDELEY ARO A ...
	 * 		.id : make
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : aa.motor.vehicle.make
	 * 		.classIndex : 0
	 */
	protected SelectGuiSubitemTestObject list_aaMotorVehicleMake(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_aaMotorVehicleMake"), anchor, flags);
	}
	
	/**
	 * aaMotorVehicleModel: with default state.
	 *		.text : 
	 * 		.id : model
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : aa.motor.vehicle.model
	 * 		.classIndex : 1
	 */
	protected SelectGuiSubitemTestObject list_aaMotorVehicleModel() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_aaMotorVehicleModel"));
	}
	/**
	 * aaMotorVehicleModel: with specific test context and state.
	 *		.text : 
	 * 		.id : model
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : aa.motor.vehicle.model
	 * 		.classIndex : 1
	 */
	protected SelectGuiSubitemTestObject list_aaMotorVehicleModel(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_aaMotorVehicleModel"), anchor, flags);
	}
	
	/**
	 * aaMotorVehicleNoOfSeats: with default state.
	 *		.text : Please select 1 2 3 4 5 6 7 8 9
	 * 		.id : seats
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : aa.motor.vehicle.noOfSeats
	 * 		.classIndex : 0
	 */
	protected SelectGuiSubitemTestObject list_aaMotorVehicleNoOfSeats() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_aaMotorVehicleNoOfSeats"));
	}
	/**
	 * aaMotorVehicleNoOfSeats: with specific test context and state.
	 *		.text : Please select 1 2 3 4 5 6 7 8 9
	 * 		.id : seats
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : aa.motor.vehicle.noOfSeats
	 * 		.classIndex : 0
	 */
	protected SelectGuiSubitemTestObject list_aaMotorVehicleNoOfSeats(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_aaMotorVehicleNoOfSeats"), anchor, flags);
	}
	
	/**
	 * aaMotorVehicleRegisteredTo: with default state.
	 *		.text : Please select Policyholder Spouse/Civil Partner Parent Leased (private) Leased ( ...
	 * 		.id : VEHICLE_KEEPER
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : aa.motor.vehicle.registeredTo
	 * 		.classIndex : 6
	 */
	protected SelectGuiSubitemTestObject list_aaMotorVehicleRegisteredT() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_aaMotorVehicleRegisteredT"));
	}
	/**
	 * aaMotorVehicleRegisteredTo: with specific test context and state.
	 *		.text : Please select Policyholder Spouse/Civil Partner Parent Leased (private) Leased ( ...
	 * 		.id : VEHICLE_KEEPER
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : aa.motor.vehicle.registeredTo
	 * 		.classIndex : 6
	 */
	protected SelectGuiSubitemTestObject list_aaMotorVehicleRegisteredT(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_aaMotorVehicleRegisteredT"), anchor, flags);
	}
	
	/**
	 * aaMotorVehicleSecuritydevice0Fittedby: with default state.
	 *		.text : Please select Device Manf Approved Fitter DIY fitted Insurer Approved Fitter Veh ...
	 * 		.id : security-fitted
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : aa.motor.vehicle.securitydevice[0].fittedby
	 * 		.classIndex : 2
	 */
	protected SelectGuiSubitemTestObject list_aaMotorVehicleSecuritydev() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_aaMotorVehicleSecuritydev"));
	}
	/**
	 * aaMotorVehicleSecuritydevice0Fittedby: with specific test context and state.
	 *		.text : Please select Device Manf Approved Fitter DIY fitted Insurer Approved Fitter Veh ...
	 * 		.id : security-fitted
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : aa.motor.vehicle.securitydevice[0].fittedby
	 * 		.classIndex : 2
	 */
	protected SelectGuiSubitemTestObject list_aaMotorVehicleSecuritydev(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_aaMotorVehicleSecuritydev"), anchor, flags);
	}
	
	/**
	 * aaMotorVehicleSecuritydevice0Devicetype: with default state.
	 *		.text : Please select AA Electronic Car Immobiliser  AA Electronic Immobiliser  AA Foxgu ...
	 * 		.id : security-device
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : aa.motor.vehicle.securitydevice[0].devicetype
	 * 		.classIndex : 1
	 */
	protected SelectGuiSubitemTestObject list_aaMotorVehicleSecuritydev2() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_aaMotorVehicleSecuritydev2"));
	}
	/**
	 * aaMotorVehicleSecuritydevice0Devicetype: with specific test context and state.
	 *		.text : Please select AA Electronic Car Immobiliser  AA Electronic Immobiliser  AA Foxgu ...
	 * 		.id : security-device
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : aa.motor.vehicle.securitydevice[0].devicetype
	 * 		.classIndex : 1
	 */
	protected SelectGuiSubitemTestObject list_aaMotorVehicleSecuritydev2(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_aaMotorVehicleSecuritydev2"), anchor, flags);
	}
	
	/**
	 * aaMotorVehicleVehicleOwner: with default state.
	 *		.text : Please select Policyholder Spouse/Civil Partner Parent Leased (private) Leased ( ...
	 * 		.id : VEHICLE_OWNER
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : aa.motor.vehicle.vehicleOwner
	 * 		.classIndex : 5
	 */
	protected SelectGuiSubitemTestObject list_aaMotorVehicleVehicleOwne() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_aaMotorVehicleVehicleOwne"));
	}
	/**
	 * aaMotorVehicleVehicleOwner: with specific test context and state.
	 *		.text : Please select Policyholder Spouse/Civil Partner Parent Leased (private) Leased ( ...
	 * 		.id : VEHICLE_OWNER
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : aa.motor.vehicle.vehicleOwner
	 * 		.classIndex : 5
	 */
	protected SelectGuiSubitemTestObject list_aaMotorVehicleVehicleOwne(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_aaMotorVehicleVehicleOwne"), anchor, flags);
	}
	
	/**
	 * aaVehiclePurchaseMonth: with default state.
	 *		.text : Month January February March April May June July August September October Novemb ...
	 * 		.id : purchased-month
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : aa.vehicle.purchase.month
	 * 		.classIndex : 3
	 */
	protected SelectGuiSubitemTestObject list_aaVehiclePurchaseMonth() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_aaVehiclePurchaseMonth"));
	}
	/**
	 * aaVehiclePurchaseMonth: with specific test context and state.
	 *		.text : Month January February March April May June July August September October Novemb ...
	 * 		.id : purchased-month
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : aa.vehicle.purchase.month
	 * 		.classIndex : 3
	 */
	protected SelectGuiSubitemTestObject list_aaVehiclePurchaseMonth(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_aaVehiclePurchaseMonth"), anchor, flags);
	}
	
	/**
	 * aaVehiclePurchaseYear: with default state.
	 *		.text : Year 2015 2014 2013 2012 2011 2010 2009 2008 2007 2006 2005 2004 2003 2002 2001  ...
	 * 		.id : purchased-year
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : aa.vehicle.purchase.year
	 * 		.classIndex : 4
	 */
	protected SelectGuiSubitemTestObject list_aaVehiclePurchaseYear() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_aaVehiclePurchaseYear"));
	}
	/**
	 * aaVehiclePurchaseYear: with specific test context and state.
	 *		.text : Year 2015 2014 2013 2012 2011 2010 2009 2008 2007 2006 2005 2004 2003 2002 2001  ...
	 * 		.id : purchased-year
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : aa.vehicle.purchase.year
	 * 		.classIndex : 4
	 */
	protected SelectGuiSubitemTestObject list_aaVehiclePurchaseYear(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_aaVehiclePurchaseYear"), anchor, flags);
	}
	
	/**
	 * aaVehicleUsage: with default state.
	 *		.text : Please select Social, Domestic, Pleasure & Commuting (No Business Use) Social, D ...
	 * 		.id : VEHICLE_USE
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : aa.vehicle.usage
	 * 		.classIndex : 7
	 */
	protected SelectGuiSubitemTestObject list_aaVehicleUsage() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_aaVehicleUsage"));
	}
	/**
	 * aaVehicleUsage: with specific test context and state.
	 *		.text : Please select Social, Domestic, Pleasure & Commuting (No Business Use) Social, D ...
	 * 		.id : VEHICLE_USE
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : aa.vehicle.usage
	 * 		.classIndex : 7
	 */
	protected SelectGuiSubitemTestObject list_aaVehicleUsage(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_aaVehicleUsage"), anchor, flags);
	}
	
	/**
	 * AboutYourCar0: with default state.
	 *		.text : Please select Locked Garage Driveway or Carport Street Public Place Unlocked Gar ...
	 * 		.id : kept-overnight
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : RegularExpression(AboutYourCar)
	 * 		.classIndex : 8
	 */
	protected SelectGuiSubitemTestObject list_aboutYourCar0() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_aboutYourCar0"));
	}
	/**
	 * AboutYourCar0: with specific test context and state.
	 *		.text : Please select Locked Garage Driveway or Carport Street Public Place Unlocked Gar ...
	 * 		.id : kept-overnight
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : RegularExpression(AboutYourCar)
	 * 		.classIndex : 8
	 */
	protected SelectGuiSubitemTestObject list_aboutYourCar0(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_aboutYourCar0"), anchor, flags);
	}
	
	/**
	 * AboutYourCar2: with default state.
	 *		.text : Please select Locked Garage Driveway or Carport Street Public Place Unlocked Gar ...
	 * 		.id : kept-overnight
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : AboutYourCar2
	 * 		.classIndex : 8
	 */
	protected SelectGuiSubitemTestObject list_aboutYourCar2() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_aboutYourCar2"));
	}
	/**
	 * AboutYourCar2: with specific test context and state.
	 *		.text : Please select Locked Garage Driveway or Carport Street Public Place Unlocked Gar ...
	 * 		.id : kept-overnight
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : AboutYourCar2
	 * 		.classIndex : 8
	 */
	protected SelectGuiSubitemTestObject list_aboutYourCar2(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_aboutYourCar2"), anchor, flags);
	}
	
	/**
	 * aaVehicleGaragedpostcode: with default state.
	 *		.id : kept-postcode
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : aa.vehicle.garagedpostcode
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject text_aaVehicleGaragedpostcode() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_aaVehicleGaragedpostcode"));
	}
	/**
	 * aaVehicleGaragedpostcode: with specific test context and state.
	 *		.id : kept-postcode
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : aa.vehicle.garagedpostcode
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject text_aaVehicleGaragedpostcode(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_aaVehicleGaragedpostcode"), anchor, flags);
	}
	
	/**
	 * aaVehicleReg: with default state.
	 *		.id : registration
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : aa.vehicle.reg
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject text_aaVehicleReg() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_aaVehicleReg"));
	}
	/**
	 * aaVehicleReg: with specific test context and state.
	 *		.id : registration
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : aa.vehicle.reg
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject text_aaVehicleReg(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_aaVehicleReg"), anchor, flags);
	}
	
	

	protected The_CarHelper()
	{
		setScriptName("Motor_MK2.The__Car.The_Car");
	}
	
}

