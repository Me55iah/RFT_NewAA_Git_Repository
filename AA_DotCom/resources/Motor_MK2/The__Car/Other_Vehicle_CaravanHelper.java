// DO NOT EDIT: This file is automatically generated.
//
// Only the associated template file should be edited directly.
// Helper class files are automatically regenerated from the template
// files at various times, including record actions and test object
// insertion actions.  Any changes made directly to a helper class
// file will be lost when automatically updated.

package resources.Motor_MK2.The__Car;
import Utilities.AA_SuperHelper;
import com.rational.test.ft.object.interfaces.*;
import com.rational.test.ft.object.interfaces.SAP.*;
import com.rational.test.ft.object.interfaces.WPF.*;
import com.rational.test.ft.object.interfaces.siebel.*;
import com.rational.test.ft.object.interfaces.flex.*;
import com.rational.test.ft.object.interfaces.dojo.*;
import com.rational.test.ft.object.interfaces.generichtmlsubdomain.*;
import com.rational.test.ft.script.*;
import com.rational.test.ft.vp.IFtVerificationPoint;
import com.ibm.rational.test.ft.object.interfaces.sapwebportal.*;
/**
 * Script Name   : <b>Other_Vehicle_Caravan</b><br>
 * Generated     : <b>2015/06/26 15:14:02</b><br>
 * Description   : Helper class for script<br>
 * Original Host : Windows 7 x86 6.1 <br>
 * 
 * @since  June 26, 2015
 * @author horned
 */
public abstract class Other_Vehicle_CaravanHelper extends Utilities.AA_SuperHelper
{
	/**
	 * HtmlComboLBox: with default state.
	 *		.class : Html.ComboLBox
	 */
	protected GuiTestObject comboListBox_htmlComboLBox() 
	{
		return new GuiTestObject(
                        getMappedTestObject("comboListBox_htmlComboLBox"));
	}
	/**
	 * HtmlComboLBox: with specific test context and state.
	 *		.class : Html.ComboLBox
	 */
	protected GuiTestObject comboListBox_htmlComboLBox(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("comboListBox_htmlComboLBox"), anchor, flags);
	}
	
	/**
	 * HtmlComboLBox: with default state.
	 *		.class : Html.ComboLBox
	 */
	protected GuiTestObject comboListBox_htmlComboLBox2() 
	{
		return new GuiTestObject(
                        getMappedTestObject("comboListBox_htmlComboLBox2"));
	}
	/**
	 * HtmlComboLBox: with specific test context and state.
	 *		.class : Html.ComboLBox
	 */
	protected GuiTestObject comboListBox_htmlComboLBox2(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("comboListBox_htmlComboLBox2"), anchor, flags);
	}
	
	/**
	 * CarInsuranceTheCarTheAA: with default state.
	 *		.title : RegularExpression(Car Insurance)
	 * 		.class : Html.HtmlDocument
	 * 		.url : RegularExpression(car-insurance)
	 */
	protected DocumentTestObject document_carInsuranceTheCarThe() 
	{
		return new DocumentTestObject(
                        getMappedTestObject("document_carInsuranceTheCarThe"));
	}
	/**
	 * CarInsuranceTheCarTheAA: with specific test context and state.
	 *		.title : RegularExpression(Car Insurance)
	 * 		.class : Html.HtmlDocument
	 * 		.url : RegularExpression(car-insurance)
	 */
	protected DocumentTestObject document_carInsuranceTheCarThe(TestObject anchor, long flags) 
	{
		return new DocumentTestObject(
                        getMappedTestObject("document_carInsuranceTheCarThe"), anchor, flags);
	}
	
	/**
	 * htmlBrowser: with default state.
	 *		.class : Html.HtmlBrowser
	 * 		.browserName : MS Internet Explorer
	 * 		.processName : iexplore.exe
	 */
	protected BrowserTestObject iE() 
	{
		return new BrowserTestObject(
                        getMappedTestObject("iE"));
	}
	/**
	 * htmlBrowser: with specific test context and state.
	 *		.class : Html.HtmlBrowser
	 * 		.browserName : MS Internet Explorer
	 * 		.processName : iexplore.exe
	 */
	protected BrowserTestObject iE(TestObject anchor, long flags) 
	{
		return new BrowserTestObject(
                        getMappedTestObject("iE"), anchor, flags);
	}
	
	/**
	 * No: with default state.
	 *		.id : 
	 * 		.value : No 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 61
	 */
	protected GuiTestObject label_Caravan_no() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_Caravan_no"));
	}
	/**
	 * No: with specific test context and state.
	 *		.id : 
	 * 		.value : No 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 61
	 */
	protected GuiTestObject label_Caravan_no(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_Caravan_no"), anchor, flags);
	}
	
	/**
	 * Yes: with default state.
	 *		.id : 
	 * 		.value : Yes 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 60
	 */
	protected GuiTestObject label_Caravan_yes() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_Caravan_yes"));
	}
	/**
	 * Yes: with specific test context and state.
	 *		.id : 
	 * 		.value : Yes 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 60
	 */
	protected GuiTestObject label_Caravan_yes(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_Caravan_yes"), anchor, flags);
	}
	
	/**
	 * IAmANamedDriverOnAnotherCarInsurancePolicy: with default state.
	 *		.id : 
	 * 		.value : I am a named driver on another car insurance policy 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 49
	 */
	protected GuiTestObject label_iAmANamedDriverOnAnother() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_iAmANamedDriverOnAnother"));
	}
	/**
	 * IAmANamedDriverOnAnotherCarInsurancePolicy: with specific test context and state.
	 *		.id : 
	 * 		.value : I am a named driver on another car insurance policy 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 49
	 */
	protected GuiTestObject label_iAmANamedDriverOnAnother(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_iAmANamedDriverOnAnother"), anchor, flags);
	}
	
	/**
	 * IAmTheMainDriverOfACompanyCar: with default state.
	 *		.id : 
	 * 		.value : I am the main driver of a company car 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 48
	 */
	protected GuiTestObject label_iAmTheMainDriverOfACompa() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_iAmTheMainDriverOfACompa"));
	}
	/**
	 * IAmTheMainDriverOfACompanyCar: with specific test context and state.
	 *		.id : 
	 * 		.value : I am the main driver of a company car 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 48
	 */
	protected GuiTestObject label_iAmTheMainDriverOfACompa(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_iAmTheMainDriverOfACompa"), anchor, flags);
	}
	
	/**
	 * IHaveAnotherCarInsuredInMyNameIMThePolicyholder: with default state.
	 *		.id : 
	 * 		.value : I have another car insured in my name (I'm the policyholder) 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 47
	 */
	protected GuiTestObject label_iHaveAnotherCarInsuredIn() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_iHaveAnotherCarInsuredIn"));
	}
	/**
	 * IHaveAnotherCarInsuredInMyNameIMThePolicyholder: with specific test context and state.
	 *		.id : 
	 * 		.value : I have another car insured in my name (I'm the policyholder) 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 47
	 */
	protected GuiTestObject label_iHaveAnotherCarInsuredIn(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_iHaveAnotherCarInsuredIn"), anchor, flags);
	}
	
	/**
	 * No: with default state.
	 *		.id : 
	 * 		.value : No 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 53
	 */
	protected GuiTestObject label_no_IOS() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_no_IOS"));
	}
	/**
	 * No: with specific test context and state.
	 *		.id : 
	 * 		.value : No 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 53
	 */
	protected GuiTestObject label_no_IOS(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_no_IOS"), anchor, flags);
	}
	
	/**
	 * No: with default state.
	 *		.id : 
	 * 		.value : No 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 45
	 */
	protected GuiTestObject label_no_OV() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_no_OV"));
	}
	/**
	 * No: with specific test context and state.
	 *		.id : 
	 * 		.value : No 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 45
	 */
	protected GuiTestObject label_no_OV(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_no_OV"), anchor, flags);
	}
	
	/**
	 * No: with default state.
	 *		.id : 
	 * 		.value : No 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 56
	 */
	protected GuiTestObject label_no_UCC() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_no_UCC"));
	}
	/**
	 * No: with specific test context and state.
	 *		.id : 
	 * 		.value : No 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 56
	 */
	protected GuiTestObject label_no_UCC(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_no_UCC"), anchor, flags);
	}
	
	/**
	 * Yes: with default state.
	 *		.id : 
	 * 		.value : Yes 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 52
	 */
	protected GuiTestObject label_yes_IOS() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_yes_IOS"));
	}
	/**
	 * Yes: with specific test context and state.
	 *		.id : 
	 * 		.value : Yes 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 52
	 */
	protected GuiTestObject label_yes_IOS(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_yes_IOS"), anchor, flags);
	}
	
	/**
	 * Yes: with default state.
	 *		.id : 
	 * 		.value : Yes 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 44
	 */
	protected GuiTestObject label_yes_OV() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_yes_OV"));
	}
	/**
	 * Yes: with specific test context and state.
	 *		.id : 
	 * 		.value : Yes 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 44
	 */
	protected GuiTestObject label_yes_OV(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_yes_OV"), anchor, flags);
	}
	
	/**
	 * Yes: with default state.
	 *		.id : 
	 * 		.value : Yes 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 55
	 */
	protected GuiTestObject label_yes_UCC() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_yes_UCC"));
	}
	/**
	 * Yes: with specific test context and state.
	 *		.id : 
	 * 		.value : Yes 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 55
	 */
	protected GuiTestObject label_yes_UCC(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_yes_UCC"), anchor, flags);
	}
	
	/**
	 * aaMotorDrivers0OtherVehicleDateLastUseMonth: with default state.
	 *		.text : Month January February March April May June July August September October Novemb ...
	 * 		.id : company-car-month
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : aa.motor.drivers[0].otherVehicleDateLastUse.month
	 * 		.classIndex : 9
	 */
	protected SelectGuiSubitemTestObject list_aaMotorDrivers0OtherVehic() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_aaMotorDrivers0OtherVehic"));
	}
	/**
	 * aaMotorDrivers0OtherVehicleDateLastUseMonth: with specific test context and state.
	 *		.text : Month January February March April May June July August September October Novemb ...
	 * 		.id : company-car-month
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : aa.motor.drivers[0].otherVehicleDateLastUse.month
	 * 		.classIndex : 9
	 */
	protected SelectGuiSubitemTestObject list_aaMotorDrivers0OtherVehic(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_aaMotorDrivers0OtherVehic"), anchor, flags);
	}
	
	/**
	 * aaMotorDrivers0OtherVehicleDateLastUseYear: with default state.
	 *		.text : Year 2015 2014 2013 2012 2011 2010 2009 2008 2007 2006 2005
	 * 		.id : company-car-year
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : aa.motor.drivers[0].otherVehicleDateLastUse.year
	 * 		.classIndex : 10
	 */
	protected SelectGuiSubitemTestObject list_aaMotorDrivers0OtherVehic2() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_aaMotorDrivers0OtherVehic2"));
	}
	/**
	 * aaMotorDrivers0OtherVehicleDateLastUseYear: with specific test context and state.
	 *		.text : Year 2015 2014 2013 2012 2011 2010 2009 2008 2007 2006 2005
	 * 		.id : company-car-year
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : aa.motor.drivers[0].otherVehicleDateLastUse.year
	 * 		.classIndex : 10
	 */
	protected SelectGuiSubitemTestObject list_aaMotorDrivers0OtherVehic2(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_aaMotorDrivers0OtherVehic2"), anchor, flags);
	}
	
	/**
	 * aaMotorDrivers0OtherVehicleYearsNCD: with default state.
	 *		.id : other-vehicles-no-claims-discount
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : aa.motor.drivers[0].otherVehicleYearsNCD
	 * 		.classIndex : 1
	 */
	protected TextGuiTestObject text_aaMotorDrivers0OtherVehic() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_aaMotorDrivers0OtherVehic"));
	}
	/**
	 * aaMotorDrivers0OtherVehicleYearsNCD: with specific test context and state.
	 *		.id : other-vehicles-no-claims-discount
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : aa.motor.drivers[0].otherVehicleYearsNCD
	 * 		.classIndex : 1
	 */
	protected TextGuiTestObject text_aaMotorDrivers0OtherVehic(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_aaMotorDrivers0OtherVehic"), anchor, flags);
	}
	
	/**
	 * aaMotorDrivers0OtherVehicleYearsContinuousUse: with default state.
	 *		.id : other-vehicles-continuous-use
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : aa.motor.drivers[0].otherVehicleYearsContinuousUse
	 * 		.classIndex : 2
	 */
	protected TextGuiTestObject text_aaMotorDrivers0OtherVehic2() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_aaMotorDrivers0OtherVehic2"));
	}
	/**
	 * aaMotorDrivers0OtherVehicleYearsContinuousUse: with specific test context and state.
	 *		.id : other-vehicles-continuous-use
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : aa.motor.drivers[0].otherVehicleYearsContinuousUse
	 * 		.classIndex : 2
	 */
	protected TextGuiTestObject text_aaMotorDrivers0OtherVehic2(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_aaMotorDrivers0OtherVehic2"), anchor, flags);
	}
	
	

	protected Other_Vehicle_CaravanHelper()
	{
		setScriptName("Motor_MK2.The__Car.Other_Vehicle_Caravan");
	}
	
}

