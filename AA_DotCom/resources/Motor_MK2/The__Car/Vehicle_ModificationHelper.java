// DO NOT EDIT: This file is automatically generated.
//
// Only the associated template file should be edited directly.
// Helper class files are automatically regenerated from the template
// files at various times, including record actions and test object
// insertion actions.  Any changes made directly to a helper class
// file will be lost when automatically updated.

package resources.Motor_MK2.The__Car;

import com.rational.test.ft.object.interfaces.*;
import com.rational.test.ft.object.interfaces.SAP.*;
import com.rational.test.ft.object.interfaces.WPF.*;
import com.rational.test.ft.object.interfaces.siebel.*;
import com.rational.test.ft.object.interfaces.flex.*;
import com.rational.test.ft.object.interfaces.dojo.*;
import com.rational.test.ft.object.interfaces.generichtmlsubdomain.*;
import com.rational.test.ft.script.*;
import com.rational.test.ft.vp.IFtVerificationPoint;
import com.ibm.rational.test.ft.object.interfaces.sapwebportal.*;
/**
 * Script Name   : <b>Vehicle_Modification</b><br>
 * Generated     : <b>2015/06/25 16:19:00</b><br>
 * Description   : Helper class for script<br>
 * Original Host : Windows 7 x86 6.1 <br>
 * 
 * @since  June 25, 2015
 * @author horned
 */
public abstract class Vehicle_ModificationHelper extends RationalTestScript
{
	/**
	 * htmlBrowser: with default state.
	 *		.class : Html.HtmlBrowser
	 * 		.browserName : MS Internet Explorer
	 * 		.processName : iexplore.exe
	 */
	protected BrowserTestObject browser_htmlBrowser() 
	{
		return new BrowserTestObject(
                        getMappedTestObject("browser_htmlBrowser"));
	}
	/**
	 * htmlBrowser: with specific test context and state.
	 *		.class : Html.HtmlBrowser
	 * 		.browserName : MS Internet Explorer
	 * 		.processName : iexplore.exe
	 */
	protected BrowserTestObject browser_htmlBrowser(TestObject anchor, long flags) 
	{
		return new BrowserTestObject(
                        getMappedTestObject("browser_htmlBrowser"), anchor, flags);
	}
	
	/**
	 * AlloyWheels: with default state.
	 *		.id : 
	 * 		.value : Alloy Wheels
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 10
	 */
	protected GuiTestObject label_alloyWheels() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_alloyWheels"));
	}
	/**
	 * AlloyWheels: with specific test context and state.
	 *		.id : 
	 * 		.value : Alloy Wheels
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 10
	 */
	protected GuiTestObject label_alloyWheels(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_alloyWheels"), anchor, flags);
	}
	
	/**
	 * BullBars: with default state.
	 *		.id : 
	 * 		.value : Bull Bars
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 15
	 */
	protected GuiTestObject label_bullBars() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_bullBars"));
	}
	/**
	 * BullBars: with specific test context and state.
	 *		.id : 
	 * 		.value : Bull Bars
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 15
	 */
	protected GuiTestObject label_bullBars(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_bullBars"), anchor, flags);
	}
	
	/**
	 * DualControl: with default state.
	 *		.id : 
	 * 		.value : Dual Control
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 16
	 */
	protected GuiTestObject label_dualControl() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_dualControl"));
	}
	/**
	 * DualControl: with specific test context and state.
	 *		.id : 
	 * 		.value : Dual Control
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 16
	 */
	protected GuiTestObject label_dualControl(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_dualControl"), anchor, flags);
	}
	
	/**
	 * FrontSpoilerAirDam: with default state.
	 *		.id : 
	 * 		.value : Front Spoiler / Air Dam
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 11
	 */
	protected GuiTestObject label_frontSpoilerAirDam() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_frontSpoilerAirDam"));
	}
	/**
	 * FrontSpoilerAirDam: with specific test context and state.
	 *		.id : 
	 * 		.value : Front Spoiler / Air Dam
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 11
	 */
	protected GuiTestObject label_frontSpoilerAirDam(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_frontSpoilerAirDam"), anchor, flags);
	}
	
	/**
	 * HandControls: with default state.
	 *		.id : 
	 * 		.value : Hand Controls
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 17
	 */
	protected GuiTestObject label_handControls() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_handControls"));
	}
	/**
	 * HandControls: with specific test context and state.
	 *		.id : 
	 * 		.value : Hand Controls
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 17
	 */
	protected GuiTestObject label_handControls(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_handControls"), anchor, flags);
	}
	
	/**
	 * LockingWheelNuts: with default state.
	 *		.id : 
	 * 		.value : Locking Wheel Nuts
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 12
	 */
	protected GuiTestObject label_lockingWheelNuts() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_lockingWheelNuts"));
	}
	/**
	 * LockingWheelNuts: with specific test context and state.
	 *		.id : 
	 * 		.value : Locking Wheel Nuts
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 12
	 */
	protected GuiTestObject label_lockingWheelNuts(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_lockingWheelNuts"), anchor, flags);
	}
	
	/**
	 * No: with default state.
	 *		.id : 
	 * 		.value : No 
	 * 		.class : Html.LABEL
	 * 		.title : 
	 * 		.classIndex : 8
	 */
	protected GuiTestObject label_no() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_no"));
	}
	/**
	 * No: with specific test context and state.
	 *		.id : 
	 * 		.value : No 
	 * 		.class : Html.LABEL
	 * 		.title : 
	 * 		.classIndex : 8
	 */
	protected GuiTestObject label_no(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_no"), anchor, flags);
	}
	
	/**
	 * RearRoofSpoiler: with default state.
	 *		.id : 
	 * 		.value : Rear Roof Spoiler
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 13
	 */
	protected GuiTestObject label_rearRoofSpoiler() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_rearRoofSpoiler"));
	}
	/**
	 * RearRoofSpoiler: with specific test context and state.
	 *		.id : 
	 * 		.value : Rear Roof Spoiler
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 13
	 */
	protected GuiTestObject label_rearRoofSpoiler(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_rearRoofSpoiler"), anchor, flags);
	}
	
	/**
	 * RearSpoilerAerofoil: with default state.
	 *		.id : 
	 * 		.value : Rear Spoiler / Aerofoil
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 14
	 */
	protected GuiTestObject label_rearSpoilerAerofoil() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_rearSpoilerAerofoil"));
	}
	/**
	 * RearSpoilerAerofoil: with specific test context and state.
	 *		.id : 
	 * 		.value : Rear Spoiler / Aerofoil
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 14
	 */
	protected GuiTestObject label_rearSpoilerAerofoil(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_rearSpoilerAerofoil"), anchor, flags);
	}
	
	/**
	 * Yes: with default state.
	 *		.id : 
	 * 		.value : Yes 
	 * 		.class : Html.LABEL
	 * 		.title : 
	 * 		.classIndex : 7
	 */
	protected GuiTestObject label_yes() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_yes"));
	}
	/**
	 * Yes: with specific test context and state.
	 *		.id : 
	 * 		.value : Yes 
	 * 		.class : Html.LABEL
	 * 		.title : 
	 * 		.classIndex : 7
	 */
	protected GuiTestObject label_yes(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_yes"), anchor, flags);
	}
	
	

	protected Vehicle_ModificationHelper()
	{
		setScriptName("Motor_MK2.The__Car.Vehicle_Modification");
	}
	
}

