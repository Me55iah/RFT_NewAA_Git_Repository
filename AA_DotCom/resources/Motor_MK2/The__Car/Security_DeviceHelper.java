// DO NOT EDIT: This file is automatically generated.
//
// Only the associated template file should be edited directly.
// Helper class files are automatically regenerated from the template
// files at various times, including record actions and test object
// insertion actions.  Any changes made directly to a helper class
// file will be lost when automatically updated.

package resources.Motor_MK2.The__Car;
import Utilities.AA_SuperHelper;
import com.rational.test.ft.object.interfaces.*;
import com.rational.test.ft.object.interfaces.SAP.*;
import com.rational.test.ft.object.interfaces.WPF.*;
import com.rational.test.ft.object.interfaces.siebel.*;
import com.rational.test.ft.object.interfaces.flex.*;
import com.rational.test.ft.object.interfaces.dojo.*;
import com.rational.test.ft.object.interfaces.generichtmlsubdomain.*;
import com.rational.test.ft.script.*;
import com.rational.test.ft.vp.IFtVerificationPoint;
import com.ibm.rational.test.ft.object.interfaces.sapwebportal.*;
/**
 * Script Name   : <b>Security_Device</b><br>
 * Generated     : <b>2015/07/29 13:44:09</b><br>
 * Description   : Helper class for script<br>
 * Original Host : Windows 7 x86 6.1 <br>
 * 
 * @since  July 29, 2015
 * @author horned
 */
public abstract class Security_DeviceHelper extends Utilities.AA_SuperHelper
{
	/**
	 * htmlBrowser: with default state.
	 *		.class : Html.HtmlBrowser
	 * 		.browserName : MS Internet Explorer
	 * 		.processName : iexplore.exe
	 */
	protected BrowserTestObject iE() 
	{
		return new BrowserTestObject(
                        getMappedTestObject("iE"));
	}
	/**
	 * htmlBrowser: with specific test context and state.
	 *		.class : Html.HtmlBrowser
	 * 		.browserName : MS Internet Explorer
	 * 		.processName : iexplore.exe
	 */
	protected BrowserTestObject iE(TestObject anchor, long flags) 
	{
		return new BrowserTestObject(
                        getMappedTestObject("iE"), anchor, flags);
	}
	
	/**
	 * No: with default state.
	 *		.id : 
	 * 		.value : No 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 19
	 */
	protected GuiTestObject label_SecurityDevice_no() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_SecurityDevice_no"));
	}
	/**
	 * No: with specific test context and state.
	 *		.id : 
	 * 		.value : No 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 19
	 */
	protected GuiTestObject label_SecurityDevice_no(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_SecurityDevice_no"), anchor, flags);
	}
	
	/**
	 * AdditionalDevice: with default state.
	 *		.id : 
	 * 		.value : Additional device 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 22
	 */
	protected GuiTestObject label_additionalDevice() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_additionalDevice"));
	}
	/**
	 * AdditionalDevice: with specific test context and state.
	 *		.id : 
	 * 		.value : Additional device 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 22
	 */
	protected GuiTestObject label_additionalDevice(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_additionalDevice"), anchor, flags);
	}
	
	/**
	 * ManufacturerOptionalExtra: with default state.
	 *		.id : 
	 * 		.value : Manufacturer optional extra 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 21
	 */
	protected GuiTestObject label_manufacturerOptionalExtr() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_manufacturerOptionalExtr"));
	}
	/**
	 * ManufacturerOptionalExtra: with specific test context and state.
	 *		.id : 
	 * 		.value : Manufacturer optional extra 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 21
	 */
	protected GuiTestObject label_manufacturerOptionalExtr(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_manufacturerOptionalExtr"), anchor, flags);
	}
	
	/**
	 * ManufacturerStandardFit: with default state.
	 *		.id : 
	 * 		.value : Manufacturer standard-fit 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 20
	 */
	protected GuiTestObject label_manufacturerStandardFit() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_manufacturerStandardFit"));
	}
	/**
	 * ManufacturerStandardFit: with specific test context and state.
	 *		.id : 
	 * 		.value : Manufacturer standard-fit 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 20
	 */
	protected GuiTestObject label_manufacturerStandardFit(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_manufacturerStandardFit"), anchor, flags);
	}
	
	/**
	 * No: with default state.
	 *		.id : 
	 * 		.value : No 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 27
	 */
	protected GuiTestObject label_no() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_no"));
	}
	/**
	 * No: with specific test context and state.
	 *		.id : 
	 * 		.value : No 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 27
	 */
	protected GuiTestObject label_no(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_no"), anchor, flags);
	}
	
	/**
	 * Yes: with default state.
	 *		.id : 
	 * 		.value : Yes 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 26
	 */
	protected GuiTestObject label_yes() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_yes"));
	}
	/**
	 * Yes: with specific test context and state.
	 *		.id : 
	 * 		.value : Yes 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 26
	 */
	protected GuiTestObject label_yes(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_yes"), anchor, flags);
	}
	
	/**
	 * aaMotorVehicleSecuritydevice0Fittedby: with default state.
	 *		.text : Please select Device Manf Approved Fitter DIY fitted Insurer Approved Fitter Veh ...
	 * 		.id : security-fitted
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : aa.motor.vehicle.securitydevice[0].fittedby
	 * 		.classIndex : 2
	 */
	protected SelectGuiSubitemTestObject list_aaMotorSecuritydevice_Fitter() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_aaMotorSecuritydevice_Fitter"));
	}
	/**
	 * aaMotorVehicleSecuritydevice0Fittedby: with specific test context and state.
	 *		.text : Please select Device Manf Approved Fitter DIY fitted Insurer Approved Fitter Veh ...
	 * 		.id : security-fitted
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : aa.motor.vehicle.securitydevice[0].fittedby
	 * 		.classIndex : 2
	 */
	protected SelectGuiSubitemTestObject list_aaMotorSecuritydevice_Fitter(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_aaMotorSecuritydevice_Fitter"), anchor, flags);
	}
	
	/**
	 * aaMotorVehicleSecuritydevice0Devicetype: with default state.
	 *		.text : Please select AA Electronic Car Immobiliser  AA Electronic Immobiliser  AA Foxgu ...
	 * 		.id : security-device
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : aa.motor.vehicle.securitydevice[0].devicetype
	 * 		.classIndex : 1
	 */
	protected SelectGuiSubitemTestObject list_aaMotorSecuritydevice_Model() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_aaMotorSecuritydevice_Model"));
	}
	/**
	 * aaMotorVehicleSecuritydevice0Devicetype: with specific test context and state.
	 *		.text : Please select AA Electronic Car Immobiliser  AA Electronic Immobiliser  AA Foxgu ...
	 * 		.id : security-device
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : aa.motor.vehicle.securitydevice[0].devicetype
	 * 		.classIndex : 1
	 */
	protected SelectGuiSubitemTestObject list_aaMotorSecuritydevice_Model(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_aaMotorSecuritydevice_Model"), anchor, flags);
	}
	
	

	protected Security_DeviceHelper()
	{
		setScriptName("Motor_MK2.The__Car.Security_Device");
	}
	
}

