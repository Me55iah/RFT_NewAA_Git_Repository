// DO NOT EDIT: This file is automatically generated.
//
// Only the associated template file should be edited directly.
// Helper class files are automatically regenerated from the template
// files at various times, including record actions and test object
// insertion actions.  Any changes made directly to a helper class
// file will be lost when automatically updated.

package resources.Motor_MK2.The__Car;
import Utilities.AA_SuperHelper;
import com.rational.test.ft.object.interfaces.*;
import com.rational.test.ft.object.interfaces.SAP.*;
import com.rational.test.ft.object.interfaces.WPF.*;
import com.rational.test.ft.object.interfaces.siebel.*;
import com.rational.test.ft.object.interfaces.flex.*;
import com.rational.test.ft.object.interfaces.dojo.*;
import com.rational.test.ft.object.interfaces.generichtmlsubdomain.*;
import com.rational.test.ft.script.*;
import com.rational.test.ft.vp.IFtVerificationPoint;
import com.ibm.rational.test.ft.object.interfaces.sapwebportal.*;
/**
 * Script Name   : <b>Fuel_Type</b><br>
 * Generated     : <b>2015/06/30 09:34:25</b><br>
 * Description   : Helper class for script<br>
 * Original Host : Windows 7 x86 6.1 <br>
 * 
 * @since  June 30, 2015
 * @author horned
 */
public abstract class Fuel_TypeHelper extends Utilities.AA_SuperHelper
{
	/**
	 * Diesel: with default state.
	 *		.id : 
	 * 		.value : Diesel 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 6
	 */
	protected GuiTestObject label_diesel() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_diesel"));
	}
	/**
	 * Diesel: with specific test context and state.
	 *		.id : 
	 * 		.value : Diesel 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 6
	 */
	protected GuiTestObject label_diesel(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_diesel"), anchor, flags);
	}
	
	/**
	 * Electric: with default state.
	 *		.id : 
	 * 		.value : Electric 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 7
	 */
	protected GuiTestObject label_electric() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_electric"));
	}
	/**
	 * Electric: with specific test context and state.
	 *		.id : 
	 * 		.value : Electric 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 7
	 */
	protected GuiTestObject label_electric(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_electric"), anchor, flags);
	}
	
	/**
	 * HybridOther: with default state.
	 *		.id : 
	 * 		.value : Hybrid/Other 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 8
	 */
	protected GuiTestObject label_hybridOther() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_hybridOther"));
	}
	/**
	 * HybridOther: with specific test context and state.
	 *		.id : 
	 * 		.value : Hybrid/Other 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 8
	 */
	protected GuiTestObject label_hybridOther(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_hybridOther"), anchor, flags);
	}
	
	/**
	 * Petrol: with default state.
	 *		.id : 
	 * 		.value : Petrol 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 5
	 */
	protected GuiTestObject label_petrol() 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_petrol"));
	}
	/**
	 * Petrol: with specific test context and state.
	 *		.id : 
	 * 		.value : Petrol 
	 * 		.title : 
	 * 		.class : Html.LABEL
	 * 		.classIndex : 5
	 */
	protected GuiTestObject label_petrol(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("label_petrol"), anchor, flags);
	}
	
	

	protected Fuel_TypeHelper()
	{
		setScriptName("Motor_MK2.The__Car.Fuel_Type");
	}
	
}

